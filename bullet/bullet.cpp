/* Generated by Cython 0.27.3 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_27_3"
#define CYTHON_FUTURE_DIVISION 0
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (0 && PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX < 0x030700A0 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject **args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject **args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif


#define __PYX_ERR(f_index, lineno, Ln_error) \
{ \
  __pyx_filename = __pyx_f[f_index]; __pyx_lineno = lineno; __pyx_clineno = __LINE__; goto Ln_error; \
}

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__bullet__bullet
#define __PYX_HAVE_API__bullet__bullet
#include <stdint.h>
#include <string.h>
#include <stdio.h>
#include "numpy/arrayobject.h"
#include "numpy/ufuncobject.h"
#include "btBulletCollisionCommon.h"
#include "BulletCollision/CollisionShapes/btBox2dShape.h"
#include "btBulletDynamicsCommon.h"
#include "BulletCollision/CollisionShapes/btCylinderShape.h"
#include "BulletCollision/CollisionShapes/btStaticPlaneShape.h"
#include "BulletCollision/BroadphaseCollision/btOverlappingPairCache.h"
#include "BulletCollision/CollisionDispatch/btGhostObject.h"
#include "BulletDynamics/Character/btKinematicCharacterController.h"
#include "LinearMath/btIDebugDraw.h"
#include "bulletdebugdraw.h"
#include "overr.hpp"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

/* Header.proto */
#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "stringsource",
  "bullet/bullet.pyx",
  "__init__.pxd",
  "type.pxd",
};

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":743
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":744
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":745
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":746
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":750
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":751
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":752
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":753
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":757
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":758
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":767
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":768
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":769
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":771
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":772
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":773
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":775
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":776
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":778
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":779
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":780
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif
static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif
static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);


/*--- Type declarations ---*/
struct __pyx_obj_6bullet_6bullet_Vector3;
struct __pyx_obj_6bullet_6bullet_Quaternion;
struct __pyx_obj_6bullet_6bullet_CollisionShape;
struct __pyx_obj_6bullet_6bullet_ConvexShape;
struct __pyx_obj_6bullet_6bullet_Box2dShape;
struct __pyx_obj_6bullet_6bullet_BoxShape;
struct __pyx_obj_6bullet_6bullet_SphereShape;
struct __pyx_obj_6bullet_6bullet_CapsuleShape;
struct __pyx_obj_6bullet_6bullet_CylinderShape;
struct __pyx_obj_6bullet_6bullet_CylinderShapeX;
struct __pyx_obj_6bullet_6bullet_CylinderShapeZ;
struct __pyx_obj_6bullet_6bullet_StaticPlaneShape;
struct __pyx_obj_6bullet_6bullet_IndexedMesh;
struct __pyx_obj_6bullet_6bullet_StridingMeshInterface;
struct __pyx_obj_6bullet_6bullet_TriangleIndexVertexArray;
struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape;
struct __pyx_obj_6bullet_6bullet_Transform;
struct __pyx_obj_6bullet_6bullet_BroadphaseProxy;
struct __pyx_obj_6bullet_6bullet_CollisionObject;
struct __pyx_obj_6bullet_6bullet_MotionState;
struct __pyx_obj_6bullet_6bullet_overridableMotionState;
struct __pyx_obj_6bullet_6bullet_DefaultMotionState;
struct __pyx_obj_6bullet_6bullet_RigidBody;
struct __pyx_obj_6bullet_6bullet_ActionInterface;
struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface;
struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject;
struct __pyx_obj_6bullet_6bullet_KinematicCharacterController;
struct __pyx_obj_6bullet_6bullet_CollisionDispatcher;
struct __pyx_obj_6bullet_6bullet_OverlappingPairCache;
struct __pyx_obj_6bullet_6bullet_HashedOverlappingPairCache;
struct __pyx_obj_6bullet_6bullet_BroadphaseInterface;
struct __pyx_obj_6bullet_6bullet_AxisSweep3;
struct __pyx_obj_6bullet_6bullet_ConstraintSolver;
struct __pyx_obj_6bullet_6bullet_SequentialImpulseConstraintSolver;
struct __pyx_obj_6bullet_6bullet_CollisionWorld;
struct __pyx_obj_6bullet_6bullet_RayResult;
struct __pyx_obj_6bullet_6bullet_DynamicsWorld;
struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":782
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":783
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":784
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":786
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;

/* "cBullet.pxd":26
 * 
 * # Cython template arguments can't be literal pointers
 * ctypedef btCollisionObject *btCollisionObjectP             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "btBulletCollisionCommon.h":
 */
typedef btCollisionObject *__pyx_t_6bullet_7cBullet_btCollisionObjectP;
struct __pyx_t_6bullet_6bullet_ClosestRayResultCallback;
struct __pyx_t_6bullet_6bullet_ClosestRayResultCallback : public btCollisionWorld::RayResultCallback {

  /* "bullet/bullet.pyx":1731
 * 
 * 
 * cdef cppclass ClosestRayResultCallback(RayResultCallback):             # <<<<<<<<<<<<<<
 *     btVector3 m_rayFromWorld
 *     btVector3 m_rayToWorld
 */
  btVector3 m_rayFromWorld;
  btVector3 m_rayToWorld;
  btVector3 m_hitNormalWorld;
  btVector3 m_hitPointWorld;
  void __pyx_f___init__ClosestRayResultCallback(void);
  virtual void build(btVector3 const &, btVector3 const &);
  virtual btScalar addSingleResult(btCollisionWorld::LocalRayResult &, bool);
  __pyx_t_6bullet_6bullet_ClosestRayResultCallback(void) {
    __pyx_f___init__ClosestRayResultCallback();
  }
  virtual ~__pyx_t_6bullet_6bullet_ClosestRayResultCallback() {
  }
};

/* "bullet/bullet.pyx":25
 * 
 * 
 * cdef class Vector3:             # <<<<<<<<<<<<<<
 *     """
 *     A Vector3 represents a point or vector in three-dimensional space.
 */
struct __pyx_obj_6bullet_6bullet_Vector3 {
  PyObject_HEAD
  struct __pyx_vtabstruct_6bullet_6bullet_Vector3 *__pyx_vtab;
  btScalar x;
  btScalar y;
  btScalar z;
};


/* "bullet/bullet.pyx":114
 * 
 * 
 * cdef class Quaternion:             # <<<<<<<<<<<<<<
 *     """
 *     A Quaternion represents a point or vector in four-dimensional space.  It is
 */
struct __pyx_obj_6bullet_6bullet_Quaternion {
  PyObject_HEAD
  struct __pyx_vtabstruct_6bullet_6bullet_Quaternion *__pyx_vtab;
  btQuaternion *quaternion;
};


/* "bullet/bullet.pyx":209
 * 
 * 
 * cdef class CollisionShape:             # <<<<<<<<<<<<<<
 *     """
 *     A CollisionShape defines the shape of an object in a CollisionWorld.  Shapes
 */
struct __pyx_obj_6bullet_6bullet_CollisionShape {
  PyObject_HEAD
  btCollisionShape *thisptr;
};


/* "bullet/bullet.pyx":230
 * 
 * 
 * cdef class ConvexShape(CollisionShape):             # <<<<<<<<<<<<<<
 *     """
 *     A ConvexShape is a shape that curves outwards only.  This is a base class
 */
struct __pyx_obj_6bullet_6bullet_ConvexShape {
  struct __pyx_obj_6bullet_6bullet_CollisionShape __pyx_base;
};


/* "bullet/bullet.pyx":240
 * 
 * 
 * cdef class Box2dShape(ConvexShape):             # <<<<<<<<<<<<<<
 *     """
 *     A Box2dShape is a box primitive around the origin, its sides axis aligned
 */
struct __pyx_obj_6bullet_6bullet_Box2dShape {
  struct __pyx_obj_6bullet_6bullet_ConvexShape __pyx_base;
};


/* "bullet/bullet.pyx":254
 * 
 * 
 * cdef class BoxShape(ConvexShape):             # <<<<<<<<<<<<<<
 *     """
 *     A BoxShape is a box primitive around the origin, its sides axis aligned
 */
struct __pyx_obj_6bullet_6bullet_BoxShape {
  struct __pyx_obj_6bullet_6bullet_ConvexShape __pyx_base;
};


/* "bullet/bullet.pyx":268
 * 
 * 
 * cdef class SphereShape(ConvexShape):             # <<<<<<<<<<<<<<
 *     """
 *     A SphereShape is a sphere around the origin, with a specified radius.
 */
struct __pyx_obj_6bullet_6bullet_SphereShape {
  struct __pyx_obj_6bullet_6bullet_ConvexShape __pyx_base;
};


/* "bullet/bullet.pyx":286
 * 
 * 
 * cdef class CapsuleShape(ConvexShape):             # <<<<<<<<<<<<<<
 *     """
 *     A CapsuleShape is a capsule around the Y axis.  A capsule is a cylinder with
 */
struct __pyx_obj_6bullet_6bullet_CapsuleShape {
  struct __pyx_obj_6bullet_6bullet_ConvexShape __pyx_base;
};


/* "bullet/bullet.pyx":298
 * 
 * 
 * cdef class CylinderShape(ConvexShape):             # <<<<<<<<<<<<<<
 *     """
 *     A CylinderShape is a cylinder with its central axis aligned with the Y axis.
 */
struct __pyx_obj_6bullet_6bullet_CylinderShape {
  struct __pyx_obj_6bullet_6bullet_ConvexShape __pyx_base;
};


/* "bullet/bullet.pyx":319
 * 
 * 
 * cdef class CylinderShapeX(CylinderShape):             # <<<<<<<<<<<<<<
 *     """
 *     A CylinderShapeX is a cylinder with its central axis aligned with the X
 */
struct __pyx_obj_6bullet_6bullet_CylinderShapeX {
  struct __pyx_obj_6bullet_6bullet_CylinderShape __pyx_base;
};


/* "bullet/bullet.pyx":332
 * 
 * 
 * cdef class CylinderShapeZ(CylinderShape):             # <<<<<<<<<<<<<<
 *     """
 *     A CylinderShapeZ is a cylinder with its central axis aligned with the Z
 */
struct __pyx_obj_6bullet_6bullet_CylinderShapeZ {
  struct __pyx_obj_6bullet_6bullet_CylinderShape __pyx_base;
};


/* "bullet/bullet.pyx":345
 * 
 * 
 * cdef class StaticPlaneShape(CollisionShape):             # <<<<<<<<<<<<<<
 *     """
 *     A StaticPlaneShape is an immobile plane.
 */
struct __pyx_obj_6bullet_6bullet_StaticPlaneShape {
  struct __pyx_obj_6bullet_6bullet_CollisionShape __pyx_base;
};


/* "bullet/bullet.pyx":357
 * 
 * 
 * cdef class IndexedMesh:             # <<<<<<<<<<<<<<
 *     """
 *     An IndexedMesh is a vertex array and an array of index data into that
 */
struct __pyx_obj_6bullet_6bullet_IndexedMesh {
  PyObject_HEAD
  struct __pyx_vtabstruct_6bullet_6bullet_IndexedMesh *__pyx_vtab;
  btIndexedMesh *thisptr;
};


/* "bullet/bullet.pyx":457
 * 
 * 
 * cdef class StridingMeshInterface:             # <<<<<<<<<<<<<<
 *     """
 *     A StridingMeshInterface is an object suitable for use in defining a triangle
 */
struct __pyx_obj_6bullet_6bullet_StridingMeshInterface {
  PyObject_HEAD
  btStridingMeshInterface *thisptr;
};


/* "bullet/bullet.pyx":481
 * 
 * 
 * cdef class TriangleIndexVertexArray(StridingMeshInterface):             # <<<<<<<<<<<<<<
 *     """
 *     A TriangleIndexVertexArray is a striding mesh defined in terms of an array
 */
struct __pyx_obj_6bullet_6bullet_TriangleIndexVertexArray {
  struct __pyx_obj_6bullet_6bullet_StridingMeshInterface __pyx_base;
};


/* "bullet/bullet.pyx":511
 * 
 * 
 * cdef class BvhTriangleMeshShape(ConvexShape):             # <<<<<<<<<<<<<<
 *     """
 *     A BvhTriangleMeshShape is a shape defined by an array of triangle vertex
 */
struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape {
  struct __pyx_obj_6bullet_6bullet_ConvexShape __pyx_base;
  struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *stride;
};


/* "bullet/bullet.pyx":544
 * 
 * 
 * cdef class Transform:             # <<<<<<<<<<<<<<
 *     """
 *     A Transform represents an a translation and rotation.
 */
struct __pyx_obj_6bullet_6bullet_Transform {
  PyObject_HEAD
  btTransform *thisptr;
};


/* "bullet/bullet.pyx":604
 * 
 * 
 * cdef class BroadphaseProxy:             # <<<<<<<<<<<<<<
 *     """
 *     A BroadphaseProxy wraps collision information about a collision object for
 */
struct __pyx_obj_6bullet_6bullet_BroadphaseProxy {
  PyObject_HEAD
  short collisionFilterGroup;
  short collisionFilterMask;
};


/* "bullet/bullet.pyx":21
 * 
 * # Forward declare some things because of circularity in the API.
 * cdef class CollisionObject             # <<<<<<<<<<<<<<
 * 
 * 
 */
struct __pyx_obj_6bullet_6bullet_CollisionObject {
  PyObject_HEAD
  PyObject *__weakref__;
  btCollisionObject *thisptr;
  struct __pyx_obj_6bullet_6bullet_CollisionShape *_shape;
};


/* "bullet/bullet.pyx":780
 * 
 * 
 * cdef class MotionState:             # <<<<<<<<<<<<<<
 *     """
 *     A MotionState is a primarily an object to provide callback methods to the
 */
struct __pyx_obj_6bullet_6bullet_MotionState {
  PyObject_HEAD
  btMotionState *thisptr;
};


/* "bullet/bullet.pyx":844
 * #         # worldTrans = mInitialPosition
 * 
 * cdef class overridableMotionState(MotionState): # todo: turn into abstract             # <<<<<<<<<<<<<<
 *     cdef Transform _nTrans
 *     def __cinit__(self, Transform initialTransformation):
 */
struct __pyx_obj_6bullet_6bullet_overridableMotionState {
  struct __pyx_obj_6bullet_6bullet_MotionState __pyx_base;
  struct __pyx_obj_6bullet_6bullet_Transform *_nTrans;
};


/* "bullet/bullet.pyx":880
 * 
 * 
 * cdef class DefaultMotionState(MotionState):             # <<<<<<<<<<<<<<
 *     """
 *     A DefaultMotionState is a MotionState which keeps track of the last
 */
struct __pyx_obj_6bullet_6bullet_DefaultMotionState {
  struct __pyx_obj_6bullet_6bullet_MotionState __pyx_base;
};


/* "bullet/bullet.pyx":906
 * 
 * 
 * cdef class RigidBody(CollisionObject):             # <<<<<<<<<<<<<<
 *     """
 *     A RigidBody is an object which can be added to a DynamicsWorld and involved
 */
struct __pyx_obj_6bullet_6bullet_RigidBody {
  struct __pyx_obj_6bullet_6bullet_CollisionObject __pyx_base;
  struct __pyx_obj_6bullet_6bullet_MotionState *motion;
  struct __pyx_obj_6bullet_6bullet_CollisionShape *shape;
};


/* "bullet/bullet.pyx":1233
 * 
 * 
 * cdef class ActionInterface:             # <<<<<<<<<<<<<<
 *     """
 *     ActionInterface is a base class for objects in a DynamicsWorld which are not
 */
struct __pyx_obj_6bullet_6bullet_ActionInterface {
  PyObject_HEAD
  btActionInterface *thisptr;
};


/* "bullet/bullet.pyx":1249
 * 
 * 
 * cdef class CharacterControllerInterface(ActionInterface):             # <<<<<<<<<<<<<<
 *     """
 *     A CharacterControllerInterface is an ActionInterface which allows walking
 */
struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface {
  struct __pyx_obj_6bullet_6bullet_ActionInterface __pyx_base;
};


/* "bullet/bullet.pyx":1293
 * 
 * 
 * cdef class PairCachingGhostObject(CollisionObject):             # <<<<<<<<<<<<<<
 *      """
 *      A PairCachingGhostObject is a CollisionObject which keeps track of all the
 */
struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject {
  struct __pyx_obj_6bullet_6bullet_CollisionObject __pyx_base;
};


/* "bullet/bullet.pyx":1305
 * 
 * 
 * cdef class KinematicCharacterController(CharacterControllerInterface):             # <<<<<<<<<<<<<<
 *     """
 *     A KinematicCharacterController is a CharacterControllerInterface which
 */
struct __pyx_obj_6bullet_6bullet_KinematicCharacterController {
  struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface __pyx_base;
  PyObject *__weakref__;
  struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *ghost;
};


/* "bullet/bullet.pyx":1355
 * 
 * 
 * cdef class CollisionDispatcher:             # <<<<<<<<<<<<<<
 *     """
 *     A CollisionDispatcher implements pairwise collision detection.  It supports
 */
struct __pyx_obj_6bullet_6bullet_CollisionDispatcher {
  PyObject_HEAD
  btCollisionConfiguration *config;
  btDispatcher *thisptr;
};


/* "bullet/bullet.pyx":1383
 * 
 * 
 * cdef class OverlappingPairCache:             # <<<<<<<<<<<<<<
 *     """
 *     An OverlappingPairCache manages the addition, removal, and storage of
 */
struct __pyx_obj_6bullet_6bullet_OverlappingPairCache {
  PyObject_HEAD
  btOverlappingPairCache *thisptr;
};


/* "bullet/bullet.pyx":1410
 * 
 * 
 * cdef class HashedOverlappingPairCache(OverlappingPairCache):             # <<<<<<<<<<<<<<
 *     """
 *     A HashedOverlappingPairCache manages the addition, removal, and storage of
 */
struct __pyx_obj_6bullet_6bullet_HashedOverlappingPairCache {
  struct __pyx_obj_6bullet_6bullet_OverlappingPairCache __pyx_base;
};


/* "bullet/bullet.pyx":1422
 * 
 * 
 * cdef class BroadphaseInterface:             # <<<<<<<<<<<<<<
 *     """
 *     A BroadphaseInterface generates lists of potentially colliding pairs.  It is
 */
struct __pyx_obj_6bullet_6bullet_BroadphaseInterface {
  PyObject_HEAD
  btBroadphaseInterface *thisptr;
  struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *_paircache;
};


/* "bullet/bullet.pyx":1449
 * 
 * 
 * cdef class AxisSweep3(BroadphaseInterface):             # <<<<<<<<<<<<<<
 *     """
 *     An AxisSweep3 is a BroadphaseInterface implemented using the sweep and prune
 */
struct __pyx_obj_6bullet_6bullet_AxisSweep3 {
  struct __pyx_obj_6bullet_6bullet_BroadphaseInterface __pyx_base;
};


/* "bullet/bullet.pyx":1469
 * 
 * 
 * cdef class ConstraintSolver:             # <<<<<<<<<<<<<<
 *     """
 *     A ConstraintSolver determines what contact forces to apply.
 */
struct __pyx_obj_6bullet_6bullet_ConstraintSolver {
  PyObject_HEAD
  btConstraintSolver *thisptr;
};


/* "bullet/bullet.pyx":1484
 * 
 * 
 * cdef class SequentialImpulseConstraintSolver(ConstraintSolver):             # <<<<<<<<<<<<<<
 *     """
 *     A SequentialImpulseConstraintSolver is a ConstraintSolver based on a fast
 */
struct __pyx_obj_6bullet_6bullet_SequentialImpulseConstraintSolver {
  struct __pyx_obj_6bullet_6bullet_ConstraintSolver __pyx_base;
};


/* "bullet/bullet.pyx":1500
 * 
 * 
 * cdef class CollisionWorld:             # <<<<<<<<<<<<<<
 *     """
 *     A CollisionWorld is a container for CollisionObjects which can detect
 */
struct __pyx_obj_6bullet_6bullet_CollisionWorld {
  PyObject_HEAD
  PyObject *__weakref__;
  btCollisionWorld *thisptr;
  PythonDebugDraw *debugDraw;
  struct _object *dispatcher;
  struct _object *broadphase;
};


/* "bullet/bullet.pyx":1702
 * 
 * 
 * cdef class RayResult:             # <<<<<<<<<<<<<<
 *     cdef readonly float closestHitFraction
 *     cdef readonly CollisionObject collisionObject
 */
struct __pyx_obj_6bullet_6bullet_RayResult {
  PyObject_HEAD
  float closestHitFraction;
  struct __pyx_obj_6bullet_6bullet_CollisionObject *collisionObject;
  int collisionFilterGroup;
  int collisionFilterMask;
  int flags;
  struct __pyx_obj_6bullet_6bullet_Vector3 *rayFromWorld;
  struct __pyx_obj_6bullet_6bullet_Vector3 *rayToWorld;
  struct __pyx_obj_6bullet_6bullet_Vector3 *hitNormalWorld;
  struct __pyx_obj_6bullet_6bullet_Vector3 *hitPointWorld;
};


/* "bullet/bullet.pyx":1760
 * cdef dict _actions = {}
 * 
 * cdef class DynamicsWorld(CollisionWorld):             # <<<<<<<<<<<<<<
 *     """
 *     A DynamicsWorld is a container for RigidBodies which implements dynamics (ie
 */
struct __pyx_obj_6bullet_6bullet_DynamicsWorld {
  struct __pyx_obj_6bullet_6bullet_CollisionWorld __pyx_base;
};


/* "bullet/bullet.pyx":1819
 * 
 * 
 * cdef class DiscreteDynamicsWorld(DynamicsWorld):             # <<<<<<<<<<<<<<
 *     """
 *     A DiscreteDynamicsWorld is a DynamicsWorld in which time passes in fixed
 */
struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld {
  struct __pyx_obj_6bullet_6bullet_DynamicsWorld __pyx_base;
  struct __pyx_obj_6bullet_6bullet_ConstraintSolver *solver;
};



/* "bullet/bullet.pyx":25
 * 
 * 
 * cdef class Vector3:             # <<<<<<<<<<<<<<
 *     """
 *     A Vector3 represents a point or vector in three-dimensional space.
 */

struct __pyx_vtabstruct_6bullet_6bullet_Vector3 {
  PyObject *(*frombtVector3)(btVector3);
  btVector3 (*tobtVector3)(struct __pyx_obj_6bullet_6bullet_Vector3 *);
};
static struct __pyx_vtabstruct_6bullet_6bullet_Vector3 *__pyx_vtabptr_6bullet_6bullet_Vector3;


/* "bullet/bullet.pyx":114
 * 
 * 
 * cdef class Quaternion:             # <<<<<<<<<<<<<<
 *     """
 *     A Quaternion represents a point or vector in four-dimensional space.  It is
 */

struct __pyx_vtabstruct_6bullet_6bullet_Quaternion {
  PyObject *(*frombtQuat)(btQuaternion);
};
static struct __pyx_vtabstruct_6bullet_6bullet_Quaternion *__pyx_vtabptr_6bullet_6bullet_Quaternion;


/* "bullet/bullet.pyx":357
 * 
 * 
 * cdef class IndexedMesh:             # <<<<<<<<<<<<<<
 *     """
 *     An IndexedMesh is a vertex array and an array of index data into that
 */

struct __pyx_vtabstruct_6bullet_6bullet_IndexedMesh {
  enum PHY_ScalarType (*_dtypeToScalarType)(struct __pyx_obj_6bullet_6bullet_IndexedMesh *, PyArrayObject *);
};
static struct __pyx_vtabstruct_6bullet_6bullet_IndexedMesh *__pyx_vtabptr_6bullet_6bullet_IndexedMesh;

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* ArgTypeTest.proto */
#define __Pyx_ArgTypeTest(obj, type, none_allowed, name, exact)\
    ((likely((Py_TYPE(obj) == type) | (none_allowed && (obj == Py_None)))) ? 1 :\
        __Pyx__ArgTypeTest(obj, type, name, exact))
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact);

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, int nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#endif

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* WriteUnraisableException.proto */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

/* KeywordStringCheck.proto */
static int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* GetAttr.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *, PyObject *);

/* GetAttr3.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *, PyObject *, PyObject *);

/* GetModuleGlobalName.proto */
static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name);

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* tp_new.proto */
#define __Pyx_tp_new(type_obj, args) __Pyx_tp_new_kwargs(type_obj, args, NULL)
static CYTHON_INLINE PyObject* __Pyx_tp_new_kwargs(PyObject* type_obj, PyObject* args, PyObject* kwargs) {
    return (PyObject*) (((PyTypeObject*)type_obj)->tp_new((PyTypeObject*)type_obj, args, kwargs));
}

/* ExtTypeTest.proto */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

/* ListAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* py_dict_keys.proto */
static CYTHON_INLINE PyObject* __Pyx_PyDict_Keys(PyObject* d);

/* UnpackUnboundCMethod.proto */
typedef struct {
    PyObject *type;
    PyObject **method_name;
    PyCFunction func;
    PyObject *method;
    int flag;
} __Pyx_CachedCFunction;

/* CallUnboundCMethod0.proto */
static PyObject* __Pyx__CallUnboundCMethod0(__Pyx_CachedCFunction* cfunc, PyObject* self);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CallUnboundCMethod0(cfunc, self)\
    ((likely((cfunc)->func)) ?\
        (likely((cfunc)->flag == METH_NOARGS) ?  (*((cfunc)->func))(self, NULL) :\
         (likely((cfunc)->flag == (METH_VARARGS | METH_KEYWORDS)) ?  ((*(PyCFunctionWithKeywords)(cfunc)->func)(self, __pyx_empty_tuple, NULL)) :\
             ((cfunc)->flag == METH_VARARGS ?  (*((cfunc)->func))(self, __pyx_empty_tuple) :\
              (PY_VERSION_HEX >= 0x030600B1 && (cfunc)->flag == METH_FASTCALL ?\
                (PY_VERSION_HEX >= 0x030700A0 ?\
                    (*(__Pyx_PyCFunctionFast)(cfunc)->func)(self, &PyTuple_GET_ITEM(__pyx_empty_tuple, 0), 0) :\
                    (*(__Pyx_PyCFunctionFastWithKeywords)(cfunc)->func)(self, &PyTuple_GET_ITEM(__pyx_empty_tuple, 0), 0, NULL)) :\
              (PY_VERSION_HEX >= 0x030700A0 && (cfunc)->flag == (METH_FASTCALL | METH_KEYWORDS) ?\
                    (*(__Pyx_PyCFunctionFastWithKeywords)(cfunc)->func)(self, &PyTuple_GET_ITEM(__pyx_empty_tuple, 0), 0, NULL) :\
                    __Pyx__CallUnboundCMethod0(cfunc, self)))))) :\
        __Pyx__CallUnboundCMethod0(cfunc, self))
#else
#define __Pyx_CallUnboundCMethod0(cfunc, self)  __Pyx__CallUnboundCMethod0(cfunc, self)
#endif

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* HasAttr.proto */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *, PyObject *);

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            PyObject* args = PyTuple_Pack(1, key);
            if (likely(args))
                PyErr_SetObject(PyExc_KeyError, args);
            Py_XDECREF(args);
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#else
    #define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#endif

/* RaiseNoneIterError.proto */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

/* CallNextTpTraverse.proto */
static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse);

/* CallNextTpClear.proto */
static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_dealloc);

/* SetupReduce.proto */
static int __Pyx_setup_reduce(PyObject* type_obj);

/* SetVTable.proto */
static int __Pyx_SetVtable(PyObject *dict, void *vtable);

/* GetNameInClass.proto */
static PyObject *__Pyx_GetNameInClass(PyObject *nmspace, PyObject *name);

/* ClassMethod.proto */
#include "descrobject.h"
static PyObject* __Pyx_Method_ClassMethod(PyObject *method);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_short(short value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CppExceptionConversion.proto */
#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::bad_typeid& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

/* Print.proto */
static int __Pyx_Print(PyObject*, PyObject *, int);
#if CYTHON_COMPILING_IN_PYPY || PY_MAJOR_VERSION >= 3
static PyObject* __pyx_print = 0;
static PyObject* __pyx_print_kwargs = 0;
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_bool(bool value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* RealImag.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if defined(__cplusplus) && CYTHON_CCOMPLEX\
        && (defined(_WIN32) || defined(__clang__) || (defined(__GNUC__) && (__GNUC__ >= 5 || __GNUC__ == 4 && __GNUC_MINOR__ >= 4 )) || __cplusplus >= 201103)
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_float(a, b)   ((a)==(b))
    #define __Pyx_c_sum_float(a, b)  ((a)+(b))
    #define __Pyx_c_diff_float(a, b) ((a)-(b))
    #define __Pyx_c_prod_float(a, b) ((a)*(b))
    #define __Pyx_c_quot_float(a, b) ((a)/(b))
    #define __Pyx_c_neg_float(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_float(z) ((z)==(float)0)
    #define __Pyx_c_conj_float(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (::std::abs(z))
        #define __Pyx_c_pow_float(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_float(z) ((z)==0)
    #define __Pyx_c_conj_float(z)    (conjf(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (cabsf(z))
        #define __Pyx_c_pow_float(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_double(a, b)   ((a)==(b))
    #define __Pyx_c_sum_double(a, b)  ((a)+(b))
    #define __Pyx_c_diff_double(a, b) ((a)-(b))
    #define __Pyx_c_prod_double(a, b) ((a)*(b))
    #define __Pyx_c_quot_double(a, b) ((a)/(b))
    #define __Pyx_c_neg_double(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_double(z) ((z)==(double)0)
    #define __Pyx_c_conj_double(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (::std::abs(z))
        #define __Pyx_c_pow_double(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_double(z) ((z)==0)
    #define __Pyx_c_conj_double(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (cabs(z))
        #define __Pyx_c_pow_double(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value);

/* CIntFromPy.proto */
static CYTHON_INLINE short __Pyx_PyInt_As_short(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE bool __Pyx_PyInt_As_bool(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

/* PrintOne.proto */
static int __Pyx_PrintOne(PyObject* stream, PyObject *o);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* PyIdentifierFromString.proto */
#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

/* ModuleImport.proto */
static PyObject *__Pyx_ImportModule(const char *name);

/* TypeImport.proto */
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static PyObject *__pyx_f_6bullet_6bullet_7Vector3_frombtVector3(btVector3 __pyx_v_vec); /* proto*/
static btVector3 __pyx_f_6bullet_6bullet_7Vector3_tobtVector3(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_6bullet_6bullet_10Quaternion_frombtQuat(btQuaternion __pyx_v_quat); /* proto*/
static enum PHY_ScalarType __pyx_f_6bullet_6bullet_11IndexedMesh__dtypeToScalarType(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_IndexedMesh *__pyx_v_self, PyArrayObject *__pyx_v_array); /* proto*/

/* Module declarations from 'libc.stdint' */

/* Module declarations from 'libcpp' */

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'cpython' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'cpython.mem' */

/* Module declarations from 'numpy' */

/* Module declarations from 'numpy' */
static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;
static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *, char *, char *, int *); /*proto*/

/* Module declarations from 'bullet.cBullet' */

/* Module declarations from 'bullet.bullet' */
static PyTypeObject *__pyx_ptype_6bullet_6bullet_CollisionObject = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_Vector3 = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_Quaternion = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_CollisionShape = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_ConvexShape = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_Box2dShape = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_BoxShape = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_SphereShape = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_CapsuleShape = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_CylinderShape = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_CylinderShapeX = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_CylinderShapeZ = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_StaticPlaneShape = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_IndexedMesh = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_StridingMeshInterface = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_TriangleIndexVertexArray = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_BvhTriangleMeshShape = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_Transform = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_BroadphaseProxy = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_MotionState = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_overridableMotionState = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_DefaultMotionState = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_RigidBody = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_ActionInterface = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_CharacterControllerInterface = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_PairCachingGhostObject = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_KinematicCharacterController = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_CollisionDispatcher = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_OverlappingPairCache = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_HashedOverlappingPairCache = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_BroadphaseInterface = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_AxisSweep3 = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_ConstraintSolver = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_SequentialImpulseConstraintSolver = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_CollisionWorld = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_RayResult = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_DynamicsWorld = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_DiscreteDynamicsWorld = 0;
static PyObject *__pyx_v_6bullet_6bullet__actions = 0;
static PyObject *__pyx_f_6bullet_6bullet___pyx_unpickle_BroadphaseProxy__set_state(struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *, PyObject *); /*proto*/
#define __Pyx_MODULE_NAME "bullet.bullet"
extern int __pyx_module_is_main_bullet__bullet;
int __pyx_module_is_main_bullet__bullet = 0;

/* Implementation of 'bullet.bullet' */
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_RuntimeError;
static PyObject *__pyx_builtin_ImportError;
static const char __pyx_k_f[] = "f";
static const char __pyx_k_i[] = "i";
static const char __pyx_k_w[] = "w";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_y[] = "y";
static const char __pyx_k_z[] = "z";
static const char __pyx_k_XXX[] = "XXX";
static const char __pyx_k_end[] = "end";
static const char __pyx_k_new[] = "__new__";
static const char __pyx_k_axis[] = "axis";
static const char __pyx_k_body[] = "body";
static const char __pyx_k_char[] = "char";
static const char __pyx_k_dict[] = "__dict__";
static const char __pyx_k_file[] = "file";
static const char __pyx_k_getW[] = "getW";
static const char __pyx_k_getX[] = "getX";
static const char __pyx_k_getY[] = "getY";
static const char __pyx_k_getZ[] = "getZ";
static const char __pyx_k_init[] = "__init__";
static const char __pyx_k_keys[] = "keys";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_mask[] = "mask";
static const char __pyx_k_mass[] = "mass";
static const char __pyx_k_mesh[] = "mesh";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_stwL[] = "_stwL";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_angle[] = "angle";
static const char __pyx_k_dtype[] = "dtype";
static const char __pyx_k_ghost[] = "ghost";
static const char __pyx_k_group[] = "group";
static const char __pyx_k_lower[] = "lower";
static const char __pyx_k_print[] = "print";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_shape[] = "shape";
static const char __pyx_k_upper[] = "upper";
static const char __pyx_k_height[] = "height";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_linear[] = "linear";
static const char __pyx_k_motion[] = "motion";
static const char __pyx_k_normal[] = "normal";
static const char __pyx_k_pickle[] = "pickle";
static const char __pyx_k_radius[] = "radius";
static const char __pyx_k_reduce[] = "__reduce__";
static const char __pyx_k_solver[] = "solver";
static const char __pyx_k_upAxis[] = "upAxis";
static const char __pyx_k_update[] = "update";
static const char __pyx_k_angular[] = "angular";
static const char __pyx_k_dealloc[] = "dealloc";
static const char __pyx_k_inertia[] = "inertia";
static const char __pyx_k_message[] = "message";
static const char __pyx_k_NO_DEBUG[] = "NO_DEBUG";
static const char __pyx_k_constant[] = "constant";
static const char __pyx_k_friction[] = "friction";
static const char __pyx_k_getstate[] = "__getstate__";
static const char __pyx_k_pyx_type[] = "__pyx_type";
static const char __pyx_k_setstate[] = "__setstate__";
static const char __pyx_k_timeStep[] = "timeStep";
static const char __pyx_k_velocity[] = "velocity";
static const char __pyx_k_AllFilter[] = "AllFilter";
static const char __pyx_k_DRAW_AABB[] = "DRAW_AABB";
static const char __pyx_k_DRAW_TEXT[] = "DRAW_TEXT";
static const char __pyx_k_TypeError[] = "TypeError";
static const char __pyx_k_indexBase[] = "indexBase";
static const char __pyx_k_pyx_state[] = "__pyx_state";
static const char __pyx_k_reduce_ex[] = "__reduce_ex__";
static const char __pyx_k_setOrigin[] = "setOrigin";
static const char __pyx_k_ACTIVE_TAG[] = "ACTIVE_TAG";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_broadphase[] = "broadphase";
static const char __pyx_k_dispatcher[] = "dispatcher";
static const char __pyx_k_pyx_result[] = "__pyx_result";
static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static const char __pyx_k_rayToWorld[] = "rayToWorld";
static const char __pyx_k_stepHeight[] = "stepHeight";
static const char __pyx_k_vertexBase[] = "vertexBase";
static const char __pyx_k_ImportError[] = "ImportError";
static const char __pyx_k_PickleError[] = "PickleError";
static const char __pyx_k_fromScalars[] = "fromScalars";
static const char __pyx_k_halfExtents[] = "halfExtents";
static const char __pyx_k_indexStride[] = "indexStride";
static const char __pyx_k_maxSubSteps[] = "maxSubSteps";
static const char __pyx_k_numVertices[] = "numVertices";
static const char __pyx_k_restitution[] = "restitution";
static const char __pyx_k_setRotation[] = "setRotation";
static const char __pyx_k_RuntimeError[] = "RuntimeError";
static const char __pyx_k_numTriangles[] = "numTriangles";
static const char __pyx_k_pyx_checksum[] = "__pyx_checksum";
static const char __pyx_k_rayFromWorld[] = "rayFromWorld";
static const char __pyx_k_stringsource[] = "stringsource";
static const char __pyx_k_timeInterval[] = "timeInterval";
static const char __pyx_k_vertexStride[] = "vertexStride";
static const char __pyx_k_DefaultFilter[] = "DefaultFilter";
static const char __pyx_k_bullet_bullet[] = "bullet.bullet";
static const char __pyx_k_fixedTimeStep[] = "fixedTimeStep";
static const char __pyx_k_fromAxisAngle[] = "fromAxisAngle";
static const char __pyx_k_linearDamping[] = "linearDamping";
static const char __pyx_k_reduce_cython[] = "__reduce_cython__";
static const char __pyx_k_DRAW_WIREFRAME[] = "DRAW_WIREFRAME";
static const char __pyx_k_angularDamping[] = "angularDamping";
static const char __pyx_k_boxHalfExtents[] = "boxHalfExtents";
static const char __pyx_k_worldTransform[] = "worldTransform";
static const char __pyx_k_ISLAND_SLEEPING[] = "ISLAND_SLEEPING";
static const char __pyx_k_collisionObject[] = "collisionObject";
static const char __pyx_k_forceActivation[] = "forceActivation";
static const char __pyx_k_pyx_PickleError[] = "__pyx_PickleError";
static const char __pyx_k_setstate_cython[] = "__setstate_cython__";
static const char __pyx_k_x_s_y_s_z_s_w_s[] = "<x=%s y=%s z=%s w=%s>";
static const char __pyx_k_CF_STATIC_OBJECT[] = "CF_STATIC_OBJECT";
static const char __pyx_k_DRAW_CONSTRAINTS[] = "DRAW_CONSTRAINTS";
static const char __pyx_k_relativePosition[] = "relativePosition";
static const char __pyx_k_setWorldTransform[] = "setWorldTransform";
static const char __pyx_k_DISABLE_SIMULATION[] = "DISABLE_SIMULATION";
static const char __pyx_k_DRAW_FEATURES_TEXT[] = "DRAW_FEATURES_TEXT";
static const char __pyx_k_Vector_x_s_y_s_z_s[] = "<Vector x=%s y=%s z=%s>";
static const char __pyx_k_WANTS_DEACTIVATION[] = "WANTS_DEACTIVATION";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_CF_CHARACTER_OBJECT[] = "CF_CHARACTER_OBJECT";
static const char __pyx_k_CF_KINEMATIC_OBJECT[] = "CF_KINEMATIC_OBJECT";
static const char __pyx_k_DRAW_CONTACT_POINTS[] = "DRAW_CONTACT_POINTS";
static const char __pyx_k_collisionFilterMask[] = "collisionFilterMask";
static const char __pyx_k_DISABLE_DEACTIVATION[] = "DISABLE_DEACTIVATION";
static const char __pyx_k_collisionFilterGroup[] = "collisionFilterGroup";
static const char __pyx_k_fromConstructionInfo[] = "fromConstructionInfo";
static const char __pyx_k_initialTransformation[] = "initialTransformation";
static const char __pyx_k_setSleepingThresholds[] = "setSleepingThresholds";
static const char __pyx_k_CF_NO_CONTACT_RESPONSE[] = "CF_NO_CONTACT_RESPONSE";
static const char __pyx_k_DRAW_CONSTRAINT_LIMITS[] = "DRAW_CONSTRAINT_LIMITS";
static const char __pyx_k_getNumCollisionObjects[] = "getNumCollisionObjects";
static const char __pyx_k_linearSleepingThreshold[] = "linearSleepingThreshold";
static const char __pyx_k_angularSleepingThreshold[] = "angularSleepingThreshold";
static const char __pyx_k_getLinearSleepingThreshold[] = "getLinearSleepingThreshold";
static const char __pyx_k_CF_CUSTOM_MATERIAL_CALLBACK[] = "CF_CUSTOM_MATERIAL_CALLBACK";
static const char __pyx_k_CF_DISABLE_VISUALIZE_OBJECT[] = "CF_DISABLE_VISUALIZE_OBJECT";
static const char __pyx_k_getAngularSleepingThreshold[] = "getAngularSleepingThreshold";
static const char __pyx_k_ndarray_is_not_C_contiguous[] = "ndarray is not C contiguous";
static const char __pyx_k_Unsupported_index_array_type[] = "Unsupported index array type";
static const char __pyx_k_pyx_unpickle_BroadphaseProxy[] = "__pyx_unpickle_BroadphaseProxy";
static const char __pyx_k_PyBullet_wraps_the_Bullet_Physi[] = "\nPyBullet wraps the Bullet Physics library for Python.\n\nDynamics features are provided mainly by DynamicsWorld and RigidBody.  For\nexample:\n\n    world = DiscreteDynamicsWorld()\n    ball = RigidBody(shape=SphereShape(1.0), mass=1.0)\n    world.addRigidBody(ball)\n    world.stepSimulation(1.0, 60, 1.0 / 60.0)\n    print ball.getWorldTransform().getOrigin()\n\n";
static const char __pyx_k_numpy_core_multiarray_failed_to[] = "numpy.core.multiarray failed to import";
static const char __pyx_k_unknown_dtype_code_in_numpy_pxd[] = "unknown dtype code in numpy.pxd (%d)";
static const char __pyx_k_CF_DISABLE_SPU_COLLISION_PROCESS[] = "CF_DISABLE_SPU_COLLISION_PROCESSING";
static const char __pyx_k_Cannot_add_CollisionObject_witho[] = "Cannot add CollisionObject without a CollisionShape";
static const char __pyx_k_Collision_object_not_found_in_wo[] = "Collision object not found in world.";
static const char __pyx_k_Error_in_cyBullet_rayTestClosest[] = "Error in cyBullet/rayTestClosest: ";
static const char __pyx_k_Format_string_allocated_too_shor[] = "Format string allocated too short, see comment in numpy.pxd";
static const char __pyx_k_Incompatible_checksums_s_vs_0x49[] = "Incompatible checksums (%s vs 0x497a8da = (collisionFilterGroup, collisionFilterMask))";
static const char __pyx_k_Non_native_byte_order_not_suppor[] = "Non-native byte order not supported";
static const char __pyx_k_ndarray_is_not_Fortran_contiguou[] = "ndarray is not Fortran contiguous";
static const char __pyx_k_no_default___reduce___due_to_non[] = "no default __reduce__ due to non-trivial __cinit__";
static const char __pyx_k_numpy_core_umath_failed_to_impor[] = "numpy.core.umath failed to import";
static const char __pyx_k_self_broadphase_self_debugDraw_s[] = "self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling";
static const char __pyx_k_self_quaternion_cannot_be_conver[] = "self.quaternion cannot be converted to a Python object for pickling";
static const char __pyx_k_self_thisptr_cannot_be_converted[] = "self.thisptr cannot be converted to a Python object for pickling";
static const char __pyx_k_Format_string_allocated_too_shor_2[] = "Format string allocated too short.";
static PyObject *__pyx_n_s_ACTIVE_TAG;
static PyObject *__pyx_n_s_AllFilter;
static PyObject *__pyx_n_s_CF_CHARACTER_OBJECT;
static PyObject *__pyx_n_s_CF_CUSTOM_MATERIAL_CALLBACK;
static PyObject *__pyx_n_s_CF_DISABLE_SPU_COLLISION_PROCESS;
static PyObject *__pyx_n_s_CF_DISABLE_VISUALIZE_OBJECT;
static PyObject *__pyx_n_s_CF_KINEMATIC_OBJECT;
static PyObject *__pyx_n_s_CF_NO_CONTACT_RESPONSE;
static PyObject *__pyx_n_s_CF_STATIC_OBJECT;
static PyObject *__pyx_kp_s_Cannot_add_CollisionObject_witho;
static PyObject *__pyx_kp_s_Collision_object_not_found_in_wo;
static PyObject *__pyx_n_s_DISABLE_DEACTIVATION;
static PyObject *__pyx_n_s_DISABLE_SIMULATION;
static PyObject *__pyx_n_s_DRAW_AABB;
static PyObject *__pyx_n_s_DRAW_CONSTRAINTS;
static PyObject *__pyx_n_s_DRAW_CONSTRAINT_LIMITS;
static PyObject *__pyx_n_s_DRAW_CONTACT_POINTS;
static PyObject *__pyx_n_s_DRAW_FEATURES_TEXT;
static PyObject *__pyx_n_s_DRAW_TEXT;
static PyObject *__pyx_n_s_DRAW_WIREFRAME;
static PyObject *__pyx_n_s_DefaultFilter;
static PyObject *__pyx_kp_s_Error_in_cyBullet_rayTestClosest;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor_2;
static PyObject *__pyx_n_s_ISLAND_SLEEPING;
static PyObject *__pyx_n_s_ImportError;
static PyObject *__pyx_kp_s_Incompatible_checksums_s_vs_0x49;
static PyObject *__pyx_n_s_NO_DEBUG;
static PyObject *__pyx_kp_u_Non_native_byte_order_not_suppor;
static PyObject *__pyx_n_s_PickleError;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_n_s_TypeError;
static PyObject *__pyx_kp_s_Unsupported_index_array_type;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_kp_s_Vector_x_s_y_s_z_s;
static PyObject *__pyx_n_s_WANTS_DEACTIVATION;
static PyObject *__pyx_n_s_XXX;
static PyObject *__pyx_n_s_angle;
static PyObject *__pyx_n_s_angular;
static PyObject *__pyx_n_s_angularDamping;
static PyObject *__pyx_n_s_angularSleepingThreshold;
static PyObject *__pyx_n_s_axis;
static PyObject *__pyx_n_s_body;
static PyObject *__pyx_n_s_boxHalfExtents;
static PyObject *__pyx_n_s_broadphase;
static PyObject *__pyx_n_s_bullet_bullet;
static PyObject *__pyx_n_s_char;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_collisionFilterGroup;
static PyObject *__pyx_n_s_collisionFilterMask;
static PyObject *__pyx_n_s_collisionObject;
static PyObject *__pyx_n_s_constant;
static PyObject *__pyx_n_s_dealloc;
static PyObject *__pyx_n_s_dict;
static PyObject *__pyx_n_s_dispatcher;
static PyObject *__pyx_n_s_dtype;
static PyObject *__pyx_n_s_end;
static PyObject *__pyx_n_s_f;
static PyObject *__pyx_n_s_file;
static PyObject *__pyx_n_s_fixedTimeStep;
static PyObject *__pyx_n_s_forceActivation;
static PyObject *__pyx_n_s_friction;
static PyObject *__pyx_n_s_fromAxisAngle;
static PyObject *__pyx_n_s_fromConstructionInfo;
static PyObject *__pyx_n_s_fromScalars;
static PyObject *__pyx_n_s_getAngularSleepingThreshold;
static PyObject *__pyx_n_s_getLinearSleepingThreshold;
static PyObject *__pyx_n_s_getNumCollisionObjects;
static PyObject *__pyx_n_s_getW;
static PyObject *__pyx_n_s_getX;
static PyObject *__pyx_n_s_getY;
static PyObject *__pyx_n_s_getZ;
static PyObject *__pyx_n_s_getstate;
static PyObject *__pyx_n_s_ghost;
static PyObject *__pyx_n_s_group;
static PyObject *__pyx_n_s_halfExtents;
static PyObject *__pyx_n_s_height;
static PyObject *__pyx_n_s_i;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_indexBase;
static PyObject *__pyx_n_s_indexStride;
static PyObject *__pyx_n_s_inertia;
static PyObject *__pyx_n_s_init;
static PyObject *__pyx_n_s_initialTransformation;
static PyObject *__pyx_n_s_keys;
static PyObject *__pyx_n_s_linear;
static PyObject *__pyx_n_s_linearDamping;
static PyObject *__pyx_n_s_linearSleepingThreshold;
static PyObject *__pyx_n_s_lower;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_mask;
static PyObject *__pyx_n_s_mass;
static PyObject *__pyx_n_s_maxSubSteps;
static PyObject *__pyx_n_s_mesh;
static PyObject *__pyx_n_s_message;
static PyObject *__pyx_n_s_motion;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_kp_u_ndarray_is_not_C_contiguous;
static PyObject *__pyx_kp_u_ndarray_is_not_Fortran_contiguou;
static PyObject *__pyx_n_s_new;
static PyObject *__pyx_kp_s_no_default___reduce___due_to_non;
static PyObject *__pyx_n_s_normal;
static PyObject *__pyx_n_s_numTriangles;
static PyObject *__pyx_n_s_numVertices;
static PyObject *__pyx_kp_s_numpy_core_multiarray_failed_to;
static PyObject *__pyx_kp_s_numpy_core_umath_failed_to_impor;
static PyObject *__pyx_n_s_pickle;
static PyObject *__pyx_n_s_print;
static PyObject *__pyx_n_s_pyx_PickleError;
static PyObject *__pyx_n_s_pyx_checksum;
static PyObject *__pyx_n_s_pyx_result;
static PyObject *__pyx_n_s_pyx_state;
static PyObject *__pyx_n_s_pyx_type;
static PyObject *__pyx_n_s_pyx_unpickle_BroadphaseProxy;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_radius;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_rayFromWorld;
static PyObject *__pyx_n_s_rayToWorld;
static PyObject *__pyx_n_s_reduce;
static PyObject *__pyx_n_s_reduce_cython;
static PyObject *__pyx_n_s_reduce_ex;
static PyObject *__pyx_n_s_relativePosition;
static PyObject *__pyx_n_s_restitution;
static PyObject *__pyx_kp_s_self_broadphase_self_debugDraw_s;
static PyObject *__pyx_kp_s_self_quaternion_cannot_be_conver;
static PyObject *__pyx_kp_s_self_thisptr_cannot_be_converted;
static PyObject *__pyx_n_s_setOrigin;
static PyObject *__pyx_n_s_setRotation;
static PyObject *__pyx_n_s_setSleepingThresholds;
static PyObject *__pyx_n_s_setWorldTransform;
static PyObject *__pyx_n_s_setstate;
static PyObject *__pyx_n_s_setstate_cython;
static PyObject *__pyx_n_s_shape;
static PyObject *__pyx_n_s_solver;
static PyObject *__pyx_n_s_stepHeight;
static PyObject *__pyx_kp_s_stringsource;
static PyObject *__pyx_n_s_stwL;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_timeInterval;
static PyObject *__pyx_n_s_timeStep;
static PyObject *__pyx_kp_u_unknown_dtype_code_in_numpy_pxd;
static PyObject *__pyx_n_s_upAxis;
static PyObject *__pyx_n_s_update;
static PyObject *__pyx_n_s_upper;
static PyObject *__pyx_n_s_velocity;
static PyObject *__pyx_n_s_vertexBase;
static PyObject *__pyx_n_s_vertexStride;
static PyObject *__pyx_n_s_w;
static PyObject *__pyx_n_s_worldTransform;
static PyObject *__pyx_n_s_x;
static PyObject *__pyx_kp_s_x_s_y_s_z_s_w_s;
static PyObject *__pyx_n_s_y;
static PyObject *__pyx_n_s_z;
static int __pyx_pf_6bullet_6bullet_7Vector3___cinit__(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self, btScalar __pyx_v_x, btScalar __pyx_v_y, btScalar __pyx_v_z); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_2__repr__(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_4__mul__(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self, PyObject *__pyx_v_scale); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_6__add__(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_8__sub__(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_10normalized(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_12cross(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_14dot(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_16length(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_1x___get__(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_1y___get__(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_1z___get__(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_18__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_20__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static void __pyx_pf_6bullet_6bullet_10Quaternion___dealloc__(struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_2fromScalars(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, btScalar __pyx_v_x, btScalar __pyx_v_y, btScalar __pyx_v_z, btScalar __pyx_v_w); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_4fromAxisAngle(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_axis, btScalar __pyx_v_angle); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_6__mul__(struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_other); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_8getX(struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_10getY(struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_12getZ(struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_14getW(struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_16getAxis(struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_18getAngle(struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_20__repr__(struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_22__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_24__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_14CollisionShape_calculateLocalInertia(struct __pyx_obj_6bullet_6bullet_CollisionShape *__pyx_v_self, PyObject *__pyx_v_mass, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_inertia); /* proto */
static void __pyx_pf_6bullet_6bullet_14CollisionShape_2__dealloc__(struct __pyx_obj_6bullet_6bullet_CollisionShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_14CollisionShape_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CollisionShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_14CollisionShape_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CollisionShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_11ConvexShape___reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_ConvexShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_11ConvexShape_2__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_ConvexShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_10Box2dShape___cinit__(struct __pyx_obj_6bullet_6bullet_Box2dShape *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_boxHalfExtents); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_10Box2dShape_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_Box2dShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_10Box2dShape_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_Box2dShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_8BoxShape___cinit__(struct __pyx_obj_6bullet_6bullet_BoxShape *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_boxHalfExtents); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_8BoxShape_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_BoxShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_8BoxShape_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_BoxShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_11SphereShape___cinit__(struct __pyx_obj_6bullet_6bullet_SphereShape *__pyx_v_self, btScalar __pyx_v_radius); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_11SphereShape_2getRadius(struct __pyx_obj_6bullet_6bullet_SphereShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_11SphereShape_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_SphereShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_11SphereShape_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_SphereShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_12CapsuleShape___cinit__(struct __pyx_obj_6bullet_6bullet_CapsuleShape *__pyx_v_self, btScalar __pyx_v_radius, btScalar __pyx_v_height); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_12CapsuleShape_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CapsuleShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_12CapsuleShape_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CapsuleShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_13CylinderShape___init__(struct __pyx_obj_6bullet_6bullet_CylinderShape *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_halfExtents); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_13CylinderShape_2getRadius(struct __pyx_obj_6bullet_6bullet_CylinderShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_13CylinderShape_4getHalfExtentsWithoutMargin(struct __pyx_obj_6bullet_6bullet_CylinderShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_13CylinderShape_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CylinderShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_13CylinderShape_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CylinderShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_14CylinderShapeX___init__(struct __pyx_obj_6bullet_6bullet_CylinderShapeX *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_halfExtents); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_14CylinderShapeX_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CylinderShapeX *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_14CylinderShapeX_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CylinderShapeX *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_14CylinderShapeZ___init__(struct __pyx_obj_6bullet_6bullet_CylinderShapeZ *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_halfExtents); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_14CylinderShapeZ_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CylinderShapeZ *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_14CylinderShapeZ_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CylinderShapeZ *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_16StaticPlaneShape___cinit__(struct __pyx_obj_6bullet_6bullet_StaticPlaneShape *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_normal, btScalar __pyx_v_constant); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_16StaticPlaneShape_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_StaticPlaneShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_16StaticPlaneShape_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_StaticPlaneShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_11IndexedMesh___cinit__(struct __pyx_obj_6bullet_6bullet_IndexedMesh *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_11IndexedMesh_2setIndices(struct __pyx_obj_6bullet_6bullet_IndexedMesh *__pyx_v_self, int __pyx_v_numTriangles, int __pyx_v_indexStride, PyArrayObject *__pyx_v_indexBase); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_11IndexedMesh_4setVertices(struct __pyx_obj_6bullet_6bullet_IndexedMesh *__pyx_v_self, int __pyx_v_numVertices, int __pyx_v_vertexStride, PyArrayObject *__pyx_v_vertexBase); /* proto */
static void __pyx_pf_6bullet_6bullet_11IndexedMesh_6__dealloc__(struct __pyx_obj_6bullet_6bullet_IndexedMesh *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_11IndexedMesh_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_IndexedMesh *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_11IndexedMesh_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_IndexedMesh *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static void __pyx_pf_6bullet_6bullet_21StridingMeshInterface___dealloc__(struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_21StridingMeshInterface_2getNumSubParts(struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_21StridingMeshInterface_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_21StridingMeshInterface_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_24TriangleIndexVertexArray___cinit__(struct __pyx_obj_6bullet_6bullet_TriangleIndexVertexArray *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_24TriangleIndexVertexArray_2addIndexedMesh(struct __pyx_obj_6bullet_6bullet_TriangleIndexVertexArray *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_IndexedMesh *__pyx_v_mesh); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_24TriangleIndexVertexArray_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_TriangleIndexVertexArray *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_24TriangleIndexVertexArray_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_TriangleIndexVertexArray *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_20BvhTriangleMeshShape___init__(struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *__pyx_v_mesh); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_20BvhTriangleMeshShape_2buildOptimizedBvh(struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_20BvhTriangleMeshShape_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_20BvhTriangleMeshShape_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_9Transform___cinit__(struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_self); /* proto */
static void __pyx_pf_6bullet_6bullet_9Transform_2__dealloc__(struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9Transform_4getOrigin(struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9Transform_6setOrigin(struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_origin); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9Transform_8setRotation(struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_rot); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9Transform_10getRotation(struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9Transform_12setIdentity(struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9Transform_14__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9Transform_16__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_15BroadphaseProxy___init__(struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *__pyx_v_self, short __pyx_v_collisionFilterGroup, short __pyx_v_collisionFilterMask); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15BroadphaseProxy_20collisionFilterGroup___get__(struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *__pyx_v_self); /* proto */
static int __pyx_pf_6bullet_6bullet_15BroadphaseProxy_20collisionFilterGroup_2__set__(struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15BroadphaseProxy_19collisionFilterMask___get__(struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *__pyx_v_self); /* proto */
static int __pyx_pf_6bullet_6bullet_15BroadphaseProxy_19collisionFilterMask_2__set__(struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15BroadphaseProxy_2__reduce_cython__(struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15BroadphaseProxy_4__setstate_cython__(struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_15CollisionObject___init__(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self); /* proto */
static void __pyx_pf_6bullet_6bullet_15CollisionObject_2__dealloc__(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_4getFriction(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_6setFriction(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self, btScalar __pyx_v_friction); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_8setRestitution(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self, btScalar __pyx_v_restitution); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_10getRestitution(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_12getCollisionShape(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_14setCollisionShape(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_CollisionShape *__pyx_v_collisionShape); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_16getWorldTransform(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_18setWorldTransform(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_transform); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_20getActivationState(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_22setActivationState(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self, int __pyx_v_newState); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_24getBroadphaseHandle(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_26forceActivationState(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self, int __pyx_v_newState); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_28activate(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self, bool __pyx_v_forceActivation); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_30getCollisionFlags(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_32setCollisionFlags(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self, int __pyx_v_flags); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_34__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_36__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static void __pyx_pf_6bullet_6bullet_11MotionState___dealloc__(struct __pyx_obj_6bullet_6bullet_MotionState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_11MotionState_2getWorldTransform(struct __pyx_obj_6bullet_6bullet_MotionState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_11MotionState_4setWorldTransform(struct __pyx_obj_6bullet_6bullet_MotionState *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_centerOfMassWorldTrans); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_11MotionState_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_MotionState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_11MotionState_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_MotionState *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_22overridableMotionState___cinit__(struct __pyx_obj_6bullet_6bullet_overridableMotionState *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_initialTransformation); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_22overridableMotionState_10worldTrans___get__(struct __pyx_obj_6bullet_6bullet_overridableMotionState *__pyx_v_self); /* proto */
static int __pyx_pf_6bullet_6bullet_22overridableMotionState_10worldTrans_2__set__(struct __pyx_obj_6bullet_6bullet_overridableMotionState *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_22overridableMotionState_2setWorldTransform(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_overridableMotionState *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_transform); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_22overridableMotionState_4_stwL(struct __pyx_obj_6bullet_6bullet_overridableMotionState *__pyx_v_self); /* proto */
static void __pyx_pf_6bullet_6bullet_22overridableMotionState_6__dealloc__(struct __pyx_obj_6bullet_6bullet_overridableMotionState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_22overridableMotionState_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_overridableMotionState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_22overridableMotionState_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_overridableMotionState *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_18DefaultMotionState___cinit__(struct __pyx_obj_6bullet_6bullet_DefaultMotionState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_18DefaultMotionState_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_DefaultMotionState *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_18DefaultMotionState_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_DefaultMotionState *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_9RigidBody___init__(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_MotionState *__pyx_v_motion, struct __pyx_obj_6bullet_6bullet_CollisionShape *__pyx_v_shape, btScalar __pyx_v_mass); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_2fromConstructionInfo(PyTypeObject *__pyx_v_cls, struct __pyx_obj_6bullet_6bullet_MotionState *__pyx_v_motion, struct __pyx_obj_6bullet_6bullet_CollisionShape *__pyx_v_shape, btScalar __pyx_v_mass, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_inertia, struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_worldTransform, btScalar __pyx_v_linearDamping, btScalar __pyx_v_angularDamping, btScalar __pyx_v_friction, btScalar __pyx_v_restitution, btScalar __pyx_v_linearSleepingThreshold, btScalar __pyx_v_angularSleepingThreshold); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_4isInWorld(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_6getInvMass(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_8getInvInertiaDiagLocal(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_10getMotionState(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_12setAngularFactor(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, btScalar __pyx_v_angularFactor); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_14setLinearVelocity(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_v); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_16getLinearVelocity(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_18getLinearDamping(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_20getLinearSleepingThreshold(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_22getAngularSleepingThreshold(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_24getAngularDamping(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_26applyCentralForce(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_f); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_28applyForce(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_f, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_relativePosition); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_30applyCentralImpulse(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_i); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_32applyImpulse(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_i, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_relativePosition); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_34setGravity(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_acceleration); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_36setMassProps(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, float __pyx_v_mass, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_inertia); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_38updateInertiaTensor(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_40getAngularVelocity(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_42setAngularVelocity(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_ang_vel); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_44setSleepingThresholds(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, float __pyx_v_linear, float __pyx_v_angular); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_23linearSleepingThreshold___get__(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self); /* proto */
static int __pyx_pf_6bullet_6bullet_9RigidBody_23linearSleepingThreshold_2__set__(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, float __pyx_v_value); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_24angularSleepingThreshold___get__(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self); /* proto */
static int __pyx_pf_6bullet_6bullet_9RigidBody_24angularSleepingThreshold_2__set__(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, float __pyx_v_value); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_46__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_48__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static void __pyx_pf_6bullet_6bullet_15ActionInterface___dealloc__(struct __pyx_obj_6bullet_6bullet_ActionInterface *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15ActionInterface_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_ActionInterface *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_15ActionInterface_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_ActionInterface *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_28CharacterControllerInterface_setWalkDirection(struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_walkDirection); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_28CharacterControllerInterface_2setVelocityForTimeInterval(struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_velocity, btScalar __pyx_v_timeInterval); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_28CharacterControllerInterface_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_28CharacterControllerInterface_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_22PairCachingGhostObject___init__(struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_22PairCachingGhostObject_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_22PairCachingGhostObject_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_28KinematicCharacterController___init__(struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *__pyx_v_ghost, float __pyx_v_stepHeight, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_upAxis); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_28KinematicCharacterController_2warp(struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_origin); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_28KinematicCharacterController_4getGravity(struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_28KinematicCharacterController_6setGravity(struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_gravity); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_28KinematicCharacterController_5ghost___get__(struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_28KinematicCharacterController_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_28KinematicCharacterController_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_19CollisionDispatcher___cinit__(struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *__pyx_v_self); /* proto */
static void __pyx_pf_6bullet_6bullet_19CollisionDispatcher_2__dealloc__(struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_19CollisionDispatcher_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_19CollisionDispatcher_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static void __pyx_pf_6bullet_6bullet_20OverlappingPairCache___dealloc__(struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_20OverlappingPairCache_2setInternalGhostPairCallback(struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_20OverlappingPairCache_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_20OverlappingPairCache_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_26HashedOverlappingPairCache___cinit__(struct __pyx_obj_6bullet_6bullet_HashedOverlappingPairCache *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_26HashedOverlappingPairCache_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_HashedOverlappingPairCache *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_26HashedOverlappingPairCache_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_HashedOverlappingPairCache *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static void __pyx_pf_6bullet_6bullet_19BroadphaseInterface___dealloc__(struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_19BroadphaseInterface_2getOverlappingPairCache(struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_19BroadphaseInterface_10_paircache___get__(struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_19BroadphaseInterface_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_19BroadphaseInterface_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_10AxisSweep3___cinit__(struct __pyx_obj_6bullet_6bullet_AxisSweep3 *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_lower, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_upper); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_10AxisSweep3_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_AxisSweep3 *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_10AxisSweep3_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_AxisSweep3 *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static void __pyx_pf_6bullet_6bullet_16ConstraintSolver___dealloc__(struct __pyx_obj_6bullet_6bullet_ConstraintSolver *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_16ConstraintSolver_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_ConstraintSolver *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_16ConstraintSolver_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_ConstraintSolver *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_33SequentialImpulseConstraintSolver___cinit__(struct __pyx_obj_6bullet_6bullet_SequentialImpulseConstraintSolver *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_33SequentialImpulseConstraintSolver_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_SequentialImpulseConstraintSolver *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_33SequentialImpulseConstraintSolver_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_SequentialImpulseConstraintSolver *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_14CollisionWorld___init__(struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *__pyx_v_dispatcher, struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *__pyx_v_broadphase); /* proto */
static void __pyx_pf_6bullet_6bullet_14CollisionWorld_2__dealloc__(struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_4setDebugDrawer(struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self, PyObject *__pyx_v_debugDrawer); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_6debugDrawWorld(struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_8getNumCollisionObjects(struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_10addCollisionObject(struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_collisionObject, short __pyx_v_collisionFilterGroup, short __pyx_v_collisionFilterMask); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_12removeCollisionObject(struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_collisionObject); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_14getCollisionObjectArray(struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_16rayTestClosest(struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_rayFromWorld, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_rayToWorld); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_18__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_20__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_9RayResult___cinit__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_18closestHitFraction___get__(struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_15collisionObject___get__(struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_20collisionFilterGroup___get__(struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_19collisionFilterMask___get__(struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_5flags___get__(struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_12rayFromWorld___get__(struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_10rayToWorld___get__(struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_14hitNormalWorld___get__(struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_13hitPointWorld___get__(struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static void __pyx_pf_6bullet_6bullet_13DynamicsWorld___dealloc__(struct __pyx_obj_6bullet_6bullet_DynamicsWorld *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_13DynamicsWorld_2removeRigidBody(struct __pyx_obj_6bullet_6bullet_DynamicsWorld *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_body); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_13DynamicsWorld_4addAction(struct __pyx_obj_6bullet_6bullet_DynamicsWorld *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_ActionInterface *__pyx_v_action); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_13DynamicsWorld_6removeAction(struct __pyx_obj_6bullet_6bullet_DynamicsWorld *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_ActionInterface *__pyx_v_action); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_13DynamicsWorld_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_DynamicsWorld *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_13DynamicsWorld_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_DynamicsWorld *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld___init__(struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *__pyx_v_dispatcher, struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *__pyx_v_broadphase, struct __pyx_obj_6bullet_6bullet_ConstraintSolver *__pyx_v_solver); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_2addRigidBody(struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_body, PyObject *__pyx_v_group, PyObject *__pyx_v_mask); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_4setGravity(struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_gravity); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_6getGravity(struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_8stepSimulation(struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *__pyx_v_self, btScalar __pyx_v_timeStep, int __pyx_v_maxSubSteps, btScalar __pyx_v_fixedTimeStep); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_6bullet_6bullet___pyx_unpickle_BroadphaseProxy(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /* proto */
static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info); /* proto */
static PyObject *__pyx_tp_new_6bullet_6bullet_CollisionObject(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_Vector3(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_Quaternion(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_CollisionShape(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_ConvexShape(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_Box2dShape(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_BoxShape(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_SphereShape(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_CapsuleShape(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_CylinderShape(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_CylinderShapeX(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_CylinderShapeZ(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_StaticPlaneShape(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_IndexedMesh(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_StridingMeshInterface(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_TriangleIndexVertexArray(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_BvhTriangleMeshShape(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_Transform(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_BroadphaseProxy(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_MotionState(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_overridableMotionState(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_DefaultMotionState(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_RigidBody(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_ActionInterface(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_CharacterControllerInterface(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_PairCachingGhostObject(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_KinematicCharacterController(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_CollisionDispatcher(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_OverlappingPairCache(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_HashedOverlappingPairCache(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_BroadphaseInterface(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_AxisSweep3(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_ConstraintSolver(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_SequentialImpulseConstraintSolver(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_CollisionWorld(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_RayResult(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_DynamicsWorld(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bullet_6bullet_DiscreteDynamicsWorld(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_keys = {0, &__pyx_n_s_keys, 0, 0, 0};
static PyObject *__pyx_float_0_5;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_10;
static PyObject *__pyx_int_100;
static PyObject *__pyx_int_77048026;
static PyObject *__pyx_int_neg_100;
static short __pyx_k__73;
static short __pyx_k__74;
static btScalar __pyx_k__85;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_tuple__9;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__13;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__15;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__17;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__19;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__21;
static PyObject *__pyx_tuple__22;
static PyObject *__pyx_tuple__23;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_tuple__25;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__27;
static PyObject *__pyx_tuple__28;
static PyObject *__pyx_tuple__29;
static PyObject *__pyx_tuple__30;
static PyObject *__pyx_tuple__31;
static PyObject *__pyx_tuple__32;
static PyObject *__pyx_tuple__33;
static PyObject *__pyx_tuple__34;
static PyObject *__pyx_tuple__35;
static PyObject *__pyx_tuple__36;
static PyObject *__pyx_tuple__37;
static PyObject *__pyx_tuple__38;
static PyObject *__pyx_tuple__39;
static PyObject *__pyx_tuple__40;
static PyObject *__pyx_tuple__41;
static PyObject *__pyx_tuple__42;
static PyObject *__pyx_tuple__43;
static PyObject *__pyx_tuple__44;
static PyObject *__pyx_tuple__45;
static PyObject *__pyx_tuple__46;
static PyObject *__pyx_tuple__47;
static PyObject *__pyx_tuple__48;
static PyObject *__pyx_tuple__49;
static PyObject *__pyx_tuple__50;
static PyObject *__pyx_tuple__51;
static PyObject *__pyx_tuple__52;
static PyObject *__pyx_tuple__53;
static PyObject *__pyx_tuple__54;
static PyObject *__pyx_tuple__55;
static PyObject *__pyx_tuple__56;
static PyObject *__pyx_tuple__57;
static PyObject *__pyx_tuple__58;
static PyObject *__pyx_tuple__59;
static PyObject *__pyx_tuple__60;
static PyObject *__pyx_tuple__61;
static PyObject *__pyx_tuple__62;
static PyObject *__pyx_tuple__63;
static PyObject *__pyx_tuple__64;
static PyObject *__pyx_tuple__65;
static PyObject *__pyx_tuple__66;
static PyObject *__pyx_tuple__67;
static PyObject *__pyx_tuple__68;
static PyObject *__pyx_tuple__69;
static PyObject *__pyx_tuple__70;
static PyObject *__pyx_tuple__71;
static PyObject *__pyx_tuple__72;
static PyObject *__pyx_tuple__75;
static PyObject *__pyx_tuple__76;
static PyObject *__pyx_tuple__77;
static PyObject *__pyx_tuple__78;
static PyObject *__pyx_tuple__79;
static PyObject *__pyx_tuple__80;
static PyObject *__pyx_tuple__81;
static PyObject *__pyx_tuple__82;
static PyObject *__pyx_tuple__83;
static PyObject *__pyx_tuple__84;
static PyObject *__pyx_tuple__86;
static PyObject *__pyx_tuple__87;
static PyObject *__pyx_tuple__88;
static PyObject *__pyx_tuple__89;
static PyObject *__pyx_tuple__90;
static PyObject *__pyx_tuple__91;
static PyObject *__pyx_tuple__92;
static PyObject *__pyx_tuple__93;
static PyObject *__pyx_tuple__94;
static PyObject *__pyx_tuple__95;
static PyObject *__pyx_tuple__96;
static PyObject *__pyx_tuple__97;
static PyObject *__pyx_codeobj__98;

/* "bullet/bullet.pyx":38
 *     cdef readonly btScalar z
 * 
 *     def __cinit__(self, btScalar x, btScalar y, btScalar z):             # <<<<<<<<<<<<<<
 *         self.x = x
 *         self.y = y
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_7Vector3_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_7Vector3_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  btScalar __pyx_v_x;
  btScalar __pyx_v_y;
  btScalar __pyx_v_z;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_z,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 3, 3, 1); __PYX_ERR(1, 38, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_z)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 3, 3, 2); __PYX_ERR(1, 38, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(1, 38, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_x = __pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_x == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 38, __pyx_L3_error)
    __pyx_v_y = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_y == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 38, __pyx_L3_error)
    __pyx_v_z = __pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_z == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 38, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 38, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.Vector3.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6bullet_6bullet_7Vector3___cinit__(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self), __pyx_v_x, __pyx_v_y, __pyx_v_z);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_7Vector3___cinit__(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self, btScalar __pyx_v_x, btScalar __pyx_v_y, btScalar __pyx_v_z) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bullet/bullet.pyx":39
 * 
 *     def __cinit__(self, btScalar x, btScalar y, btScalar z):
 *         self.x = x             # <<<<<<<<<<<<<<
 *         self.y = y
 *         self.z = z
 */
  __pyx_v_self->x = __pyx_v_x;

  /* "bullet/bullet.pyx":40
 *     def __cinit__(self, btScalar x, btScalar y, btScalar z):
 *         self.x = x
 *         self.y = y             # <<<<<<<<<<<<<<
 *         self.z = z
 * 
 */
  __pyx_v_self->y = __pyx_v_y;

  /* "bullet/bullet.pyx":41
 *         self.x = x
 *         self.y = y
 *         self.z = z             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->z = __pyx_v_z;

  /* "bullet/bullet.pyx":38
 *     cdef readonly btScalar z
 * 
 *     def __cinit__(self, btScalar x, btScalar y, btScalar z):             # <<<<<<<<<<<<<<
 *         self.x = x
 *         self.y = y
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":44
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<Vector x=%s y=%s z=%s>' % (self.x, self.y, self.z)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_3__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_3__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_7Vector3_2__repr__(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_2__repr__(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "bullet/bullet.pyx":45
 * 
 *     def __repr__(self):
 *         return '<Vector x=%s y=%s z=%s>' % (self.x, self.y, self.z)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->x); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->y); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_self->z); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyString_Format(__pyx_kp_s_Vector_x_s_y_s_z_s, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":44
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<Vector x=%s y=%s z=%s>' % (self.x, self.y, self.z)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.Vector3.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":48
 * 
 * 
 *     def __mul__(Vector3 self, scale):             # <<<<<<<<<<<<<<
 *         """
 *         Support multiplication of a Vector3 by a scalar.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_5__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_scale); /*proto*/
static char __pyx_doc_6bullet_6bullet_7Vector3_4__mul__[] = "\n        Support multiplication of a Vector3 by a scalar.\n        ";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_6bullet_6bullet_7Vector3_4__mul__;
#endif
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_5__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_scale) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__mul__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_6bullet_6bullet_Vector3, 1, "self", 0))) __PYX_ERR(1, 48, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_7Vector3_4__mul__(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self), ((PyObject *)__pyx_v_scale));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_4__mul__(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self, PyObject *__pyx_v_scale) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__mul__", 0);
  __Pyx_INCREF(__pyx_v_scale);

  /* "bullet/bullet.pyx":52
 *         Support multiplication of a Vector3 by a scalar.
 *         """
 *         scale = float(scale)             # <<<<<<<<<<<<<<
 *         return Vector3(self.x * scale, self.y * scale, self.z * scale)
 * 
 */
  __pyx_t_1 = __Pyx_PyNumber_Float(__pyx_v_scale); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF_SET(__pyx_v_scale, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":53
 *         """
 *         scale = float(scale)
 *         return Vector3(self.x * scale, self.y * scale, self.z * scale)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->x); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyNumber_Multiply(__pyx_t_1, __pyx_v_scale); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->y); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_v_scale); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->z); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyNumber_Multiply(__pyx_t_1, __pyx_v_scale); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Vector3), __pyx_t_1, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":48
 * 
 * 
 *     def __mul__(Vector3 self, scale):             # <<<<<<<<<<<<<<
 *         """
 *         Support multiplication of a Vector3 by a scalar.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.Vector3.__mul__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_scale);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":56
 * 
 * 
 *     def __add__(Vector3 self, Vector3 other not None):             # <<<<<<<<<<<<<<
 *         """
 *         Support addition of two Vector3s.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_7__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_6bullet_6bullet_7Vector3_6__add__[] = "\n        Support addition of two Vector3s.\n        ";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_6bullet_6bullet_7Vector3_6__add__;
#endif
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_7__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__add__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_6bullet_6bullet_Vector3, 1, "self", 0))) __PYX_ERR(1, 56, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_6bullet_6bullet_Vector3, 0, "other", 0))) __PYX_ERR(1, 56, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_7Vector3_6__add__(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_6__add__(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__add__", 0);

  /* "bullet/bullet.pyx":60
 *         Support addition of two Vector3s.
 *         """
 *         return Vector3(self.x + other.x, self.y + other.y, self.z + other.z)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((__pyx_v_self->x + __pyx_v_other->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble((__pyx_v_self->y + __pyx_v_other->y)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble((__pyx_v_self->z + __pyx_v_other->z)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Vector3), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":56
 * 
 * 
 *     def __add__(Vector3 self, Vector3 other not None):             # <<<<<<<<<<<<<<
 *         """
 *         Support addition of two Vector3s.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.Vector3.__add__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":63
 * 
 * 
 *     def __sub__(Vector3 self, Vector3 other not None):             # <<<<<<<<<<<<<<
 *         """
 *         Support subtraction of two Vector3s.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_9__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_6bullet_6bullet_7Vector3_8__sub__[] = "\n        Support subtraction of two Vector3s.\n        ";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_6bullet_6bullet_7Vector3_8__sub__;
#endif
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_9__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__sub__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_6bullet_6bullet_Vector3, 1, "self", 0))) __PYX_ERR(1, 63, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_6bullet_6bullet_Vector3, 0, "other", 0))) __PYX_ERR(1, 63, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_7Vector3_8__sub__(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_8__sub__(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__sub__", 0);

  /* "bullet/bullet.pyx":67
 *         Support subtraction of two Vector3s.
 *         """
 *         return Vector3(self.x - other.x, self.y - other.y, self.z - other.z)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((__pyx_v_self->x - __pyx_v_other->x)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble((__pyx_v_self->y - __pyx_v_other->y)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble((__pyx_v_self->z - __pyx_v_other->z)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Vector3), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":63
 * 
 * 
 *     def __sub__(Vector3 self, Vector3 other not None):             # <<<<<<<<<<<<<<
 *         """
 *         Support subtraction of two Vector3s.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.Vector3.__sub__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":70
 * 
 * 
 *     def normalized(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return a new normalized L{Vector3} pointing in the same direction as
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_11normalized(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_7Vector3_10normalized[] = "\n        Return a new normalized L{Vector3} pointing in the same direction as\n        this one.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_11normalized(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("normalized (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_7Vector3_10normalized(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_10normalized(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self) {
  btVector3 __pyx_v_v;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("normalized", 0);

  /* "bullet/bullet.pyx":75
 *         this one.
 *         """
 *         cdef btVector3 v = btVector3(self.x, self.y, self.z)             # <<<<<<<<<<<<<<
 *         v.normalize()
 *         return Vector3(v.getX(), v.getY(), v.getZ())
 */
  __pyx_v_v = btVector3(__pyx_v_self->x, __pyx_v_self->y, __pyx_v_self->z);

  /* "bullet/bullet.pyx":76
 *         """
 *         cdef btVector3 v = btVector3(self.x, self.y, self.z)
 *         v.normalize()             # <<<<<<<<<<<<<<
 *         return Vector3(v.getX(), v.getY(), v.getZ())
 * 
 */
  __pyx_v_v.normalize();

  /* "bullet/bullet.pyx":77
 *         cdef btVector3 v = btVector3(self.x, self.y, self.z)
 *         v.normalize()
 *         return Vector3(v.getX(), v.getY(), v.getZ())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_v.getX()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_v.getY()); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_v.getZ()); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Vector3), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":70
 * 
 * 
 *     def normalized(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return a new normalized L{Vector3} pointing in the same direction as
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.Vector3.normalized", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":80
 * 
 * 
 *     def cross(self, Vector3 other not None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the vector cross product of this vector and the other one.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_13cross(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_6bullet_6bullet_7Vector3_12cross[] = "\n        Return the vector cross product of this vector and the other one.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_13cross(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cross (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_6bullet_6bullet_Vector3, 0, "other", 0))) __PYX_ERR(1, 80, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_7Vector3_12cross(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_12cross(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_other) {
  btVector3 __pyx_v_v1;
  btVector3 __pyx_v_v2;
  btVector3 __pyx_v_result;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("cross", 0);

  /* "bullet/bullet.pyx":84
 *         Return the vector cross product of this vector and the other one.
 *         """
 *         cdef btVector3 v1 = btVector3(self.x, self.y, self.z)             # <<<<<<<<<<<<<<
 *         cdef btVector3 v2 = btVector3(other.x, other.y, other.z)
 *         cdef btVector3 result = v1.cross(v2)
 */
  __pyx_v_v1 = btVector3(__pyx_v_self->x, __pyx_v_self->y, __pyx_v_self->z);

  /* "bullet/bullet.pyx":85
 *         """
 *         cdef btVector3 v1 = btVector3(self.x, self.y, self.z)
 *         cdef btVector3 v2 = btVector3(other.x, other.y, other.z)             # <<<<<<<<<<<<<<
 *         cdef btVector3 result = v1.cross(v2)
 *         return Vector3(result.getX(), result.getY(), result.getZ())
 */
  __pyx_v_v2 = btVector3(__pyx_v_other->x, __pyx_v_other->y, __pyx_v_other->z);

  /* "bullet/bullet.pyx":86
 *         cdef btVector3 v1 = btVector3(self.x, self.y, self.z)
 *         cdef btVector3 v2 = btVector3(other.x, other.y, other.z)
 *         cdef btVector3 result = v1.cross(v2)             # <<<<<<<<<<<<<<
 *         return Vector3(result.getX(), result.getY(), result.getZ())
 * 
 */
  __pyx_v_result = __pyx_v_v1.cross(__pyx_v_v2);

  /* "bullet/bullet.pyx":87
 *         cdef btVector3 v2 = btVector3(other.x, other.y, other.z)
 *         cdef btVector3 result = v1.cross(v2)
 *         return Vector3(result.getX(), result.getY(), result.getZ())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_result.getX()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_result.getY()); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_result.getZ()); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Vector3), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":80
 * 
 * 
 *     def cross(self, Vector3 other not None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the vector cross product of this vector and the other one.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.Vector3.cross", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":90
 * 
 * 
 *     def dot(self, Vector3 other not None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the dot product of this vector and the other one.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_15dot(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_6bullet_6bullet_7Vector3_14dot[] = "\n        Return the dot product of this vector and the other one.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_15dot(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dot (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_6bullet_6bullet_Vector3, 0, "other", 0))) __PYX_ERR(1, 90, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_7Vector3_14dot(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_14dot(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_other) {
  btVector3 __pyx_v_v1;
  btVector3 __pyx_v_v2;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dot", 0);

  /* "bullet/bullet.pyx":94
 *         Return the dot product of this vector and the other one.
 *         """
 *         cdef btVector3 v1 = btVector3(self.x, self.y, self.z)             # <<<<<<<<<<<<<<
 *         cdef btVector3 v2 = btVector3(other.x, other.y, other.z)
 *         return v1.dot(v2)
 */
  __pyx_v_v1 = btVector3(__pyx_v_self->x, __pyx_v_self->y, __pyx_v_self->z);

  /* "bullet/bullet.pyx":95
 *         """
 *         cdef btVector3 v1 = btVector3(self.x, self.y, self.z)
 *         cdef btVector3 v2 = btVector3(other.x, other.y, other.z)             # <<<<<<<<<<<<<<
 *         return v1.dot(v2)
 * 
 */
  __pyx_v_v2 = btVector3(__pyx_v_other->x, __pyx_v_other->y, __pyx_v_other->z);

  /* "bullet/bullet.pyx":96
 *         cdef btVector3 v1 = btVector3(self.x, self.y, self.z)
 *         cdef btVector3 v2 = btVector3(other.x, other.y, other.z)
 *         return v1.dot(v2)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_v1.dot(__pyx_v_v2)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":90
 * 
 * 
 *     def dot(self, Vector3 other not None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the dot product of this vector and the other one.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Vector3.dot", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":99
 * 
 * 
 *     def length(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the length (magnitude) of this vector.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_17length(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_7Vector3_16length[] = "\n        Return the length (magnitude) of this vector.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_17length(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("length (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_7Vector3_16length(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_16length(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self) {
  btVector3 __pyx_v_v;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("length", 0);

  /* "bullet/bullet.pyx":103
 *         Return the length (magnitude) of this vector.
 *         """
 *         cdef btVector3 v = btVector3(self.x, self.y, self.z)             # <<<<<<<<<<<<<<
 *         return v.length()
 * 
 */
  __pyx_v_v = btVector3(__pyx_v_self->x, __pyx_v_self->y, __pyx_v_self->z);

  /* "bullet/bullet.pyx":104
 *         """
 *         cdef btVector3 v = btVector3(self.x, self.y, self.z)
 *         return v.length()             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_v.length()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":99
 * 
 * 
 *     def length(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the length (magnitude) of this vector.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Vector3.length", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":107
 * 
 *     @staticmethod
 *     cdef frombtVector3(btVector3 vec):             # <<<<<<<<<<<<<<
 *         return Vector3(vec.getX(), vec.getY(), vec.getZ())
 * 
 */

static PyObject *__pyx_f_6bullet_6bullet_7Vector3_frombtVector3(btVector3 __pyx_v_vec) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("frombtVector3", 0);

  /* "bullet/bullet.pyx":108
 *     @staticmethod
 *     cdef frombtVector3(btVector3 vec):
 *         return Vector3(vec.getX(), vec.getY(), vec.getZ())             # <<<<<<<<<<<<<<
 * 
 *     cdef btVector3 tobtVector3(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_vec.getX()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_vec.getY()); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_vec.getZ()); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Vector3), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":107
 * 
 *     @staticmethod
 *     cdef frombtVector3(btVector3 vec):             # <<<<<<<<<<<<<<
 *         return Vector3(vec.getX(), vec.getY(), vec.getZ())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.Vector3.frombtVector3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":110
 *         return Vector3(vec.getX(), vec.getY(), vec.getZ())
 * 
 *     cdef btVector3 tobtVector3(self):             # <<<<<<<<<<<<<<
 *         return btVector3(self.x, self.y, self.z)
 * 
 */

static btVector3 __pyx_f_6bullet_6bullet_7Vector3_tobtVector3(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self) {
  btVector3 __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tobtVector3", 0);

  /* "bullet/bullet.pyx":111
 * 
 *     cdef btVector3 tobtVector3(self):
 *         return btVector3(self.x, self.y, self.z)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = btVector3(__pyx_v_self->x, __pyx_v_self->y, __pyx_v_self->z);
  goto __pyx_L0;

  /* "bullet/bullet.pyx":110
 *         return Vector3(vec.getX(), vec.getY(), vec.getZ())
 * 
 *     cdef btVector3 tobtVector3(self):             # <<<<<<<<<<<<<<
 *         return btVector3(self.x, self.y, self.z)
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":34
 *     This class is loosely a wrapper around btVector3.
 *     """
 *     cdef readonly btScalar x             # <<<<<<<<<<<<<<
 *     cdef readonly btScalar y
 *     cdef readonly btScalar z
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_1x_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_1x_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_7Vector3_1x___get__(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_1x___get__(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->x); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Vector3.x.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":35
 *     """
 *     cdef readonly btScalar x
 *     cdef readonly btScalar y             # <<<<<<<<<<<<<<
 *     cdef readonly btScalar z
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_1y_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_1y_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_7Vector3_1y___get__(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_1y___get__(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->y); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Vector3.y.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":36
 *     cdef readonly btScalar x
 *     cdef readonly btScalar y
 *     cdef readonly btScalar z             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, btScalar x, btScalar y, btScalar z):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_1z_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_1z_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_7Vector3_1z___get__(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_1z___get__(struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->z); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Vector3.z.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_19__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_19__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_7Vector3_18__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_18__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Vector3.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_21__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_7Vector3_21__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_7Vector3_20__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_20__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Vector3.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":124
 *     cdef btQuaternion* quaternion
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.quaternion
 * 
 */

/* Python wrapper */
static void __pyx_pw_6bullet_6bullet_10Quaternion_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6bullet_6bullet_10Quaternion_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6bullet_6bullet_10Quaternion___dealloc__(((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6bullet_6bullet_10Quaternion___dealloc__(struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "bullet/bullet.pyx":125
 * 
 *     def __dealloc__(self):
 *         del self.quaternion             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete __pyx_v_self->quaternion;

  /* "bullet/bullet.pyx":124
 *     cdef btQuaternion* quaternion
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.quaternion
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "bullet/bullet.pyx":129
 * 
 *     @classmethod
 *     def fromScalars(cls, btScalar x, btScalar y, btScalar z, btScalar w):             # <<<<<<<<<<<<<<
 *         """
 *         Construct a new Quaternion from four scalar components.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_3fromScalars(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_10Quaternion_2fromScalars[] = "\n        Construct a new Quaternion from four scalar components.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_3fromScalars(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  btScalar __pyx_v_x;
  btScalar __pyx_v_y;
  btScalar __pyx_v_z;
  btScalar __pyx_v_w;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromScalars (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_x,&__pyx_n_s_y,&__pyx_n_s_z,&__pyx_n_s_w,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_x)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_y)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fromScalars", 1, 4, 4, 1); __PYX_ERR(1, 129, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_z)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fromScalars", 1, 4, 4, 2); __PYX_ERR(1, 129, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_w)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fromScalars", 1, 4, 4, 3); __PYX_ERR(1, 129, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fromScalars") < 0)) __PYX_ERR(1, 129, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_x = __pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_x == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 129, __pyx_L3_error)
    __pyx_v_y = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_y == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 129, __pyx_L3_error)
    __pyx_v_z = __pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_z == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 129, __pyx_L3_error)
    __pyx_v_w = __pyx_PyFloat_AsFloat(values[3]); if (unlikely((__pyx_v_w == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 129, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fromScalars", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 129, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.Quaternion.fromScalars", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6bullet_6bullet_10Quaternion_2fromScalars(((PyTypeObject*)__pyx_v_cls), __pyx_v_x, __pyx_v_y, __pyx_v_z, __pyx_v_w);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_2fromScalars(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, btScalar __pyx_v_x, btScalar __pyx_v_y, btScalar __pyx_v_z, btScalar __pyx_v_w) {
  struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_q = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("fromScalars", 0);

  /* "bullet/bullet.pyx":133
 *         Construct a new Quaternion from four scalar components.
 *         """
 *         q = Quaternion()             # <<<<<<<<<<<<<<
 *         q.quaternion = new btQuaternion(x, y, z, w)
 *         return q
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Quaternion), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_q = ((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":134
 *         """
 *         q = Quaternion()
 *         q.quaternion = new btQuaternion(x, y, z, w)             # <<<<<<<<<<<<<<
 *         return q
 * 
 */
  __pyx_v_q->quaternion = new btQuaternion(__pyx_v_x, __pyx_v_y, __pyx_v_z, __pyx_v_w);

  /* "bullet/bullet.pyx":135
 *         q = Quaternion()
 *         q.quaternion = new btQuaternion(x, y, z, w)
 *         return q             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_q));
  __pyx_r = ((PyObject *)__pyx_v_q);
  goto __pyx_L0;

  /* "bullet/bullet.pyx":129
 * 
 *     @classmethod
 *     def fromScalars(cls, btScalar x, btScalar y, btScalar z, btScalar w):             # <<<<<<<<<<<<<<
 *         """
 *         Construct a new Quaternion from four scalar components.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.fromScalars", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_q);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":139
 * 
 *     @classmethod
 *     def fromAxisAngle(cls, Vector3 axis not None, btScalar angle):             # <<<<<<<<<<<<<<
 *         """
 *         Construct a new Quaternion from an axis and a rotation around that axis.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_5fromAxisAngle(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_10Quaternion_4fromAxisAngle[] = "\n        Construct a new Quaternion from an axis and a rotation around that axis.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_5fromAxisAngle(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_axis = 0;
  btScalar __pyx_v_angle;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromAxisAngle (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_axis,&__pyx_n_s_angle,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_axis)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_angle)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fromAxisAngle", 1, 2, 2, 1); __PYX_ERR(1, 139, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fromAxisAngle") < 0)) __PYX_ERR(1, 139, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_axis = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
    __pyx_v_angle = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_angle == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 139, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fromAxisAngle", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 139, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.Quaternion.fromAxisAngle", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_axis), __pyx_ptype_6bullet_6bullet_Vector3, 0, "axis", 0))) __PYX_ERR(1, 139, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_10Quaternion_4fromAxisAngle(((PyTypeObject*)__pyx_v_cls), __pyx_v_axis, __pyx_v_angle);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_4fromAxisAngle(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_axis, btScalar __pyx_v_angle) {
  struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_q = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("fromAxisAngle", 0);

  /* "bullet/bullet.pyx":143
 *         Construct a new Quaternion from an axis and a rotation around that axis.
 *         """
 *         q = Quaternion()             # <<<<<<<<<<<<<<
 *         q.quaternion = new btQuaternion(
 *             btVector3(axis.x, axis.y, axis.z), angle)
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Quaternion), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_q = ((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":144
 *         """
 *         q = Quaternion()
 *         q.quaternion = new btQuaternion(             # <<<<<<<<<<<<<<
 *             btVector3(axis.x, axis.y, axis.z), angle)
 *         return q
 */
  __pyx_v_q->quaternion = new btQuaternion(btVector3(__pyx_v_axis->x, __pyx_v_axis->y, __pyx_v_axis->z), __pyx_v_angle);

  /* "bullet/bullet.pyx":146
 *         q.quaternion = new btQuaternion(
 *             btVector3(axis.x, axis.y, axis.z), angle)
 *         return q             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_q));
  __pyx_r = ((PyObject *)__pyx_v_q);
  goto __pyx_L0;

  /* "bullet/bullet.pyx":139
 * 
 *     @classmethod
 *     def fromAxisAngle(cls, Vector3 axis not None, btScalar angle):             # <<<<<<<<<<<<<<
 *         """
 *         Construct a new Quaternion from an axis and a rotation around that axis.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.fromAxisAngle", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_q);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":149
 * 
 *     @staticmethod
 *     cdef frombtQuat(btQuaternion quat):             # <<<<<<<<<<<<<<
 *         return Quaternion.fromScalars(quat.getX(), quat.getY(), quat.getZ(), quat.getW())
 * 
 */

static PyObject *__pyx_f_6bullet_6bullet_10Quaternion_frombtQuat(btQuaternion __pyx_v_quat) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("frombtQuat", 0);

  /* "bullet/bullet.pyx":150
 *     @staticmethod
 *     cdef frombtQuat(btQuaternion quat):
 *         return Quaternion.fromScalars(quat.getX(), quat.getY(), quat.getZ(), quat.getW())             # <<<<<<<<<<<<<<
 * 
 *     def __mul__(Quaternion self, Quaternion other not None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_6bullet_6bullet_Quaternion), __pyx_n_s_fromScalars); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_quat.getX()); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_quat.getY()); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_quat.getZ()); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_quat.getW()); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_8 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[5] = {__pyx_t_7, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_8, 4+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 150, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[5] = {__pyx_t_7, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_8, 4+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 150, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  {
    __pyx_t_9 = PyTuple_New(4+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 150, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_9, 3+__pyx_t_8, __pyx_t_6);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 150, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":149
 * 
 *     @staticmethod
 *     cdef frombtQuat(btQuaternion quat):             # <<<<<<<<<<<<<<
 *         return Quaternion.fromScalars(quat.getX(), quat.getY(), quat.getZ(), quat.getW())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.frombtQuat", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":152
 *         return Quaternion.fromScalars(quat.getX(), quat.getY(), quat.getZ(), quat.getW())
 * 
 *     def __mul__(Quaternion self, Quaternion other not None):             # <<<<<<<<<<<<<<
 *         """
 *         Support multiplication of two Quaternions.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_7__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_6bullet_6bullet_10Quaternion_6__mul__[] = "\n        Support multiplication of two Quaternions.\n        ";
#if CYTHON_COMPILING_IN_CPYTHON
struct wrapperbase __pyx_wrapperbase_6bullet_6bullet_10Quaternion_6__mul__;
#endif
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_7__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__mul__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_6bullet_6bullet_Quaternion, 1, "self", 0))) __PYX_ERR(1, 152, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_6bullet_6bullet_Quaternion, 0, "other", 0))) __PYX_ERR(1, 152, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_10Quaternion_6__mul__(((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_other));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_6__mul__(struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_other) {
  btQuaternion __pyx_v_product;
  struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_result = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__mul__", 0);

  /* "bullet/bullet.pyx":156
 *         Support multiplication of two Quaternions.
 *         """
 *         cdef btQuaternion product = self.quaternion[0] * other.quaternion[0]             # <<<<<<<<<<<<<<
 *         result = Quaternion()
 *         result.quaternion = new btQuaternion(
 */
  __pyx_v_product = ((__pyx_v_self->quaternion[0]) * (__pyx_v_other->quaternion[0]));

  /* "bullet/bullet.pyx":157
 *         """
 *         cdef btQuaternion product = self.quaternion[0] * other.quaternion[0]
 *         result = Quaternion()             # <<<<<<<<<<<<<<
 *         result.quaternion = new btQuaternion(
 *             product.getAxis(), product.getAngle())
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Quaternion), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = ((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":158
 *         cdef btQuaternion product = self.quaternion[0] * other.quaternion[0]
 *         result = Quaternion()
 *         result.quaternion = new btQuaternion(             # <<<<<<<<<<<<<<
 *             product.getAxis(), product.getAngle())
 *         return result
 */
  __pyx_v_result->quaternion = new btQuaternion(__pyx_v_product.getAxis(), __pyx_v_product.getAngle());

  /* "bullet/bullet.pyx":160
 *         result.quaternion = new btQuaternion(
 *             product.getAxis(), product.getAngle())
 *         return result             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_result));
  __pyx_r = ((PyObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "bullet/bullet.pyx":152
 *         return Quaternion.fromScalars(quat.getX(), quat.getY(), quat.getZ(), quat.getW())
 * 
 *     def __mul__(Quaternion self, Quaternion other not None):             # <<<<<<<<<<<<<<
 *         """
 *         Support multiplication of two Quaternions.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.__mul__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":163
 * 
 * 
 *     def getX(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the X component of the Quaternion.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_9getX(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_10Quaternion_8getX[] = "\n        Get the X component of the Quaternion.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_9getX(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getX (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_10Quaternion_8getX(((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_8getX(struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getX", 0);

  /* "bullet/bullet.pyx":167
 *         Get the X component of the Quaternion.
 *         """
 *         return self.quaternion.getX()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->quaternion->getX()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":163
 * 
 * 
 *     def getX(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the X component of the Quaternion.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.getX", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":170
 * 
 * 
 *     def getY(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the Y component of the Quaternion.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_11getY(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_10Quaternion_10getY[] = "\n        Get the Y component of the Quaternion.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_11getY(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getY (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_10Quaternion_10getY(((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_10getY(struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getY", 0);

  /* "bullet/bullet.pyx":174
 *         Get the Y component of the Quaternion.
 *         """
 *         return self.quaternion.getY()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->quaternion->getY()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":170
 * 
 * 
 *     def getY(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the Y component of the Quaternion.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.getY", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":177
 * 
 * 
 *     def getZ(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the Z component of the Quaternion.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_13getZ(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_10Quaternion_12getZ[] = "\n        Get the Z component of the Quaternion.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_13getZ(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getZ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_10Quaternion_12getZ(((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_12getZ(struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getZ", 0);

  /* "bullet/bullet.pyx":181
 *         Get the Z component of the Quaternion.
 *         """
 *         return self.quaternion.getZ()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->quaternion->getZ()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":177
 * 
 * 
 *     def getZ(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the Z component of the Quaternion.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.getZ", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":184
 * 
 * 
 *     def getW(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the W component of the Quaternion.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_15getW(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_10Quaternion_14getW[] = "\n        Get the W component of the Quaternion.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_15getW(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getW (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_10Quaternion_14getW(((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_14getW(struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getW", 0);

  /* "bullet/bullet.pyx":188
 *         Get the W component of the Quaternion.
 *         """
 *         return self.quaternion.getW()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->quaternion->getW()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 188, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":184
 * 
 * 
 *     def getW(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the W component of the Quaternion.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.getW", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":191
 * 
 * 
 *     def getAxis(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the axis of rotation represented by this quaternion.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_17getAxis(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_10Quaternion_16getAxis[] = "\n        Return the axis of rotation represented by this quaternion.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_17getAxis(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getAxis (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_10Quaternion_16getAxis(((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_16getAxis(struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self) {
  btVector3 __pyx_v_axis;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("getAxis", 0);

  /* "bullet/bullet.pyx":195
 *         Return the axis of rotation represented by this quaternion.
 *         """
 *         cdef btVector3 axis = self.quaternion.getAxis()             # <<<<<<<<<<<<<<
 *         return Vector3(axis.getX(), axis.getY(), axis.getZ())
 * 
 */
  __pyx_v_axis = __pyx_v_self->quaternion->getAxis();

  /* "bullet/bullet.pyx":196
 *         """
 *         cdef btVector3 axis = self.quaternion.getAxis()
 *         return Vector3(axis.getX(), axis.getY(), axis.getZ())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_axis.getX()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_axis.getY()); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_axis.getZ()); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Vector3), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":191
 * 
 * 
 *     def getAxis(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the axis of rotation represented by this quaternion.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.getAxis", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":199
 * 
 * 
 *     def getAngle(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the angle of rotation represented by this quaternion.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_19getAngle(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_10Quaternion_18getAngle[] = "\n        Return the angle of rotation represented by this quaternion.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_19getAngle(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getAngle (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_10Quaternion_18getAngle(((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_18getAngle(struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getAngle", 0);

  /* "bullet/bullet.pyx":203
 *         Return the angle of rotation represented by this quaternion.
 *         """
 *         return self.quaternion.getAngle()             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->quaternion->getAngle()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":199
 * 
 * 
 *     def getAngle(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the angle of rotation represented by this quaternion.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.getAngle", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":205
 *         return self.quaternion.getAngle()
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<x=%s y=%s z=%s w=%s>' % (self.getX(), self.getY(), self.getZ(), self.getW())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_21__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_21__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_10Quaternion_20__repr__(((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_20__repr__(struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "bullet/bullet.pyx":206
 * 
 *     def __repr__(self):
 *         return '<x=%s y=%s z=%s w=%s>' % (self.getX(), self.getY(), self.getZ(), self.getW())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getX); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 206, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 206, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getY); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_4) {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 206, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else {
    __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 206, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getZ); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  if (__pyx_t_5) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 206, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else {
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 206, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getW); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  if (__pyx_t_6) {
    __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 206, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else {
    __pyx_t_4 = __Pyx_PyObject_CallNoArg(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 206, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyTuple_New(4); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_t_4);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_x_s_y_s_z_s_w_s, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":205
 *         return self.quaternion.getAngle()
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<x=%s y=%s z=%s w=%s>' % (self.getX(), self.getY(), self.getZ(), self.getW())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.quaternion cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_23__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_23__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_10Quaternion_22__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_22__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.quaternion cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.quaternion cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.quaternion cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.quaternion cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.quaternion cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_25__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_10Quaternion_25__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_10Quaternion_24__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_24__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.quaternion cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.quaternion cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.quaternion cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.quaternion cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":218
 *     cdef btCollisionShape *thisptr
 * 
 *     def calculateLocalInertia(self, mass, Vector3 inertia):             # <<<<<<<<<<<<<<
 *         cdef btVector3 nvec = btVector3(inertia.x, inertia.y, inertia.z)
 *         self.thisptr.calculateLocalInertia(mass , nvec)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionShape_1calculateLocalInertia(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionShape_1calculateLocalInertia(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_mass = 0;
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_inertia = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("calculateLocalInertia (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_mass,&__pyx_n_s_inertia,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_mass)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_inertia)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("calculateLocalInertia", 1, 2, 2, 1); __PYX_ERR(1, 218, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "calculateLocalInertia") < 0)) __PYX_ERR(1, 218, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_mass = values[0];
    __pyx_v_inertia = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("calculateLocalInertia", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 218, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionShape.calculateLocalInertia", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_inertia), __pyx_ptype_6bullet_6bullet_Vector3, 1, "inertia", 0))) __PYX_ERR(1, 218, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_14CollisionShape_calculateLocalInertia(((struct __pyx_obj_6bullet_6bullet_CollisionShape *)__pyx_v_self), __pyx_v_mass, __pyx_v_inertia);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_14CollisionShape_calculateLocalInertia(struct __pyx_obj_6bullet_6bullet_CollisionShape *__pyx_v_self, PyObject *__pyx_v_mass, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_inertia) {
  btVector3 __pyx_v_nvec;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  btScalar __pyx_t_1;
  __Pyx_RefNannySetupContext("calculateLocalInertia", 0);

  /* "bullet/bullet.pyx":219
 * 
 *     def calculateLocalInertia(self, mass, Vector3 inertia):
 *         cdef btVector3 nvec = btVector3(inertia.x, inertia.y, inertia.z)             # <<<<<<<<<<<<<<
 *         self.thisptr.calculateLocalInertia(mass , nvec)
 *         inertia.x = nvec.getX()
 */
  __pyx_v_nvec = btVector3(__pyx_v_inertia->x, __pyx_v_inertia->y, __pyx_v_inertia->z);

  /* "bullet/bullet.pyx":220
 *     def calculateLocalInertia(self, mass, Vector3 inertia):
 *         cdef btVector3 nvec = btVector3(inertia.x, inertia.y, inertia.z)
 *         self.thisptr.calculateLocalInertia(mass , nvec)             # <<<<<<<<<<<<<<
 *         inertia.x = nvec.getX()
 *         inertia.y = nvec.getY()
 */
  __pyx_t_1 = __pyx_PyFloat_AsFloat(__pyx_v_mass); if (unlikely((__pyx_t_1 == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 220, __pyx_L1_error)
  __pyx_v_self->thisptr->calculateLocalInertia(__pyx_t_1, __pyx_v_nvec);

  /* "bullet/bullet.pyx":221
 *         cdef btVector3 nvec = btVector3(inertia.x, inertia.y, inertia.z)
 *         self.thisptr.calculateLocalInertia(mass , nvec)
 *         inertia.x = nvec.getX()             # <<<<<<<<<<<<<<
 *         inertia.y = nvec.getY()
 *         inertia.z = nvec.getZ()
 */
  __pyx_v_inertia->x = __pyx_v_nvec.getX();

  /* "bullet/bullet.pyx":222
 *         self.thisptr.calculateLocalInertia(mass , nvec)
 *         inertia.x = nvec.getX()
 *         inertia.y = nvec.getY()             # <<<<<<<<<<<<<<
 *         inertia.z = nvec.getZ()
 * 
 */
  __pyx_v_inertia->y = __pyx_v_nvec.getY();

  /* "bullet/bullet.pyx":223
 *         inertia.x = nvec.getX()
 *         inertia.y = nvec.getY()
 *         inertia.z = nvec.getZ()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_inertia->z = __pyx_v_nvec.getZ();

  /* "bullet/bullet.pyx":218
 *     cdef btCollisionShape *thisptr
 * 
 *     def calculateLocalInertia(self, mass, Vector3 inertia):             # <<<<<<<<<<<<<<
 *         cdef btVector3 nvec = btVector3(inertia.x, inertia.y, inertia.z)
 *         self.thisptr.calculateLocalInertia(mass , nvec)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionShape.calculateLocalInertia", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":225
 *         inertia.z = nvec.getZ()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_6bullet_6bullet_14CollisionShape_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6bullet_6bullet_14CollisionShape_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6bullet_6bullet_14CollisionShape_2__dealloc__(((struct __pyx_obj_6bullet_6bullet_CollisionShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6bullet_6bullet_14CollisionShape_2__dealloc__(struct __pyx_obj_6bullet_6bullet_CollisionShape *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "bullet/bullet.pyx":226
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete __pyx_v_self->thisptr;

  /* "bullet/bullet.pyx":225
 *         inertia.z = nvec.getZ()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionShape_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionShape_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_14CollisionShape_4__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_CollisionShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_14CollisionShape_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CollisionShape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionShape.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionShape_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionShape_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_14CollisionShape_6__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_CollisionShape *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_14CollisionShape_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CollisionShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionShape.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_11ConvexShape_1__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_11ConvexShape_1__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_11ConvexShape___reduce_cython__(((struct __pyx_obj_6bullet_6bullet_ConvexShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_11ConvexShape___reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_ConvexShape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.ConvexShape.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_11ConvexShape_3__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_11ConvexShape_3__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_11ConvexShape_2__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_ConvexShape *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_11ConvexShape_2__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_ConvexShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.ConvexShape.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":248
 *     This class is a wrapper around btBox2dShape.
 *     """
 *     def __cinit__(self, Vector3 boxHalfExtents):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btBox2dShape(
 *             btVector3(boxHalfExtents.x, boxHalfExtents.y, boxHalfExtents.z))
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_10Box2dShape_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_10Box2dShape_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_boxHalfExtents = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_boxHalfExtents,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_boxHalfExtents)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(1, 248, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_boxHalfExtents = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 248, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.Box2dShape.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_boxHalfExtents), __pyx_ptype_6bullet_6bullet_Vector3, 1, "boxHalfExtents", 0))) __PYX_ERR(1, 248, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_10Box2dShape___cinit__(((struct __pyx_obj_6bullet_6bullet_Box2dShape *)__pyx_v_self), __pyx_v_boxHalfExtents);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_10Box2dShape___cinit__(struct __pyx_obj_6bullet_6bullet_Box2dShape *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_boxHalfExtents) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bullet/bullet.pyx":249
 *     """
 *     def __cinit__(self, Vector3 boxHalfExtents):
 *         self.thisptr = new btBox2dShape(             # <<<<<<<<<<<<<<
 *             btVector3(boxHalfExtents.x, boxHalfExtents.y, boxHalfExtents.z))
 * 
 */
  __pyx_v_self->__pyx_base.__pyx_base.thisptr = new btBox2dShape(btVector3(__pyx_v_boxHalfExtents->x, __pyx_v_boxHalfExtents->y, __pyx_v_boxHalfExtents->z));

  /* "bullet/bullet.pyx":248
 *     This class is a wrapper around btBox2dShape.
 *     """
 *     def __cinit__(self, Vector3 boxHalfExtents):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btBox2dShape(
 *             btVector3(boxHalfExtents.x, boxHalfExtents.y, boxHalfExtents.z))
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_10Box2dShape_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_10Box2dShape_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_10Box2dShape_2__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_Box2dShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_10Box2dShape_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_Box2dShape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Box2dShape.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_10Box2dShape_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_10Box2dShape_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_10Box2dShape_4__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_Box2dShape *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_10Box2dShape_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_Box2dShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Box2dShape.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":262
 *     This class is a wrapper around btBoxShape.
 *     """
 *     def __cinit__(self, Vector3 boxHalfExtents):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btBoxShape(
 *             btVector3(boxHalfExtents.x, boxHalfExtents.y, boxHalfExtents.z))
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_8BoxShape_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_8BoxShape_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_boxHalfExtents = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_boxHalfExtents,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_boxHalfExtents)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(1, 262, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_boxHalfExtents = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 262, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.BoxShape.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_boxHalfExtents), __pyx_ptype_6bullet_6bullet_Vector3, 1, "boxHalfExtents", 0))) __PYX_ERR(1, 262, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_8BoxShape___cinit__(((struct __pyx_obj_6bullet_6bullet_BoxShape *)__pyx_v_self), __pyx_v_boxHalfExtents);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_8BoxShape___cinit__(struct __pyx_obj_6bullet_6bullet_BoxShape *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_boxHalfExtents) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bullet/bullet.pyx":263
 *     """
 *     def __cinit__(self, Vector3 boxHalfExtents):
 *         self.thisptr = new btBoxShape(             # <<<<<<<<<<<<<<
 *             btVector3(boxHalfExtents.x, boxHalfExtents.y, boxHalfExtents.z))
 * 
 */
  __pyx_v_self->__pyx_base.__pyx_base.thisptr = new btBoxShape(btVector3(__pyx_v_boxHalfExtents->x, __pyx_v_boxHalfExtents->y, __pyx_v_boxHalfExtents->z));

  /* "bullet/bullet.pyx":262
 *     This class is a wrapper around btBoxShape.
 *     """
 *     def __cinit__(self, Vector3 boxHalfExtents):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btBoxShape(
 *             btVector3(boxHalfExtents.x, boxHalfExtents.y, boxHalfExtents.z))
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_8BoxShape_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_8BoxShape_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_8BoxShape_2__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_BoxShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_8BoxShape_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_BoxShape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.BoxShape.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_8BoxShape_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_8BoxShape_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_8BoxShape_4__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_BoxShape *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_8BoxShape_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_BoxShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.BoxShape.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":274
 *     This class is a wrapper around btSphereShape.
 *     """
 *     def __cinit__(self, btScalar radius):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btSphereShape(radius)
 * 
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_11SphereShape_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_11SphereShape_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  btScalar __pyx_v_radius;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_radius,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_radius)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(1, 274, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_radius = __pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_radius == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 274, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 274, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.SphereShape.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6bullet_6bullet_11SphereShape___cinit__(((struct __pyx_obj_6bullet_6bullet_SphereShape *)__pyx_v_self), __pyx_v_radius);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_11SphereShape___cinit__(struct __pyx_obj_6bullet_6bullet_SphereShape *__pyx_v_self, btScalar __pyx_v_radius) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bullet/bullet.pyx":275
 *     """
 *     def __cinit__(self, btScalar radius):
 *         self.thisptr = new btSphereShape(radius)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->__pyx_base.__pyx_base.thisptr = new btSphereShape(__pyx_v_radius);

  /* "bullet/bullet.pyx":274
 *     This class is a wrapper around btSphereShape.
 *     """
 *     def __cinit__(self, btScalar radius):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btSphereShape(radius)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":278
 * 
 * 
 *     def getRadius(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the radius of the sphere.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_11SphereShape_3getRadius(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_11SphereShape_2getRadius[] = "\n        Return the radius of the sphere.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_11SphereShape_3getRadius(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getRadius (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_11SphereShape_2getRadius(((struct __pyx_obj_6bullet_6bullet_SphereShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_11SphereShape_2getRadius(struct __pyx_obj_6bullet_6bullet_SphereShape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getRadius", 0);

  /* "bullet/bullet.pyx":282
 *         Return the radius of the sphere.
 *         """
 *         return (<btSphereShape*>self.thisptr).getRadius()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((btSphereShape *)__pyx_v_self->__pyx_base.__pyx_base.thisptr)->getRadius()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 282, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":278
 * 
 * 
 *     def getRadius(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the radius of the sphere.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.SphereShape.getRadius", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_11SphereShape_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_11SphereShape_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_11SphereShape_4__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_SphereShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_11SphereShape_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_SphereShape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.SphereShape.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_11SphereShape_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_11SphereShape_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_11SphereShape_6__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_SphereShape *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_11SphereShape_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_SphereShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.SphereShape.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":293
 *     This class is a wrapper around btCapsuleShape.
 *     """
 *     def __cinit__(self, btScalar radius, btScalar height):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btCapsuleShape(radius, height)
 * 
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_12CapsuleShape_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_12CapsuleShape_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  btScalar __pyx_v_radius;
  btScalar __pyx_v_height;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_radius,&__pyx_n_s_height,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_radius)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_height)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); __PYX_ERR(1, 293, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(1, 293, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_radius = __pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_radius == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 293, __pyx_L3_error)
    __pyx_v_height = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_height == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 293, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 293, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CapsuleShape.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6bullet_6bullet_12CapsuleShape___cinit__(((struct __pyx_obj_6bullet_6bullet_CapsuleShape *)__pyx_v_self), __pyx_v_radius, __pyx_v_height);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_12CapsuleShape___cinit__(struct __pyx_obj_6bullet_6bullet_CapsuleShape *__pyx_v_self, btScalar __pyx_v_radius, btScalar __pyx_v_height) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bullet/bullet.pyx":294
 *     """
 *     def __cinit__(self, btScalar radius, btScalar height):
 *         self.thisptr = new btCapsuleShape(radius, height)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->__pyx_base.__pyx_base.thisptr = new btCapsuleShape(__pyx_v_radius, __pyx_v_height);

  /* "bullet/bullet.pyx":293
 *     This class is a wrapper around btCapsuleShape.
 *     """
 *     def __cinit__(self, btScalar radius, btScalar height):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btCapsuleShape(radius, height)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_12CapsuleShape_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_12CapsuleShape_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_12CapsuleShape_2__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_CapsuleShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_12CapsuleShape_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CapsuleShape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CapsuleShape.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_12CapsuleShape_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_12CapsuleShape_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_12CapsuleShape_4__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_CapsuleShape *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_12CapsuleShape_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CapsuleShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CapsuleShape.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":304
 *     This class is a wrapper around btCylinderShape.
 *     """
 *     def __init__(self, Vector3 halfExtents not None):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btCylinderShape(
 *             btVector3(halfExtents.x, halfExtents.y, halfExtents.z))
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_13CylinderShape_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_13CylinderShape_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_halfExtents = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_halfExtents,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_halfExtents)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(1, 304, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_halfExtents = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 304, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CylinderShape.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_halfExtents), __pyx_ptype_6bullet_6bullet_Vector3, 0, "halfExtents", 0))) __PYX_ERR(1, 304, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_13CylinderShape___init__(((struct __pyx_obj_6bullet_6bullet_CylinderShape *)__pyx_v_self), __pyx_v_halfExtents);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_13CylinderShape___init__(struct __pyx_obj_6bullet_6bullet_CylinderShape *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_halfExtents) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "bullet/bullet.pyx":305
 *     """
 *     def __init__(self, Vector3 halfExtents not None):
 *         self.thisptr = new btCylinderShape(             # <<<<<<<<<<<<<<
 *             btVector3(halfExtents.x, halfExtents.y, halfExtents.z))
 * 
 */
  __pyx_v_self->__pyx_base.__pyx_base.thisptr = new btCylinderShape(btVector3(__pyx_v_halfExtents->x, __pyx_v_halfExtents->y, __pyx_v_halfExtents->z));

  /* "bullet/bullet.pyx":304
 *     This class is a wrapper around btCylinderShape.
 *     """
 *     def __init__(self, Vector3 halfExtents not None):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btCylinderShape(
 *             btVector3(halfExtents.x, halfExtents.y, halfExtents.z))
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":309
 * 
 * 
 *     def getRadius(self):             # <<<<<<<<<<<<<<
 *         return (<btCylinderShape*>self.thisptr).getRadius()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_13CylinderShape_3getRadius(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_13CylinderShape_3getRadius(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getRadius (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_13CylinderShape_2getRadius(((struct __pyx_obj_6bullet_6bullet_CylinderShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_13CylinderShape_2getRadius(struct __pyx_obj_6bullet_6bullet_CylinderShape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getRadius", 0);

  /* "bullet/bullet.pyx":310
 * 
 *     def getRadius(self):
 *         return (<btCylinderShape*>self.thisptr).getRadius()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((btCylinderShape *)__pyx_v_self->__pyx_base.__pyx_base.thisptr)->getRadius()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 310, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":309
 * 
 * 
 *     def getRadius(self):             # <<<<<<<<<<<<<<
 *         return (<btCylinderShape*>self.thisptr).getRadius()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CylinderShape.getRadius", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":313
 * 
 * 
 *     def getHalfExtentsWithoutMargin(self):             # <<<<<<<<<<<<<<
 *         cdef btVector3 v = (<btCylinderShape*>self.thisptr).getHalfExtentsWithoutMargin()
 *         return Vector3(v.getX(), v.getY(), v.getZ())
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_13CylinderShape_5getHalfExtentsWithoutMargin(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_13CylinderShape_5getHalfExtentsWithoutMargin(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getHalfExtentsWithoutMargin (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_13CylinderShape_4getHalfExtentsWithoutMargin(((struct __pyx_obj_6bullet_6bullet_CylinderShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_13CylinderShape_4getHalfExtentsWithoutMargin(struct __pyx_obj_6bullet_6bullet_CylinderShape *__pyx_v_self) {
  btVector3 __pyx_v_v;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("getHalfExtentsWithoutMargin", 0);

  /* "bullet/bullet.pyx":314
 * 
 *     def getHalfExtentsWithoutMargin(self):
 *         cdef btVector3 v = (<btCylinderShape*>self.thisptr).getHalfExtentsWithoutMargin()             # <<<<<<<<<<<<<<
 *         return Vector3(v.getX(), v.getY(), v.getZ())
 * 
 */
  __pyx_v_v = ((btCylinderShape *)__pyx_v_self->__pyx_base.__pyx_base.thisptr)->getHalfExtentsWithoutMargin();

  /* "bullet/bullet.pyx":315
 *     def getHalfExtentsWithoutMargin(self):
 *         cdef btVector3 v = (<btCylinderShape*>self.thisptr).getHalfExtentsWithoutMargin()
 *         return Vector3(v.getX(), v.getY(), v.getZ())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_v.getX()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 315, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_v.getY()); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 315, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_v.getZ()); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 315, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 315, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Vector3), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 315, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":313
 * 
 * 
 *     def getHalfExtentsWithoutMargin(self):             # <<<<<<<<<<<<<<
 *         cdef btVector3 v = (<btCylinderShape*>self.thisptr).getHalfExtentsWithoutMargin()
 *         return Vector3(v.getX(), v.getY(), v.getZ())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.CylinderShape.getHalfExtentsWithoutMargin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_13CylinderShape_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_13CylinderShape_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_13CylinderShape_6__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_CylinderShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_13CylinderShape_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CylinderShape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CylinderShape.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_13CylinderShape_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_13CylinderShape_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_13CylinderShape_8__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_CylinderShape *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_13CylinderShape_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CylinderShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CylinderShape.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":326
 *     This class is a wrapper around btCylinderShapeX.
 *     """
 *     def __init__(self, Vector3 halfExtents not None):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btCylinderShapeX(
 *             btVector3(halfExtents.x, halfExtents.y, halfExtents.z))
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_14CylinderShapeX_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_14CylinderShapeX_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_halfExtents = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_halfExtents,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_halfExtents)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(1, 326, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_halfExtents = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 326, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CylinderShapeX.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_halfExtents), __pyx_ptype_6bullet_6bullet_Vector3, 0, "halfExtents", 0))) __PYX_ERR(1, 326, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_14CylinderShapeX___init__(((struct __pyx_obj_6bullet_6bullet_CylinderShapeX *)__pyx_v_self), __pyx_v_halfExtents);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_14CylinderShapeX___init__(struct __pyx_obj_6bullet_6bullet_CylinderShapeX *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_halfExtents) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "bullet/bullet.pyx":327
 *     """
 *     def __init__(self, Vector3 halfExtents not None):
 *         self.thisptr = new btCylinderShapeX(             # <<<<<<<<<<<<<<
 *             btVector3(halfExtents.x, halfExtents.y, halfExtents.z))
 * 
 */
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base.thisptr = new btCylinderShapeX(btVector3(__pyx_v_halfExtents->x, __pyx_v_halfExtents->y, __pyx_v_halfExtents->z));

  /* "bullet/bullet.pyx":326
 *     This class is a wrapper around btCylinderShapeX.
 *     """
 *     def __init__(self, Vector3 halfExtents not None):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btCylinderShapeX(
 *             btVector3(halfExtents.x, halfExtents.y, halfExtents.z))
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_14CylinderShapeX_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_14CylinderShapeX_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_14CylinderShapeX_2__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_CylinderShapeX *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_14CylinderShapeX_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CylinderShapeX *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__19, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CylinderShapeX.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_14CylinderShapeX_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_14CylinderShapeX_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_14CylinderShapeX_4__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_CylinderShapeX *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_14CylinderShapeX_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CylinderShapeX *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__20, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CylinderShapeX.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":339
 *     This class is a wrapper around btCylinderShapeZ.
 *     """
 *     def __init__(self, Vector3 halfExtents not None):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btCylinderShapeZ(
 *             btVector3(halfExtents.x, halfExtents.y, halfExtents.z))
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_14CylinderShapeZ_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_14CylinderShapeZ_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_halfExtents = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_halfExtents,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_halfExtents)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(1, 339, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_halfExtents = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 339, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CylinderShapeZ.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_halfExtents), __pyx_ptype_6bullet_6bullet_Vector3, 0, "halfExtents", 0))) __PYX_ERR(1, 339, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_14CylinderShapeZ___init__(((struct __pyx_obj_6bullet_6bullet_CylinderShapeZ *)__pyx_v_self), __pyx_v_halfExtents);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_14CylinderShapeZ___init__(struct __pyx_obj_6bullet_6bullet_CylinderShapeZ *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_halfExtents) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "bullet/bullet.pyx":340
 *     """
 *     def __init__(self, Vector3 halfExtents not None):
 *         self.thisptr = new btCylinderShapeZ(             # <<<<<<<<<<<<<<
 *             btVector3(halfExtents.x, halfExtents.y, halfExtents.z))
 * 
 */
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base.thisptr = new btCylinderShapeZ(btVector3(__pyx_v_halfExtents->x, __pyx_v_halfExtents->y, __pyx_v_halfExtents->z));

  /* "bullet/bullet.pyx":339
 *     This class is a wrapper around btCylinderShapeZ.
 *     """
 *     def __init__(self, Vector3 halfExtents not None):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btCylinderShapeZ(
 *             btVector3(halfExtents.x, halfExtents.y, halfExtents.z))
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_14CylinderShapeZ_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_14CylinderShapeZ_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_14CylinderShapeZ_2__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_CylinderShapeZ *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_14CylinderShapeZ_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CylinderShapeZ *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__21, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CylinderShapeZ.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_14CylinderShapeZ_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_14CylinderShapeZ_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_14CylinderShapeZ_4__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_CylinderShapeZ *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_14CylinderShapeZ_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CylinderShapeZ *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CylinderShapeZ.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":351
 *     This class is a wrapper around btStaticPlaneShape.
 *     """
 *     def __cinit__(self, Vector3 normal not None, btScalar constant):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btStaticPlaneShape(
 *             btVector3(normal.x, normal.y, normal.z), constant)
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_16StaticPlaneShape_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_16StaticPlaneShape_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_normal = 0;
  btScalar __pyx_v_constant;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_normal,&__pyx_n_s_constant,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_normal)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_constant)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); __PYX_ERR(1, 351, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(1, 351, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_normal = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
    __pyx_v_constant = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_constant == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 351, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 351, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.StaticPlaneShape.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_normal), __pyx_ptype_6bullet_6bullet_Vector3, 0, "normal", 0))) __PYX_ERR(1, 351, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_16StaticPlaneShape___cinit__(((struct __pyx_obj_6bullet_6bullet_StaticPlaneShape *)__pyx_v_self), __pyx_v_normal, __pyx_v_constant);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_16StaticPlaneShape___cinit__(struct __pyx_obj_6bullet_6bullet_StaticPlaneShape *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_normal, btScalar __pyx_v_constant) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bullet/bullet.pyx":352
 *     """
 *     def __cinit__(self, Vector3 normal not None, btScalar constant):
 *         self.thisptr = new btStaticPlaneShape(             # <<<<<<<<<<<<<<
 *             btVector3(normal.x, normal.y, normal.z), constant)
 * 
 */
  __pyx_v_self->__pyx_base.thisptr = new btStaticPlaneShape(btVector3(__pyx_v_normal->x, __pyx_v_normal->y, __pyx_v_normal->z), __pyx_v_constant);

  /* "bullet/bullet.pyx":351
 *     This class is a wrapper around btStaticPlaneShape.
 *     """
 *     def __cinit__(self, Vector3 normal not None, btScalar constant):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btStaticPlaneShape(
 *             btVector3(normal.x, normal.y, normal.z), constant)
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_16StaticPlaneShape_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_16StaticPlaneShape_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_16StaticPlaneShape_2__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_StaticPlaneShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_16StaticPlaneShape_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_StaticPlaneShape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.StaticPlaneShape.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_16StaticPlaneShape_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_16StaticPlaneShape_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_16StaticPlaneShape_4__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_StaticPlaneShape *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_16StaticPlaneShape_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_StaticPlaneShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.StaticPlaneShape.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":379
 *     cdef btIndexedMesh* thisptr
 * 
 *     cdef PHY_ScalarType _dtypeToScalarType(self, numpy.ndarray array):             # <<<<<<<<<<<<<<
 *         cdef char *dname = array.dtype.char
 *         cdef char dtype = dname[0]
 */

static enum PHY_ScalarType __pyx_f_6bullet_6bullet_11IndexedMesh__dtypeToScalarType(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_IndexedMesh *__pyx_v_self, PyArrayObject *__pyx_v_array) {
  char *__pyx_v_dname;
  char __pyx_v_dtype;
  enum PHY_ScalarType __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  char *__pyx_t_3;
  __Pyx_RefNannySetupContext("_dtypeToScalarType", 0);

  /* "bullet/bullet.pyx":380
 * 
 *     cdef PHY_ScalarType _dtypeToScalarType(self, numpy.ndarray array):
 *         cdef char *dname = array.dtype.char             # <<<<<<<<<<<<<<
 *         cdef char dtype = dname[0]
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_array), __pyx_n_s_dtype); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_char); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_AsWritableString(__pyx_t_2); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) __PYX_ERR(1, 380, __pyx_L1_error)
  __pyx_v_dname = __pyx_t_3;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "bullet/bullet.pyx":381
 *     cdef PHY_ScalarType _dtypeToScalarType(self, numpy.ndarray array):
 *         cdef char *dname = array.dtype.char
 *         cdef char dtype = dname[0]             # <<<<<<<<<<<<<<
 * 
 *         if dtype == 'f':
 */
  __pyx_v_dtype = (__pyx_v_dname[0]);

  /* "bullet/bullet.pyx":383
 *         cdef char dtype = dname[0]
 * 
 *         if dtype == 'f':             # <<<<<<<<<<<<<<
 *             return PHY_FLOAT
 *         elif dtype == 'd':
 */
  switch (__pyx_v_dtype) {
    case 'f':

    /* "bullet/bullet.pyx":384
 * 
 *         if dtype == 'f':
 *             return PHY_FLOAT             # <<<<<<<<<<<<<<
 *         elif dtype == 'd':
 *             return PHY_DOUBLE
 */
    __pyx_r = PHY_FLOAT;
    goto __pyx_L0;

    /* "bullet/bullet.pyx":383
 *         cdef char dtype = dname[0]
 * 
 *         if dtype == 'f':             # <<<<<<<<<<<<<<
 *             return PHY_FLOAT
 *         elif dtype == 'd':
 */
    break;

    /* "bullet/bullet.pyx":385
 *         if dtype == 'f':
 *             return PHY_FLOAT
 *         elif dtype == 'd':             # <<<<<<<<<<<<<<
 *             return PHY_DOUBLE
 *         elif dtype == 'i':
 */
    case 'd':

    /* "bullet/bullet.pyx":386
 *             return PHY_FLOAT
 *         elif dtype == 'd':
 *             return PHY_DOUBLE             # <<<<<<<<<<<<<<
 *         elif dtype == 'i':
 *             return PHY_INTEGER
 */
    __pyx_r = PHY_DOUBLE;
    goto __pyx_L0;

    /* "bullet/bullet.pyx":385
 *         if dtype == 'f':
 *             return PHY_FLOAT
 *         elif dtype == 'd':             # <<<<<<<<<<<<<<
 *             return PHY_DOUBLE
 *         elif dtype == 'i':
 */
    break;

    /* "bullet/bullet.pyx":387
 *         elif dtype == 'd':
 *             return PHY_DOUBLE
 *         elif dtype == 'i':             # <<<<<<<<<<<<<<
 *             return PHY_INTEGER
 *         elif dtype == 'h':
 */
    case 'i':

    /* "bullet/bullet.pyx":388
 *             return PHY_DOUBLE
 *         elif dtype == 'i':
 *             return PHY_INTEGER             # <<<<<<<<<<<<<<
 *         elif dtype == 'h':
 *             return PHY_SHORT
 */
    __pyx_r = PHY_INTEGER;
    goto __pyx_L0;

    /* "bullet/bullet.pyx":387
 *         elif dtype == 'd':
 *             return PHY_DOUBLE
 *         elif dtype == 'i':             # <<<<<<<<<<<<<<
 *             return PHY_INTEGER
 *         elif dtype == 'h':
 */
    break;

    /* "bullet/bullet.pyx":389
 *         elif dtype == 'i':
 *             return PHY_INTEGER
 *         elif dtype == 'h':             # <<<<<<<<<<<<<<
 *             return PHY_SHORT
 *         return <PHY_ScalarType>-1
 */
    case 'h':

    /* "bullet/bullet.pyx":390
 *             return PHY_INTEGER
 *         elif dtype == 'h':
 *             return PHY_SHORT             # <<<<<<<<<<<<<<
 *         return <PHY_ScalarType>-1
 * 
 */
    __pyx_r = PHY_SHORT;
    goto __pyx_L0;

    /* "bullet/bullet.pyx":389
 *         elif dtype == 'i':
 *             return PHY_INTEGER
 *         elif dtype == 'h':             # <<<<<<<<<<<<<<
 *             return PHY_SHORT
 *         return <PHY_ScalarType>-1
 */
    break;
    default: break;
  }

  /* "bullet/bullet.pyx":391
 *         elif dtype == 'h':
 *             return PHY_SHORT
 *         return <PHY_ScalarType>-1             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((enum PHY_ScalarType)-1L);
  goto __pyx_L0;

  /* "bullet/bullet.pyx":379
 *     cdef btIndexedMesh* thisptr
 * 
 *     cdef PHY_ScalarType _dtypeToScalarType(self, numpy.ndarray array):             # <<<<<<<<<<<<<<
 *         cdef char *dname = array.dtype.char
 *         cdef char dtype = dname[0]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_WriteUnraisable("bullet.bullet.IndexedMesh._dtypeToScalarType", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = (enum PHY_ScalarType) 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":394
 * 
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btIndexedMesh()
 *         self.thisptr.m_numTriangles = 0
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_11IndexedMesh_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_11IndexedMesh_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6bullet_6bullet_11IndexedMesh___cinit__(((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_11IndexedMesh___cinit__(struct __pyx_obj_6bullet_6bullet_IndexedMesh *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  btIndexedMesh *__pyx_t_1;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bullet/bullet.pyx":395
 * 
 *     def __cinit__(self):
 *         self.thisptr = new btIndexedMesh()             # <<<<<<<<<<<<<<
 *         self.thisptr.m_numTriangles = 0
 *         self.thisptr.m_triangleIndexBase = NULL
 */
  try {
    __pyx_t_1 = new btIndexedMesh();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 395, __pyx_L1_error)
  }
  __pyx_v_self->thisptr = __pyx_t_1;

  /* "bullet/bullet.pyx":396
 *     def __cinit__(self):
 *         self.thisptr = new btIndexedMesh()
 *         self.thisptr.m_numTriangles = 0             # <<<<<<<<<<<<<<
 *         self.thisptr.m_triangleIndexBase = NULL
 *         self.thisptr.m_triangleIndexStride = 0
 */
  __pyx_v_self->thisptr->m_numTriangles = 0;

  /* "bullet/bullet.pyx":397
 *         self.thisptr = new btIndexedMesh()
 *         self.thisptr.m_numTriangles = 0
 *         self.thisptr.m_triangleIndexBase = NULL             # <<<<<<<<<<<<<<
 *         self.thisptr.m_triangleIndexStride = 0
 *         self.thisptr.m_numVertices = 0
 */
  __pyx_v_self->thisptr->m_triangleIndexBase = NULL;

  /* "bullet/bullet.pyx":398
 *         self.thisptr.m_numTriangles = 0
 *         self.thisptr.m_triangleIndexBase = NULL
 *         self.thisptr.m_triangleIndexStride = 0             # <<<<<<<<<<<<<<
 *         self.thisptr.m_numVertices = 0
 *         self.thisptr.m_vertexBase = NULL
 */
  __pyx_v_self->thisptr->m_triangleIndexStride = 0;

  /* "bullet/bullet.pyx":399
 *         self.thisptr.m_triangleIndexBase = NULL
 *         self.thisptr.m_triangleIndexStride = 0
 *         self.thisptr.m_numVertices = 0             # <<<<<<<<<<<<<<
 *         self.thisptr.m_vertexBase = NULL
 *         self.thisptr.m_vertexStride = 0
 */
  __pyx_v_self->thisptr->m_numVertices = 0;

  /* "bullet/bullet.pyx":400
 *         self.thisptr.m_triangleIndexStride = 0
 *         self.thisptr.m_numVertices = 0
 *         self.thisptr.m_vertexBase = NULL             # <<<<<<<<<<<<<<
 *         self.thisptr.m_vertexStride = 0
 *         self.thisptr.m_indexType = PHY_FLOAT
 */
  __pyx_v_self->thisptr->m_vertexBase = NULL;

  /* "bullet/bullet.pyx":401
 *         self.thisptr.m_numVertices = 0
 *         self.thisptr.m_vertexBase = NULL
 *         self.thisptr.m_vertexStride = 0             # <<<<<<<<<<<<<<
 *         self.thisptr.m_indexType = PHY_FLOAT
 *         self.thisptr.m_vertexType = PHY_FLOAT
 */
  __pyx_v_self->thisptr->m_vertexStride = 0;

  /* "bullet/bullet.pyx":402
 *         self.thisptr.m_vertexBase = NULL
 *         self.thisptr.m_vertexStride = 0
 *         self.thisptr.m_indexType = PHY_FLOAT             # <<<<<<<<<<<<<<
 *         self.thisptr.m_vertexType = PHY_FLOAT
 * 
 */
  __pyx_v_self->thisptr->m_indexType = PHY_FLOAT;

  /* "bullet/bullet.pyx":403
 *         self.thisptr.m_vertexStride = 0
 *         self.thisptr.m_indexType = PHY_FLOAT
 *         self.thisptr.m_vertexType = PHY_FLOAT             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->m_vertexType = PHY_FLOAT;

  /* "bullet/bullet.pyx":394
 * 
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btIndexedMesh()
 *         self.thisptr.m_numTriangles = 0
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.IndexedMesh.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":406
 * 
 * 
 *     def setIndices(self, int numTriangles, int indexStride,             # <<<<<<<<<<<<<<
 *                    numpy.ndarray indexBase not None):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_11IndexedMesh_3setIndices(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_11IndexedMesh_2setIndices[] = "\n        Specify the index data for for this IndexedMesh.\n\n        numTriangles specifies the total number of triangles this mesh will\n        contain.\n\n        indexStride gives the distance in bytes between the start of each triple\n        of values defining a triangle.\n\n        indexBase is a numpy array giving the index data itself.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_11IndexedMesh_3setIndices(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_numTriangles;
  int __pyx_v_indexStride;
  PyArrayObject *__pyx_v_indexBase = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setIndices (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_numTriangles,&__pyx_n_s_indexStride,&__pyx_n_s_indexBase,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_numTriangles)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_indexStride)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setIndices", 1, 3, 3, 1); __PYX_ERR(1, 406, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_indexBase)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setIndices", 1, 3, 3, 2); __PYX_ERR(1, 406, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setIndices") < 0)) __PYX_ERR(1, 406, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_numTriangles = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_numTriangles == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 406, __pyx_L3_error)
    __pyx_v_indexStride = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_indexStride == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 406, __pyx_L3_error)
    __pyx_v_indexBase = ((PyArrayObject *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setIndices", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 406, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.IndexedMesh.setIndices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_indexBase), __pyx_ptype_5numpy_ndarray, 0, "indexBase", 0))) __PYX_ERR(1, 407, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_11IndexedMesh_2setIndices(((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self), __pyx_v_numTriangles, __pyx_v_indexStride, __pyx_v_indexBase);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_11IndexedMesh_2setIndices(struct __pyx_obj_6bullet_6bullet_IndexedMesh *__pyx_v_self, int __pyx_v_numTriangles, int __pyx_v_indexStride, PyArrayObject *__pyx_v_indexBase) {
  enum PHY_ScalarType __pyx_v_indexType;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("setIndices", 0);

  /* "bullet/bullet.pyx":419
 *         indexBase is a numpy array giving the index data itself.
 *         """
 *         cdef PHY_ScalarType indexType = self._dtypeToScalarType(indexBase)             # <<<<<<<<<<<<<<
 *         if indexType == -1:
 *             raise ValueError("Unsupported index array type")
 */
  __pyx_v_indexType = ((struct __pyx_vtabstruct_6bullet_6bullet_IndexedMesh *)__pyx_v_self->__pyx_vtab)->_dtypeToScalarType(__pyx_v_self, __pyx_v_indexBase);

  /* "bullet/bullet.pyx":420
 *         """
 *         cdef PHY_ScalarType indexType = self._dtypeToScalarType(indexBase)
 *         if indexType == -1:             # <<<<<<<<<<<<<<
 *             raise ValueError("Unsupported index array type")
 * 
 */
  __pyx_t_1 = ((__pyx_v_indexType == -1L) != 0);
  if (__pyx_t_1) {

    /* "bullet/bullet.pyx":421
 *         cdef PHY_ScalarType indexType = self._dtypeToScalarType(indexBase)
 *         if indexType == -1:
 *             raise ValueError("Unsupported index array type")             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr.m_numTriangles = numTriangles
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 421, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(1, 421, __pyx_L1_error)

    /* "bullet/bullet.pyx":420
 *         """
 *         cdef PHY_ScalarType indexType = self._dtypeToScalarType(indexBase)
 *         if indexType == -1:             # <<<<<<<<<<<<<<
 *             raise ValueError("Unsupported index array type")
 * 
 */
  }

  /* "bullet/bullet.pyx":423
 *             raise ValueError("Unsupported index array type")
 * 
 *         self.thisptr.m_numTriangles = numTriangles             # <<<<<<<<<<<<<<
 *         self.thisptr.m_triangleIndexStride = indexStride
 *         self.thisptr.m_triangleIndexBase = <unsigned char*>indexBase.data
 */
  __pyx_v_self->thisptr->m_numTriangles = __pyx_v_numTriangles;

  /* "bullet/bullet.pyx":424
 * 
 *         self.thisptr.m_numTriangles = numTriangles
 *         self.thisptr.m_triangleIndexStride = indexStride             # <<<<<<<<<<<<<<
 *         self.thisptr.m_triangleIndexBase = <unsigned char*>indexBase.data
 *         self.thisptr.m_indexType = indexType
 */
  __pyx_v_self->thisptr->m_triangleIndexStride = __pyx_v_indexStride;

  /* "bullet/bullet.pyx":425
 *         self.thisptr.m_numTriangles = numTriangles
 *         self.thisptr.m_triangleIndexStride = indexStride
 *         self.thisptr.m_triangleIndexBase = <unsigned char*>indexBase.data             # <<<<<<<<<<<<<<
 *         self.thisptr.m_indexType = indexType
 * 
 */
  __pyx_v_self->thisptr->m_triangleIndexBase = ((unsigned char *)__pyx_v_indexBase->data);

  /* "bullet/bullet.pyx":426
 *         self.thisptr.m_triangleIndexStride = indexStride
 *         self.thisptr.m_triangleIndexBase = <unsigned char*>indexBase.data
 *         self.thisptr.m_indexType = indexType             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->m_indexType = __pyx_v_indexType;

  /* "bullet/bullet.pyx":406
 * 
 * 
 *     def setIndices(self, int numTriangles, int indexStride,             # <<<<<<<<<<<<<<
 *                    numpy.ndarray indexBase not None):
 *         """
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bullet.bullet.IndexedMesh.setIndices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":429
 * 
 * 
 *     def setVertices(self, int numVertices, int vertexStride,             # <<<<<<<<<<<<<<
 *                     numpy.ndarray vertexBase not None):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_11IndexedMesh_5setVertices(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_11IndexedMesh_4setVertices[] = "\n        Specify the vertex data for this IndexedMesh.\n\n        numVertices specifies the total number of vertices this mesh will\n        contain.\n\n        vertexStride gives the distance in bytes between the start of each\n        triple of values defining a vertex.\n\n        vertexBase is a numpy array giving the vertex data itself.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_11IndexedMesh_5setVertices(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_numVertices;
  int __pyx_v_vertexStride;
  PyArrayObject *__pyx_v_vertexBase = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setVertices (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_numVertices,&__pyx_n_s_vertexStride,&__pyx_n_s_vertexBase,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_numVertices)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vertexStride)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setVertices", 1, 3, 3, 1); __PYX_ERR(1, 429, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_vertexBase)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setVertices", 1, 3, 3, 2); __PYX_ERR(1, 429, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setVertices") < 0)) __PYX_ERR(1, 429, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_numVertices = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_numVertices == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 429, __pyx_L3_error)
    __pyx_v_vertexStride = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_vertexStride == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 429, __pyx_L3_error)
    __pyx_v_vertexBase = ((PyArrayObject *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setVertices", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 429, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.IndexedMesh.setVertices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_vertexBase), __pyx_ptype_5numpy_ndarray, 0, "vertexBase", 0))) __PYX_ERR(1, 430, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_11IndexedMesh_4setVertices(((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self), __pyx_v_numVertices, __pyx_v_vertexStride, __pyx_v_vertexBase);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_11IndexedMesh_4setVertices(struct __pyx_obj_6bullet_6bullet_IndexedMesh *__pyx_v_self, int __pyx_v_numVertices, int __pyx_v_vertexStride, PyArrayObject *__pyx_v_vertexBase) {
  enum PHY_ScalarType __pyx_v_vertexType;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("setVertices", 0);

  /* "bullet/bullet.pyx":442
 *         vertexBase is a numpy array giving the vertex data itself.
 *         """
 *         cdef PHY_ScalarType vertexType = self._dtypeToScalarType(vertexBase)             # <<<<<<<<<<<<<<
 *         if vertexType == -1:
 *             raise ValueError("Unsupported index array type")
 */
  __pyx_v_vertexType = ((struct __pyx_vtabstruct_6bullet_6bullet_IndexedMesh *)__pyx_v_self->__pyx_vtab)->_dtypeToScalarType(__pyx_v_self, __pyx_v_vertexBase);

  /* "bullet/bullet.pyx":443
 *         """
 *         cdef PHY_ScalarType vertexType = self._dtypeToScalarType(vertexBase)
 *         if vertexType == -1:             # <<<<<<<<<<<<<<
 *             raise ValueError("Unsupported index array type")
 * 
 */
  __pyx_t_1 = ((__pyx_v_vertexType == -1L) != 0);
  if (__pyx_t_1) {

    /* "bullet/bullet.pyx":444
 *         cdef PHY_ScalarType vertexType = self._dtypeToScalarType(vertexBase)
 *         if vertexType == -1:
 *             raise ValueError("Unsupported index array type")             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr.m_numVertices = numVertices
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 444, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(1, 444, __pyx_L1_error)

    /* "bullet/bullet.pyx":443
 *         """
 *         cdef PHY_ScalarType vertexType = self._dtypeToScalarType(vertexBase)
 *         if vertexType == -1:             # <<<<<<<<<<<<<<
 *             raise ValueError("Unsupported index array type")
 * 
 */
  }

  /* "bullet/bullet.pyx":446
 *             raise ValueError("Unsupported index array type")
 * 
 *         self.thisptr.m_numVertices = numVertices             # <<<<<<<<<<<<<<
 *         self.thisptr.m_vertexStride = vertexStride
 *         self.thisptr.m_vertexBase = <unsigned char*>vertexBase.data
 */
  __pyx_v_self->thisptr->m_numVertices = __pyx_v_numVertices;

  /* "bullet/bullet.pyx":447
 * 
 *         self.thisptr.m_numVertices = numVertices
 *         self.thisptr.m_vertexStride = vertexStride             # <<<<<<<<<<<<<<
 *         self.thisptr.m_vertexBase = <unsigned char*>vertexBase.data
 *         self.thisptr.m_vertexType = vertexType
 */
  __pyx_v_self->thisptr->m_vertexStride = __pyx_v_vertexStride;

  /* "bullet/bullet.pyx":448
 *         self.thisptr.m_numVertices = numVertices
 *         self.thisptr.m_vertexStride = vertexStride
 *         self.thisptr.m_vertexBase = <unsigned char*>vertexBase.data             # <<<<<<<<<<<<<<
 *         self.thisptr.m_vertexType = vertexType
 * 
 */
  __pyx_v_self->thisptr->m_vertexBase = ((unsigned char *)__pyx_v_vertexBase->data);

  /* "bullet/bullet.pyx":449
 *         self.thisptr.m_vertexStride = vertexStride
 *         self.thisptr.m_vertexBase = <unsigned char*>vertexBase.data
 *         self.thisptr.m_vertexType = vertexType             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->m_vertexType = __pyx_v_vertexType;

  /* "bullet/bullet.pyx":429
 * 
 * 
 *     def setVertices(self, int numVertices, int vertexStride,             # <<<<<<<<<<<<<<
 *                     numpy.ndarray vertexBase not None):
 *         """
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bullet.bullet.IndexedMesh.setVertices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":452
 * 
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_6bullet_6bullet_11IndexedMesh_7__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6bullet_6bullet_11IndexedMesh_7__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6bullet_6bullet_11IndexedMesh_6__dealloc__(((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6bullet_6bullet_11IndexedMesh_6__dealloc__(struct __pyx_obj_6bullet_6bullet_IndexedMesh *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "bullet/bullet.pyx":453
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete __pyx_v_self->thisptr;

  /* "bullet/bullet.pyx":452
 * 
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_11IndexedMesh_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_11IndexedMesh_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_11IndexedMesh_8__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_11IndexedMesh_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_IndexedMesh *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__27, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.IndexedMesh.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_11IndexedMesh_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_11IndexedMesh_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_11IndexedMesh_10__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_11IndexedMesh_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_IndexedMesh *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__28, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.IndexedMesh.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":468
 *     cdef btStridingMeshInterface *thisptr
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_6bullet_6bullet_21StridingMeshInterface_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6bullet_6bullet_21StridingMeshInterface_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6bullet_6bullet_21StridingMeshInterface___dealloc__(((struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6bullet_6bullet_21StridingMeshInterface___dealloc__(struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "bullet/bullet.pyx":469
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete __pyx_v_self->thisptr;

  /* "bullet/bullet.pyx":468
 *     cdef btStridingMeshInterface *thisptr
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "bullet/bullet.pyx":472
 * 
 * 
 *     def getNumSubParts(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the number of separate continuous vertex arrays are part of this
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_21StridingMeshInterface_3getNumSubParts(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_21StridingMeshInterface_2getNumSubParts[] = "\n        Return the number of separate continuous vertex arrays are part of this\n        StridingMeshInterface.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_21StridingMeshInterface_3getNumSubParts(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getNumSubParts (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_21StridingMeshInterface_2getNumSubParts(((struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_21StridingMeshInterface_2getNumSubParts(struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getNumSubParts", 0);

  /* "bullet/bullet.pyx":477
 *         StridingMeshInterface.
 *         """
 *         return self.thisptr.getNumSubParts()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->thisptr->getNumSubParts()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 477, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":472
 * 
 * 
 *     def getNumSubParts(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the number of separate continuous vertex arrays are part of this
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.StridingMeshInterface.getNumSubParts", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_21StridingMeshInterface_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_21StridingMeshInterface_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_21StridingMeshInterface_4__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_21StridingMeshInterface_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__29, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.StridingMeshInterface.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_21StridingMeshInterface_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_21StridingMeshInterface_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_21StridingMeshInterface_6__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_21StridingMeshInterface_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.StridingMeshInterface.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":491
 *     This class is a wrapper around btTriangleIndexVertexArray.
 *     """
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btTriangleIndexVertexArray()
 * 
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_24TriangleIndexVertexArray_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_24TriangleIndexVertexArray_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6bullet_6bullet_24TriangleIndexVertexArray___cinit__(((struct __pyx_obj_6bullet_6bullet_TriangleIndexVertexArray *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_24TriangleIndexVertexArray___cinit__(struct __pyx_obj_6bullet_6bullet_TriangleIndexVertexArray *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bullet/bullet.pyx":492
 *     """
 *     def __cinit__(self):
 *         self.thisptr = new btTriangleIndexVertexArray()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->__pyx_base.thisptr = new btTriangleIndexVertexArray();

  /* "bullet/bullet.pyx":491
 *     This class is a wrapper around btTriangleIndexVertexArray.
 *     """
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btTriangleIndexVertexArray()
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":495
 * 
 * 
 *     def addIndexedMesh(self, IndexedMesh mesh not None):             # <<<<<<<<<<<<<<
 *         """
 *         Add another IndexedMesh to this index/vertex array.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_24TriangleIndexVertexArray_3addIndexedMesh(PyObject *__pyx_v_self, PyObject *__pyx_v_mesh); /*proto*/
static char __pyx_doc_6bullet_6bullet_24TriangleIndexVertexArray_2addIndexedMesh[] = "\n        Add another IndexedMesh to this index/vertex array.\n\n        XXX When is it necessary to rebuild the optimized bvh on\n        BvhTriangleMeshShape with respect to changes to this\n        TriangleIndexVertexArray.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_24TriangleIndexVertexArray_3addIndexedMesh(PyObject *__pyx_v_self, PyObject *__pyx_v_mesh) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addIndexedMesh (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_mesh), __pyx_ptype_6bullet_6bullet_IndexedMesh, 0, "mesh", 0))) __PYX_ERR(1, 495, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_24TriangleIndexVertexArray_2addIndexedMesh(((struct __pyx_obj_6bullet_6bullet_TriangleIndexVertexArray *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_mesh));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_24TriangleIndexVertexArray_2addIndexedMesh(struct __pyx_obj_6bullet_6bullet_TriangleIndexVertexArray *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_IndexedMesh *__pyx_v_mesh) {
  btTriangleIndexVertexArray *__pyx_v_array;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("addIndexedMesh", 0);

  /* "bullet/bullet.pyx":503
 *         TriangleIndexVertexArray.
 *         """
 *         if mesh.thisptr.m_vertexType == PHY_INTEGER:             # <<<<<<<<<<<<<<
 *             raise ValueError("XXX")
 *         cdef btTriangleIndexVertexArray *array
 */
  __pyx_t_1 = ((__pyx_v_mesh->thisptr->m_vertexType == PHY_INTEGER) != 0);
  if (__pyx_t_1) {

    /* "bullet/bullet.pyx":504
 *         """
 *         if mesh.thisptr.m_vertexType == PHY_INTEGER:
 *             raise ValueError("XXX")             # <<<<<<<<<<<<<<
 *         cdef btTriangleIndexVertexArray *array
 *         array = <btTriangleIndexVertexArray*>self.thisptr
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__31, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(1, 504, __pyx_L1_error)

    /* "bullet/bullet.pyx":503
 *         TriangleIndexVertexArray.
 *         """
 *         if mesh.thisptr.m_vertexType == PHY_INTEGER:             # <<<<<<<<<<<<<<
 *             raise ValueError("XXX")
 *         cdef btTriangleIndexVertexArray *array
 */
  }

  /* "bullet/bullet.pyx":506
 *             raise ValueError("XXX")
 *         cdef btTriangleIndexVertexArray *array
 *         array = <btTriangleIndexVertexArray*>self.thisptr             # <<<<<<<<<<<<<<
 *         array.addIndexedMesh(mesh.thisptr[0], mesh.thisptr.m_indexType)
 * 
 */
  __pyx_v_array = ((btTriangleIndexVertexArray *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":507
 *         cdef btTriangleIndexVertexArray *array
 *         array = <btTriangleIndexVertexArray*>self.thisptr
 *         array.addIndexedMesh(mesh.thisptr[0], mesh.thisptr.m_indexType)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_array->addIndexedMesh((__pyx_v_mesh->thisptr[0]), __pyx_v_mesh->thisptr->m_indexType);

  /* "bullet/bullet.pyx":495
 * 
 * 
 *     def addIndexedMesh(self, IndexedMesh mesh not None):             # <<<<<<<<<<<<<<
 *         """
 *         Add another IndexedMesh to this index/vertex array.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bullet.bullet.TriangleIndexVertexArray.addIndexedMesh", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_24TriangleIndexVertexArray_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_24TriangleIndexVertexArray_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_24TriangleIndexVertexArray_4__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_TriangleIndexVertexArray *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_24TriangleIndexVertexArray_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_TriangleIndexVertexArray *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__32, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.TriangleIndexVertexArray.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_24TriangleIndexVertexArray_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_24TriangleIndexVertexArray_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_24TriangleIndexVertexArray_6__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_TriangleIndexVertexArray *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_24TriangleIndexVertexArray_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_TriangleIndexVertexArray *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__33, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.TriangleIndexVertexArray.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":520
 *     cdef StridingMeshInterface stride
 * 
 *     def __init__(self, StridingMeshInterface mesh not None):             # <<<<<<<<<<<<<<
 *         self.stride = mesh
 *         self.thisptr = new btBvhTriangleMeshShape(mesh.thisptr, True, False)
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_20BvhTriangleMeshShape_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_20BvhTriangleMeshShape_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *__pyx_v_mesh = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_mesh,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_mesh)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(1, 520, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_mesh = ((struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 520, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.BvhTriangleMeshShape.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_mesh), __pyx_ptype_6bullet_6bullet_StridingMeshInterface, 0, "mesh", 0))) __PYX_ERR(1, 520, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_20BvhTriangleMeshShape___init__(((struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *)__pyx_v_self), __pyx_v_mesh);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_20BvhTriangleMeshShape___init__(struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *__pyx_v_mesh) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "bullet/bullet.pyx":521
 * 
 *     def __init__(self, StridingMeshInterface mesh not None):
 *         self.stride = mesh             # <<<<<<<<<<<<<<
 *         self.thisptr = new btBvhTriangleMeshShape(mesh.thisptr, True, False)
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_mesh));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_mesh));
  __Pyx_GOTREF(__pyx_v_self->stride);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->stride));
  __pyx_v_self->stride = __pyx_v_mesh;

  /* "bullet/bullet.pyx":522
 *     def __init__(self, StridingMeshInterface mesh not None):
 *         self.stride = mesh
 *         self.thisptr = new btBvhTriangleMeshShape(mesh.thisptr, True, False)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->__pyx_base.__pyx_base.thisptr = new btBvhTriangleMeshShape(__pyx_v_mesh->thisptr, 1, 0);

  /* "bullet/bullet.pyx":520
 *     cdef StridingMeshInterface stride
 * 
 *     def __init__(self, StridingMeshInterface mesh not None):             # <<<<<<<<<<<<<<
 *         self.stride = mesh
 *         self.thisptr = new btBvhTriangleMeshShape(mesh.thisptr, True, False)
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":525
 * 
 * 
 *     def buildOptimizedBvh(self):             # <<<<<<<<<<<<<<
 *         """
 *         Build the internal optimized Bounding Volume Hierarchy structure to
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_20BvhTriangleMeshShape_3buildOptimizedBvh(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_20BvhTriangleMeshShape_2buildOptimizedBvh[] = "\n        Build the internal optimized Bounding Volume Hierarchy structure to\n        allow fast collision detection between this and other shapes.\n\n        XXX You probably have to call this if you ever change the underlying\n        mesh.  But I don't know.\n\n        XXX You also have to call it before you try to use this shape for\n        collision detection.\n\n        XXX You also must put data into the underlying mesh or an assert will\n        fail in bullet.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_20BvhTriangleMeshShape_3buildOptimizedBvh(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("buildOptimizedBvh (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_20BvhTriangleMeshShape_2buildOptimizedBvh(((struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_20BvhTriangleMeshShape_2buildOptimizedBvh(struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("buildOptimizedBvh", 0);

  /* "bullet/bullet.pyx":540
 *         """
 *         # XXX This is executed by the test suite, but it's not actually tested.
 *         (<btBvhTriangleMeshShape*>self.thisptr).buildOptimizedBvh()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((btBvhTriangleMeshShape *)__pyx_v_self->__pyx_base.__pyx_base.thisptr)->buildOptimizedBvh();

  /* "bullet/bullet.pyx":525
 * 
 * 
 *     def buildOptimizedBvh(self):             # <<<<<<<<<<<<<<
 *         """
 *         Build the internal optimized Bounding Volume Hierarchy structure to
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_20BvhTriangleMeshShape_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_20BvhTriangleMeshShape_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_20BvhTriangleMeshShape_4__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_20BvhTriangleMeshShape_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__34, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.BvhTriangleMeshShape.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_20BvhTriangleMeshShape_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_20BvhTriangleMeshShape_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_20BvhTriangleMeshShape_6__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_20BvhTriangleMeshShape_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__35, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.BvhTriangleMeshShape.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":556
 *     cdef btTransform *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btTransform()
 *         self.thisptr.setIdentity()
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_9Transform_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_9Transform_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6bullet_6bullet_9Transform___cinit__(((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_9Transform___cinit__(struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  btTransform *__pyx_t_1;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bullet/bullet.pyx":557
 * 
 *     def __cinit__(self):
 *         self.thisptr = new btTransform()             # <<<<<<<<<<<<<<
 *         self.thisptr.setIdentity()
 * 
 */
  try {
    __pyx_t_1 = new btTransform();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 557, __pyx_L1_error)
  }
  __pyx_v_self->thisptr = __pyx_t_1;

  /* "bullet/bullet.pyx":558
 *     def __cinit__(self):
 *         self.thisptr = new btTransform()
 *         self.thisptr.setIdentity()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->setIdentity();

  /* "bullet/bullet.pyx":556
 *     cdef btTransform *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btTransform()
 *         self.thisptr.setIdentity()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.Transform.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":561
 * 
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_6bullet_6bullet_9Transform_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6bullet_6bullet_9Transform_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6bullet_6bullet_9Transform_2__dealloc__(((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6bullet_6bullet_9Transform_2__dealloc__(struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "bullet/bullet.pyx":562
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete __pyx_v_self->thisptr;

  /* "bullet/bullet.pyx":561
 * 
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "bullet/bullet.pyx":565
 * 
 * 
 *     def getOrigin(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the origin vector translation as a Vector3.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9Transform_5getOrigin(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9Transform_4getOrigin[] = "\n        Get the origin vector translation as a Vector3.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9Transform_5getOrigin(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getOrigin (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9Transform_4getOrigin(((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9Transform_4getOrigin(struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_self) {
  btVector3 __pyx_v_origin;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("getOrigin", 0);

  /* "bullet/bullet.pyx":569
 *         Get the origin vector translation as a Vector3.
 *         """
 *         cdef btVector3 origin = self.thisptr.getOrigin()             # <<<<<<<<<<<<<<
 *         return Vector3(origin.getX(), origin.getY(), origin.getZ())
 * 
 */
  __pyx_v_origin = __pyx_v_self->thisptr->getOrigin();

  /* "bullet/bullet.pyx":570
 *         """
 *         cdef btVector3 origin = self.thisptr.getOrigin()
 *         return Vector3(origin.getX(), origin.getY(), origin.getZ())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_origin.getX()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 570, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_origin.getY()); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 570, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_origin.getZ()); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 570, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 570, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Vector3), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 570, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":565
 * 
 * 
 *     def getOrigin(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the origin vector translation as a Vector3.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.Transform.getOrigin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":573
 * 
 * 
 *     def setOrigin(self, Vector3 origin not None):             # <<<<<<<<<<<<<<
 *         """
 *         Set the origin vector translation for this Transform.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9Transform_7setOrigin(PyObject *__pyx_v_self, PyObject *__pyx_v_origin); /*proto*/
static char __pyx_doc_6bullet_6bullet_9Transform_6setOrigin[] = "\n        Set the origin vector translation for this Transform.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9Transform_7setOrigin(PyObject *__pyx_v_self, PyObject *__pyx_v_origin) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setOrigin (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_origin), __pyx_ptype_6bullet_6bullet_Vector3, 0, "origin", 0))) __PYX_ERR(1, 573, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_9Transform_6setOrigin(((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_origin));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9Transform_6setOrigin(struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_origin) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setOrigin", 0);

  /* "bullet/bullet.pyx":577
 *         Set the origin vector translation for this Transform.
 *         """
 *         self.thisptr.setOrigin(btVector3(origin.x, origin.y, origin.z))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->setOrigin(btVector3(__pyx_v_origin->x, __pyx_v_origin->y, __pyx_v_origin->z));

  /* "bullet/bullet.pyx":573
 * 
 * 
 *     def setOrigin(self, Vector3 origin not None):             # <<<<<<<<<<<<<<
 *         """
 *         Set the origin vector translation for this Transform.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":580
 * 
 * 
 *     def setRotation(self, Quaternion rot not None):             # <<<<<<<<<<<<<<
 *         """
 *         Set the rotation of this Transform using a Quaternion.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9Transform_9setRotation(PyObject *__pyx_v_self, PyObject *__pyx_v_rot); /*proto*/
static char __pyx_doc_6bullet_6bullet_9Transform_8setRotation[] = "\n        Set the rotation of this Transform using a Quaternion.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9Transform_9setRotation(PyObject *__pyx_v_self, PyObject *__pyx_v_rot) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setRotation (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rot), __pyx_ptype_6bullet_6bullet_Quaternion, 0, "rot", 0))) __PYX_ERR(1, 580, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_9Transform_8setRotation(((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_rot));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9Transform_8setRotation(struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_rot) {
  btQuaternion *__pyx_v_quat;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  btQuaternion *__pyx_t_1;
  __Pyx_RefNannySetupContext("setRotation", 0);

  /* "bullet/bullet.pyx":584
 *         Set the rotation of this Transform using a Quaternion.
 *         """
 *         cdef btQuaternion *quat = rot.quaternion             # <<<<<<<<<<<<<<
 *         self.thisptr.setRotation(quat[0])
 * 
 */
  __pyx_t_1 = __pyx_v_rot->quaternion;
  __pyx_v_quat = __pyx_t_1;

  /* "bullet/bullet.pyx":585
 *         """
 *         cdef btQuaternion *quat = rot.quaternion
 *         self.thisptr.setRotation(quat[0])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->setRotation((__pyx_v_quat[0]));

  /* "bullet/bullet.pyx":580
 * 
 * 
 *     def setRotation(self, Quaternion rot not None):             # <<<<<<<<<<<<<<
 *         """
 *         Set the rotation of this Transform using a Quaternion.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":588
 * 
 * 
 *     def getRotation(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the rotation of this Transform as a Quaternion.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9Transform_11getRotation(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9Transform_10getRotation[] = "\n        Get the rotation of this Transform as a Quaternion.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9Transform_11getRotation(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getRotation (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9Transform_10getRotation(((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9Transform_10getRotation(struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_self) {
  btQuaternion __pyx_v_quat;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_RefNannySetupContext("getRotation", 0);

  /* "bullet/bullet.pyx":592
 *         Get the rotation of this Transform as a Quaternion.
 *         """
 *         cdef btQuaternion quat = self.thisptr.getRotation()             # <<<<<<<<<<<<<<
 *         return Quaternion.fromScalars(
 *             quat.getX(), quat.getY(), quat.getZ(), quat.getW())
 */
  __pyx_v_quat = __pyx_v_self->thisptr->getRotation();

  /* "bullet/bullet.pyx":593
 *         """
 *         cdef btQuaternion quat = self.thisptr.getRotation()
 *         return Quaternion.fromScalars(             # <<<<<<<<<<<<<<
 *             quat.getX(), quat.getY(), quat.getZ(), quat.getW())
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_6bullet_6bullet_Quaternion), __pyx_n_s_fromScalars); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "bullet/bullet.pyx":594
 *         cdef btQuaternion quat = self.thisptr.getRotation()
 *         return Quaternion.fromScalars(
 *             quat.getX(), quat.getY(), quat.getZ(), quat.getW())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_quat.getX()); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 594, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_quat.getY()); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 594, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_quat.getZ()); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 594, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyFloat_FromDouble(__pyx_v_quat.getW()); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 594, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_8 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[5] = {__pyx_t_7, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_8, 4+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 593, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[5] = {__pyx_t_7, __pyx_t_3, __pyx_t_4, __pyx_t_5, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_8, 4+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 593, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  {
    __pyx_t_9 = PyTuple_New(4+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 593, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_9, 3+__pyx_t_8, __pyx_t_6);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 593, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":588
 * 
 * 
 *     def getRotation(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the rotation of this Transform as a Quaternion.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("bullet.bullet.Transform.getRotation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":597
 * 
 * 
 *     def setIdentity(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set this Transform to be the identity.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9Transform_13setIdentity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9Transform_12setIdentity[] = "\n        Set this Transform to be the identity.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9Transform_13setIdentity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setIdentity (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9Transform_12setIdentity(((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9Transform_12setIdentity(struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setIdentity", 0);

  /* "bullet/bullet.pyx":601
 *         Set this Transform to be the identity.
 *         """
 *         self.thisptr.setIdentity()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->setIdentity();

  /* "bullet/bullet.pyx":597
 * 
 * 
 *     def setIdentity(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set this Transform to be the identity.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9Transform_15__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9Transform_15__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9Transform_14__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9Transform_14__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__36, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Transform.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9Transform_17__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9Transform_17__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9Transform_16__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9Transform_16__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__37, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Transform.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":620
 *     AllFilter = _AllFilter
 * 
 *     def __init__(self, short int collisionFilterGroup, short int collisionFilterMask):             # <<<<<<<<<<<<<<
 *         self.collisionFilterGroup = collisionFilterGroup
 *         self.collisionFilterMask = collisionFilterMask
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_15BroadphaseProxy_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_15BroadphaseProxy_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  short __pyx_v_collisionFilterGroup;
  short __pyx_v_collisionFilterMask;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_collisionFilterGroup,&__pyx_n_s_collisionFilterMask,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_collisionFilterGroup)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_collisionFilterMask)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, 1); __PYX_ERR(1, 620, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(1, 620, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_collisionFilterGroup = __Pyx_PyInt_As_short(values[0]); if (unlikely((__pyx_v_collisionFilterGroup == (short)-1) && PyErr_Occurred())) __PYX_ERR(1, 620, __pyx_L3_error)
    __pyx_v_collisionFilterMask = __Pyx_PyInt_As_short(values[1]); if (unlikely((__pyx_v_collisionFilterMask == (short)-1) && PyErr_Occurred())) __PYX_ERR(1, 620, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 620, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.BroadphaseProxy.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6bullet_6bullet_15BroadphaseProxy___init__(((struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *)__pyx_v_self), __pyx_v_collisionFilterGroup, __pyx_v_collisionFilterMask);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_15BroadphaseProxy___init__(struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *__pyx_v_self, short __pyx_v_collisionFilterGroup, short __pyx_v_collisionFilterMask) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "bullet/bullet.pyx":621
 * 
 *     def __init__(self, short int collisionFilterGroup, short int collisionFilterMask):
 *         self.collisionFilterGroup = collisionFilterGroup             # <<<<<<<<<<<<<<
 *         self.collisionFilterMask = collisionFilterMask
 * 
 */
  __pyx_v_self->collisionFilterGroup = __pyx_v_collisionFilterGroup;

  /* "bullet/bullet.pyx":622
 *     def __init__(self, short int collisionFilterGroup, short int collisionFilterMask):
 *         self.collisionFilterGroup = collisionFilterGroup
 *         self.collisionFilterMask = collisionFilterMask             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->collisionFilterMask = __pyx_v_collisionFilterMask;

  /* "bullet/bullet.pyx":620
 *     AllFilter = _AllFilter
 * 
 *     def __init__(self, short int collisionFilterGroup, short int collisionFilterMask):             # <<<<<<<<<<<<<<
 *         self.collisionFilterGroup = collisionFilterGroup
 *         self.collisionFilterMask = collisionFilterMask
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":614
 *     constructed.
 *     """
 *     cdef public short int collisionFilterGroup             # <<<<<<<<<<<<<<
 *     cdef public short int collisionFilterMask
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15BroadphaseProxy_20collisionFilterGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_15BroadphaseProxy_20collisionFilterGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_15BroadphaseProxy_20collisionFilterGroup___get__(((struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15BroadphaseProxy_20collisionFilterGroup___get__(struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_short(__pyx_v_self->collisionFilterGroup); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 614, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.BroadphaseProxy.collisionFilterGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_15BroadphaseProxy_20collisionFilterGroup_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_6bullet_6bullet_15BroadphaseProxy_20collisionFilterGroup_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_15BroadphaseProxy_20collisionFilterGroup_2__set__(((struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_15BroadphaseProxy_20collisionFilterGroup_2__set__(struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  short __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_short(__pyx_v_value); if (unlikely((__pyx_t_1 == (short)-1) && PyErr_Occurred())) __PYX_ERR(1, 614, __pyx_L1_error)
  __pyx_v_self->collisionFilterGroup = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.BroadphaseProxy.collisionFilterGroup.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":615
 *     """
 *     cdef public short int collisionFilterGroup
 *     cdef public short int collisionFilterMask             # <<<<<<<<<<<<<<
 * 
 *     DefaultFilter = _DefaultFilter
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15BroadphaseProxy_19collisionFilterMask_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_15BroadphaseProxy_19collisionFilterMask_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_15BroadphaseProxy_19collisionFilterMask___get__(((struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15BroadphaseProxy_19collisionFilterMask___get__(struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_short(__pyx_v_self->collisionFilterMask); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 615, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.BroadphaseProxy.collisionFilterMask.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_15BroadphaseProxy_19collisionFilterMask_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_6bullet_6bullet_15BroadphaseProxy_19collisionFilterMask_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_15BroadphaseProxy_19collisionFilterMask_2__set__(((struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_15BroadphaseProxy_19collisionFilterMask_2__set__(struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  short __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_short(__pyx_v_value); if (unlikely((__pyx_t_1 == (short)-1) && PyErr_Occurred())) __PYX_ERR(1, 615, __pyx_L1_error)
  __pyx_v_self->collisionFilterMask = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.BroadphaseProxy.collisionFilterMask.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef bint use_setstate
 *     state = (self.collisionFilterGroup, self.collisionFilterMask)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15BroadphaseProxy_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_15BroadphaseProxy_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_15BroadphaseProxy_2__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15BroadphaseProxy_2__reduce_cython__(struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *__pyx_v_self) {
  int __pyx_v_use_setstate;
  PyObject *__pyx_v_state = NULL;
  PyObject *__pyx_v__dict = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     cdef bint use_setstate
 *     state = (self.collisionFilterGroup, self.collisionFilterMask)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = __Pyx_PyInt_From_short(__pyx_v_self->collisionFilterGroup); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_short(__pyx_v_self->collisionFilterMask); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_v_state = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "(tree fragment)":4
 *     cdef bint use_setstate
 *     state = (self.collisionFilterGroup, self.collisionFilterMask)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_3 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v__dict = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "(tree fragment)":5
 *     state = (self.collisionFilterGroup, self.collisionFilterMask)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_4 = (__pyx_v__dict != Py_None);
  __pyx_t_5 = (__pyx_t_4 != 0);
  if (__pyx_t_5) {

    /* "(tree fragment)":6
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v__dict);
    __pyx_t_2 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "(tree fragment)":7
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":5
 *     state = (self.collisionFilterGroup, self.collisionFilterMask)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":9
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_BroadphaseProxy, (type(self), 0x497a8da, None), state
 */
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":10
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_BroadphaseProxy, (type(self), 0x497a8da, None), state
 *     else:
 */
  __pyx_t_5 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_5) {

    /* "(tree fragment)":11
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_BroadphaseProxy, (type(self), 0x497a8da, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_BroadphaseProxy, (type(self), 0x497a8da, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_pyx_unpickle_BroadphaseProxy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 11, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 11, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_77048026);
    __Pyx_GIVEREF(__pyx_int_77048026);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_77048026);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_3, 2, Py_None);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 11, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_3);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state);
    __pyx_t_2 = 0;
    __pyx_t_3 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":10
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_BroadphaseProxy, (type(self), 0x497a8da, None), state
 *     else:
 */
  }

  /* "(tree fragment)":13
 *         return __pyx_unpickle_BroadphaseProxy, (type(self), 0x497a8da, None), state
 *     else:
 *         return __pyx_unpickle_BroadphaseProxy, (type(self), 0x497a8da, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_BroadphaseProxy__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_pyx_unpickle_BroadphaseProxy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_77048026);
    __Pyx_GIVEREF(__pyx_int_77048026);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_77048026);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_v_state);
    __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
    __pyx_t_1 = 0;
    __pyx_t_3 = 0;
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef bint use_setstate
 *     state = (self.collisionFilterGroup, self.collisionFilterMask)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("bullet.bullet.BroadphaseProxy.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":14
 *     else:
 *         return __pyx_unpickle_BroadphaseProxy, (type(self), 0x497a8da, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_BroadphaseProxy__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15BroadphaseProxy_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_15BroadphaseProxy_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_15BroadphaseProxy_4__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15BroadphaseProxy_4__setstate_cython__(struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":15
 *         return __pyx_unpickle_BroadphaseProxy, (type(self), 0x497a8da, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_BroadphaseProxy__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(0, 15, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_6bullet_6bullet___pyx_unpickle_BroadphaseProxy__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":14
 *     else:
 *         return __pyx_unpickle_BroadphaseProxy, (type(self), 0x497a8da, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_BroadphaseProxy__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.BroadphaseProxy.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":663
 *     cdef CollisionShape _shape
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btCollisionObject()
 * 
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_15CollisionObject_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_15CollisionObject_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_6bullet_6bullet_15CollisionObject___init__(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_15CollisionObject___init__(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "bullet/bullet.pyx":664
 * 
 *     def __init__(self):
 *         self.thisptr = new btCollisionObject()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr = new btCollisionObject();

  /* "bullet/bullet.pyx":663
 *     cdef CollisionShape _shape
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btCollisionObject()
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":667
 * 
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_6bullet_6bullet_15CollisionObject_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6bullet_6bullet_15CollisionObject_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6bullet_6bullet_15CollisionObject_2__dealloc__(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6bullet_6bullet_15CollisionObject_2__dealloc__(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "bullet/bullet.pyx":668
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete __pyx_v_self->thisptr;

  /* "bullet/bullet.pyx":667
 * 
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "bullet/bullet.pyx":671
 * 
 * 
 *     def getFriction(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the friction value for this L{CollisionObject}.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_5getFriction(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_4getFriction[] = "\n        Return the friction value for this L{CollisionObject}.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_5getFriction(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getFriction (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_15CollisionObject_4getFriction(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_4getFriction(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getFriction", 0);

  /* "bullet/bullet.pyx":675
 *         Return the friction value for this L{CollisionObject}.
 *         """
 *         return self.thisptr.getFriction()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->thisptr->getFriction()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 675, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":671
 * 
 * 
 *     def getFriction(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the friction value for this L{CollisionObject}.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.getFriction", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":678
 * 
 * 
 *     def setFriction(self, btScalar friction):             # <<<<<<<<<<<<<<
 *         """
 *         Change the friction value for this L{CollisionObject}.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_7setFriction(PyObject *__pyx_v_self, PyObject *__pyx_arg_friction); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_6setFriction[] = "\n        Change the friction value for this L{CollisionObject}.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_7setFriction(PyObject *__pyx_v_self, PyObject *__pyx_arg_friction) {
  btScalar __pyx_v_friction;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setFriction (wrapper)", 0);
  assert(__pyx_arg_friction); {
    __pyx_v_friction = __pyx_PyFloat_AsFloat(__pyx_arg_friction); if (unlikely((__pyx_v_friction == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 678, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.setFriction", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6bullet_6bullet_15CollisionObject_6setFriction(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self), ((btScalar)__pyx_v_friction));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_6setFriction(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self, btScalar __pyx_v_friction) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setFriction", 0);

  /* "bullet/bullet.pyx":682
 *         Change the friction value for this L{CollisionObject}.
 *         """
 *         self.thisptr.setFriction(friction)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->setFriction(__pyx_v_friction);

  /* "bullet/bullet.pyx":678
 * 
 * 
 *     def setFriction(self, btScalar friction):             # <<<<<<<<<<<<<<
 *         """
 *         Change the friction value for this L{CollisionObject}.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":685
 * 
 * 
 *     def setRestitution(self, btScalar restitution):             # <<<<<<<<<<<<<<
 *         """
 *         Specify a scaling factor to be applied to the normal impulse computed
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_9setRestitution(PyObject *__pyx_v_self, PyObject *__pyx_arg_restitution); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_8setRestitution[] = "\n        Specify a scaling factor to be applied to the normal impulse computed\n        when this object collides with another.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_9setRestitution(PyObject *__pyx_v_self, PyObject *__pyx_arg_restitution) {
  btScalar __pyx_v_restitution;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setRestitution (wrapper)", 0);
  assert(__pyx_arg_restitution); {
    __pyx_v_restitution = __pyx_PyFloat_AsFloat(__pyx_arg_restitution); if (unlikely((__pyx_v_restitution == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 685, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.setRestitution", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6bullet_6bullet_15CollisionObject_8setRestitution(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self), ((btScalar)__pyx_v_restitution));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_8setRestitution(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self, btScalar __pyx_v_restitution) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setRestitution", 0);

  /* "bullet/bullet.pyx":690
 *         when this object collides with another.
 *         """
 *         self.thisptr.setRestitution(restitution)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->setRestitution(__pyx_v_restitution);

  /* "bullet/bullet.pyx":685
 * 
 * 
 *     def setRestitution(self, btScalar restitution):             # <<<<<<<<<<<<<<
 *         """
 *         Specify a scaling factor to be applied to the normal impulse computed
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":693
 * 
 * 
 *     def getRestitution(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the restitution value for this object.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_11getRestitution(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_10getRestitution[] = "\n        Get the restitution value for this object.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_11getRestitution(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getRestitution (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_15CollisionObject_10getRestitution(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_10getRestitution(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getRestitution", 0);

  /* "bullet/bullet.pyx":697
 *         Get the restitution value for this object.
 *         """
 *         return self.thisptr.getRestitution()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->thisptr->getRestitution()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 697, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":693
 * 
 * 
 *     def getRestitution(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the restitution value for this object.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.getRestitution", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":700
 * 
 * 
 *     def getCollisionShape(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the CollisionShape associated with this object.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_13getCollisionShape(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_12getCollisionShape[] = "\n        Get the CollisionShape associated with this object.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_13getCollisionShape(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getCollisionShape (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_15CollisionObject_12getCollisionShape(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_12getCollisionShape(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getCollisionShape", 0);

  /* "bullet/bullet.pyx":704
 *         Get the CollisionShape associated with this object.
 *         """
 *         return self._shape             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->_shape));
  __pyx_r = ((PyObject *)__pyx_v_self->_shape);
  goto __pyx_L0;

  /* "bullet/bullet.pyx":700
 * 
 * 
 *     def getCollisionShape(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the CollisionShape associated with this object.
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":707
 * 
 * 
 *     def setCollisionShape(self, CollisionShape collisionShape):             # <<<<<<<<<<<<<<
 *         """
 *         Replace this object's CollisionShape.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_15setCollisionShape(PyObject *__pyx_v_self, PyObject *__pyx_v_collisionShape); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_14setCollisionShape[] = "\n        Replace this object's CollisionShape.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_15setCollisionShape(PyObject *__pyx_v_self, PyObject *__pyx_v_collisionShape) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setCollisionShape (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_collisionShape), __pyx_ptype_6bullet_6bullet_CollisionShape, 1, "collisionShape", 0))) __PYX_ERR(1, 707, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_15CollisionObject_14setCollisionShape(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_CollisionShape *)__pyx_v_collisionShape));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_14setCollisionShape(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_CollisionShape *__pyx_v_collisionShape) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setCollisionShape", 0);

  /* "bullet/bullet.pyx":711
 *         Replace this object's CollisionShape.
 *         """
 *         self.thisptr.setCollisionShape(collisionShape.thisptr)             # <<<<<<<<<<<<<<
 *         self._shape = collisionShape
 * 
 */
  __pyx_v_self->thisptr->setCollisionShape(__pyx_v_collisionShape->thisptr);

  /* "bullet/bullet.pyx":712
 *         """
 *         self.thisptr.setCollisionShape(collisionShape.thisptr)
 *         self._shape = collisionShape             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_collisionShape));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_collisionShape));
  __Pyx_GOTREF(__pyx_v_self->_shape);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_shape));
  __pyx_v_self->_shape = __pyx_v_collisionShape;

  /* "bullet/bullet.pyx":707
 * 
 * 
 *     def setCollisionShape(self, CollisionShape collisionShape):             # <<<<<<<<<<<<<<
 *         """
 *         Replace this object's CollisionShape.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":715
 * 
 * 
 *     def getWorldTransform(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get a copy of the transformation for this CollisionObject as a Transform
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_17getWorldTransform(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_16getWorldTransform[] = "\n        Get a copy of the transformation for this CollisionObject as a Transform\n        instance.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_17getWorldTransform(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getWorldTransform (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_15CollisionObject_16getWorldTransform(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_16getWorldTransform(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self) {
  struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_transform = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getWorldTransform", 0);

  /* "bullet/bullet.pyx":720
 *         instance.
 *         """
 *         cdef Transform transform = Transform()             # <<<<<<<<<<<<<<
 *         # TODO This leaks memory, and then corrupts memory and crashes, I think.
 *         transform.thisptr[0] = self.thisptr.getWorldTransform()
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Transform), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 720, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_transform = ((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":722
 *         cdef Transform transform = Transform()
 *         # TODO This leaks memory, and then corrupts memory and crashes, I think.
 *         transform.thisptr[0] = self.thisptr.getWorldTransform()             # <<<<<<<<<<<<<<
 *         return transform
 * 
 */
  (__pyx_v_transform->thisptr[0]) = __pyx_v_self->thisptr->getWorldTransform();

  /* "bullet/bullet.pyx":723
 *         # TODO This leaks memory, and then corrupts memory and crashes, I think.
 *         transform.thisptr[0] = self.thisptr.getWorldTransform()
 *         return transform             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_transform));
  __pyx_r = ((PyObject *)__pyx_v_transform);
  goto __pyx_L0;

  /* "bullet/bullet.pyx":715
 * 
 * 
 *     def getWorldTransform(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get a copy of the transformation for this CollisionObject as a Transform
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.getWorldTransform", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_transform);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":726
 * 
 * 
 *     def setWorldTransform(self, Transform transform not None):             # <<<<<<<<<<<<<<
 *         """
 *         Replace the transformation for this CollisionObject.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_19setWorldTransform(PyObject *__pyx_v_self, PyObject *__pyx_v_transform); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_18setWorldTransform[] = "\n        Replace the transformation for this CollisionObject.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_19setWorldTransform(PyObject *__pyx_v_self, PyObject *__pyx_v_transform) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setWorldTransform (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_transform), __pyx_ptype_6bullet_6bullet_Transform, 0, "transform", 0))) __PYX_ERR(1, 726, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_15CollisionObject_18setWorldTransform(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_transform));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_18setWorldTransform(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_transform) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setWorldTransform", 0);

  /* "bullet/bullet.pyx":730
 *         Replace the transformation for this CollisionObject.
 *         """
 *         self.thisptr.setWorldTransform(transform.thisptr[0])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->setWorldTransform((__pyx_v_transform->thisptr[0]));

  /* "bullet/bullet.pyx":726
 * 
 * 
 *     def setWorldTransform(self, Transform transform not None):             # <<<<<<<<<<<<<<
 *         """
 *         Replace the transformation for this CollisionObject.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":733
 * 
 * 
 *     def getActivationState(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the current activation state of this object.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_21getActivationState(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_20getActivationState[] = "\n        Return the current activation state of this object.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_21getActivationState(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getActivationState (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_15CollisionObject_20getActivationState(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_20getActivationState(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getActivationState", 0);

  /* "bullet/bullet.pyx":737
 *         Return the current activation state of this object.
 *         """
 *         return self.thisptr.getActivationState()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->thisptr->getActivationState()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 737, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":733
 * 
 * 
 *     def getActivationState(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the current activation state of this object.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.getActivationState", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":740
 * 
 * 
 *     def setActivationState(self, int newState):             # <<<<<<<<<<<<<<
 *         """
 *         Change the activation state of this object.  newState must be one of:
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_23setActivationState(PyObject *__pyx_v_self, PyObject *__pyx_arg_newState); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_22setActivationState[] = "\n        Change the activation state of this object.  newState must be one of:\n\n          - ACTIVE_TAG\n          - ISLAND_SLEEPING\n          - WANTS_DEACTIVATION\n          - DISABLE_DEACTIVATION\n          - DISABLE_SIMULATION\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_23setActivationState(PyObject *__pyx_v_self, PyObject *__pyx_arg_newState) {
  int __pyx_v_newState;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setActivationState (wrapper)", 0);
  assert(__pyx_arg_newState); {
    __pyx_v_newState = __Pyx_PyInt_As_int(__pyx_arg_newState); if (unlikely((__pyx_v_newState == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 740, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.setActivationState", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6bullet_6bullet_15CollisionObject_22setActivationState(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self), ((int)__pyx_v_newState));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_22setActivationState(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self, int __pyx_v_newState) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setActivationState", 0);

  /* "bullet/bullet.pyx":750
 *           - DISABLE_SIMULATION
 *         """
 *         self.thisptr.setActivationState(newState)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->setActivationState(__pyx_v_newState);

  /* "bullet/bullet.pyx":740
 * 
 * 
 *     def setActivationState(self, int newState):             # <<<<<<<<<<<<<<
 *         """
 *         Change the activation state of this object.  newState must be one of:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":753
 * 
 * 
 *     def getBroadphaseHandle(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the BroadphaseProxy for this L{CollisionObject} or C{None} if
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_25getBroadphaseHandle(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_24getBroadphaseHandle[] = "\n        Return the BroadphaseProxy for this L{CollisionObject} or C{None} if\n        there isn't one.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_25getBroadphaseHandle(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getBroadphaseHandle (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_15CollisionObject_24getBroadphaseHandle(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_24getBroadphaseHandle(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self) {
  btBroadphaseProxy *__pyx_v_proxy;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("getBroadphaseHandle", 0);

  /* "bullet/bullet.pyx":759
 *         """
 *         cdef btBroadphaseProxy *proxy
 *         proxy = self.thisptr.getBroadphaseHandle()             # <<<<<<<<<<<<<<
 *         if NULL == proxy:
 *             return None
 */
  __pyx_v_proxy = __pyx_v_self->thisptr->getBroadphaseHandle();

  /* "bullet/bullet.pyx":760
 *         cdef btBroadphaseProxy *proxy
 *         proxy = self.thisptr.getBroadphaseHandle()
 *         if NULL == proxy:             # <<<<<<<<<<<<<<
 *             return None
 *         # XXX Cannot figure out how to just pass proxy to BroadphaseProxy
 */
  __pyx_t_1 = ((NULL == __pyx_v_proxy) != 0);
  if (__pyx_t_1) {

    /* "bullet/bullet.pyx":761
 *         proxy = self.thisptr.getBroadphaseHandle()
 *         if NULL == proxy:
 *             return None             # <<<<<<<<<<<<<<
 *         # XXX Cannot figure out how to just pass proxy to BroadphaseProxy
 *         return BroadphaseProxy(proxy.m_collisionFilterGroup, proxy.m_collisionFilterMask)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;

    /* "bullet/bullet.pyx":760
 *         cdef btBroadphaseProxy *proxy
 *         proxy = self.thisptr.getBroadphaseHandle()
 *         if NULL == proxy:             # <<<<<<<<<<<<<<
 *             return None
 *         # XXX Cannot figure out how to just pass proxy to BroadphaseProxy
 */
  }

  /* "bullet/bullet.pyx":763
 *             return None
 *         # XXX Cannot figure out how to just pass proxy to BroadphaseProxy
 *         return BroadphaseProxy(proxy.m_collisionFilterGroup, proxy.m_collisionFilterMask)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyInt_From_short(__pyx_v_proxy->m_collisionFilterGroup); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 763, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_short(__pyx_v_proxy->m_collisionFilterMask); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 763, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 763, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_BroadphaseProxy), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 763, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":753
 * 
 * 
 *     def getBroadphaseHandle(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the BroadphaseProxy for this L{CollisionObject} or C{None} if
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.getBroadphaseHandle", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":766
 * 
 * 
 *     def forceActivationState(self, int newState):             # <<<<<<<<<<<<<<
 *         self.thisptr.forceActivationState(newState)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_27forceActivationState(PyObject *__pyx_v_self, PyObject *__pyx_arg_newState); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_27forceActivationState(PyObject *__pyx_v_self, PyObject *__pyx_arg_newState) {
  int __pyx_v_newState;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("forceActivationState (wrapper)", 0);
  assert(__pyx_arg_newState); {
    __pyx_v_newState = __Pyx_PyInt_As_int(__pyx_arg_newState); if (unlikely((__pyx_v_newState == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 766, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.forceActivationState", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6bullet_6bullet_15CollisionObject_26forceActivationState(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self), ((int)__pyx_v_newState));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_26forceActivationState(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self, int __pyx_v_newState) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("forceActivationState", 0);

  /* "bullet/bullet.pyx":767
 * 
 *     def forceActivationState(self, int newState):
 *         self.thisptr.forceActivationState(newState)             # <<<<<<<<<<<<<<
 * 
 *     def activate(self, bool forceActivation=False):
 */
  __pyx_v_self->thisptr->forceActivationState(__pyx_v_newState);

  /* "bullet/bullet.pyx":766
 * 
 * 
 *     def forceActivationState(self, int newState):             # <<<<<<<<<<<<<<
 *         self.thisptr.forceActivationState(newState)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":769
 *         self.thisptr.forceActivationState(newState)
 * 
 *     def activate(self, bool forceActivation=False):             # <<<<<<<<<<<<<<
 *         self.thisptr.activate(forceActivation)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_29activate(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_29activate(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  bool __pyx_v_forceActivation;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("activate (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_forceActivation,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_forceActivation);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "activate") < 0)) __PYX_ERR(1, 769, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_forceActivation = __Pyx_PyInt_As_bool(values[0]); if (unlikely((__pyx_v_forceActivation == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(1, 769, __pyx_L3_error)
    } else {
      __pyx_v_forceActivation = ((bool)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("activate", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 769, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.activate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6bullet_6bullet_15CollisionObject_28activate(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self), __pyx_v_forceActivation);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_28activate(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self, bool __pyx_v_forceActivation) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("activate", 0);

  /* "bullet/bullet.pyx":770
 * 
 *     def activate(self, bool forceActivation=False):
 *         self.thisptr.activate(forceActivation)             # <<<<<<<<<<<<<<
 * 
 *     def getCollisionFlags(self):
 */
  __pyx_v_self->thisptr->activate(__pyx_v_forceActivation);

  /* "bullet/bullet.pyx":769
 *         self.thisptr.forceActivationState(newState)
 * 
 *     def activate(self, bool forceActivation=False):             # <<<<<<<<<<<<<<
 *         self.thisptr.activate(forceActivation)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":772
 *         self.thisptr.activate(forceActivation)
 * 
 *     def getCollisionFlags(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.getCollisionFlags()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_31getCollisionFlags(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_31getCollisionFlags(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getCollisionFlags (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_15CollisionObject_30getCollisionFlags(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_30getCollisionFlags(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getCollisionFlags", 0);

  /* "bullet/bullet.pyx":773
 * 
 *     def getCollisionFlags(self):
 *         return self.thisptr.getCollisionFlags()             # <<<<<<<<<<<<<<
 * 
 *     def setCollisionFlags(self, int flags):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->thisptr->getCollisionFlags()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 773, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":772
 *         self.thisptr.activate(forceActivation)
 * 
 *     def getCollisionFlags(self):             # <<<<<<<<<<<<<<
 *         return self.thisptr.getCollisionFlags()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.getCollisionFlags", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":775
 *         return self.thisptr.getCollisionFlags()
 * 
 *     def setCollisionFlags(self, int flags):             # <<<<<<<<<<<<<<
 *         self.thisptr.setCollisionFlags(flags)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_33setCollisionFlags(PyObject *__pyx_v_self, PyObject *__pyx_arg_flags); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_33setCollisionFlags(PyObject *__pyx_v_self, PyObject *__pyx_arg_flags) {
  int __pyx_v_flags;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setCollisionFlags (wrapper)", 0);
  assert(__pyx_arg_flags); {
    __pyx_v_flags = __Pyx_PyInt_As_int(__pyx_arg_flags); if (unlikely((__pyx_v_flags == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 775, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.setCollisionFlags", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6bullet_6bullet_15CollisionObject_32setCollisionFlags(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self), ((int)__pyx_v_flags));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_32setCollisionFlags(struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self, int __pyx_v_flags) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setCollisionFlags", 0);

  /* "bullet/bullet.pyx":776
 * 
 *     def setCollisionFlags(self, int flags):
 *         self.thisptr.setCollisionFlags(flags)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->setCollisionFlags(__pyx_v_flags);

  /* "bullet/bullet.pyx":775
 *         return self.thisptr.getCollisionFlags()
 * 
 *     def setCollisionFlags(self, int flags):             # <<<<<<<<<<<<<<
 *         self.thisptr.setCollisionFlags(flags)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_35__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_35__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_15CollisionObject_34__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_34__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__38, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_37__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_15CollisionObject_37__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_15CollisionObject_36__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_36__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__39, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":797
 *     cdef btMotionState *thisptr
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_6bullet_6bullet_11MotionState_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6bullet_6bullet_11MotionState_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6bullet_6bullet_11MotionState___dealloc__(((struct __pyx_obj_6bullet_6bullet_MotionState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6bullet_6bullet_11MotionState___dealloc__(struct __pyx_obj_6bullet_6bullet_MotionState *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "bullet/bullet.pyx":798
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete __pyx_v_self->thisptr;

  /* "bullet/bullet.pyx":797
 *     cdef btMotionState *thisptr
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "bullet/bullet.pyx":801
 * 
 * 
 *     def getWorldTransform(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get a copy of the transformation for this motion state as a Transform
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_11MotionState_3getWorldTransform(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_11MotionState_2getWorldTransform[] = "\n        Get a copy of the transformation for this motion state as a Transform\n        instance.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_11MotionState_3getWorldTransform(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getWorldTransform (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_11MotionState_2getWorldTransform(((struct __pyx_obj_6bullet_6bullet_MotionState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_11MotionState_2getWorldTransform(struct __pyx_obj_6bullet_6bullet_MotionState *__pyx_v_self) {
  struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_transform = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getWorldTransform", 0);

  /* "bullet/bullet.pyx":806
 *         instance.
 *         """
 *         transform = Transform()             # <<<<<<<<<<<<<<
 *         self.thisptr.getWorldTransform(transform.thisptr[0])
 *         return transform
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Transform), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 806, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_transform = ((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":807
 *         """
 *         transform = Transform()
 *         self.thisptr.getWorldTransform(transform.thisptr[0])             # <<<<<<<<<<<<<<
 *         return transform
 * 
 */
  __pyx_v_self->thisptr->getWorldTransform((__pyx_v_transform->thisptr[0]));

  /* "bullet/bullet.pyx":808
 *         transform = Transform()
 *         self.thisptr.getWorldTransform(transform.thisptr[0])
 *         return transform             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_transform));
  __pyx_r = ((PyObject *)__pyx_v_transform);
  goto __pyx_L0;

  /* "bullet/bullet.pyx":801
 * 
 * 
 *     def getWorldTransform(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get a copy of the transformation for this motion state as a Transform
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.MotionState.getWorldTransform", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_transform);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":811
 * 
 * 
 *     def setWorldTransform(self, Transform centerOfMassWorldTrans not None):             # <<<<<<<<<<<<<<
 *         """
 *         Set the transformation for this motion state.  This will probably have
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_11MotionState_5setWorldTransform(PyObject *__pyx_v_self, PyObject *__pyx_v_centerOfMassWorldTrans); /*proto*/
static char __pyx_doc_6bullet_6bullet_11MotionState_4setWorldTransform[] = "\n        Set the transformation for this motion state.  This will probably have\n        no meaningful effect on the state of the world containing the object\n        this MotionState is associated with.\n\n        XXX If this method is overridden in a subclass, the overridden method\n        will not be called by Bullet.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_11MotionState_5setWorldTransform(PyObject *__pyx_v_self, PyObject *__pyx_v_centerOfMassWorldTrans) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setWorldTransform (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_centerOfMassWorldTrans), __pyx_ptype_6bullet_6bullet_Transform, 0, "centerOfMassWorldTrans", 0))) __PYX_ERR(1, 811, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_11MotionState_4setWorldTransform(((struct __pyx_obj_6bullet_6bullet_MotionState *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_centerOfMassWorldTrans));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_11MotionState_4setWorldTransform(struct __pyx_obj_6bullet_6bullet_MotionState *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_centerOfMassWorldTrans) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setWorldTransform", 0);

  /* "bullet/bullet.pyx":820
 *         will not be called by Bullet.
 *         """
 *         self.thisptr.setWorldTransform(centerOfMassWorldTrans.thisptr[0])             # <<<<<<<<<<<<<<
 * 
 * # cdef cppclass coverrMotionState(btMotionState):
 */
  __pyx_v_self->thisptr->setWorldTransform((__pyx_v_centerOfMassWorldTrans->thisptr[0]));

  /* "bullet/bullet.pyx":811
 * 
 * 
 *     def setWorldTransform(self, Transform centerOfMassWorldTrans not None):             # <<<<<<<<<<<<<<
 *         """
 *         Set the transformation for this motion state.  This will probably have
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_11MotionState_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_11MotionState_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_11MotionState_6__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_MotionState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_11MotionState_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_MotionState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__40, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.MotionState.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_11MotionState_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_11MotionState_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_11MotionState_8__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_MotionState *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_11MotionState_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_MotionState *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__41, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.MotionState.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":846
 * cdef class overridableMotionState(MotionState): # todo: turn into abstract
 *     cdef Transform _nTrans
 *     def __cinit__(self, Transform initialTransformation):             # <<<<<<<<<<<<<<
 *         self._nTrans = Transform()
 *         # self.thisptr = new coverrMotionState(trans, <PyObject *>self)
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_22overridableMotionState_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_22overridableMotionState_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_initialTransformation = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_initialTransformation,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_initialTransformation)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(1, 846, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_initialTransformation = ((struct __pyx_obj_6bullet_6bullet_Transform *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 846, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.overridableMotionState.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_initialTransformation), __pyx_ptype_6bullet_6bullet_Transform, 1, "initialTransformation", 0))) __PYX_ERR(1, 846, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_22overridableMotionState___cinit__(((struct __pyx_obj_6bullet_6bullet_overridableMotionState *)__pyx_v_self), __pyx_v_initialTransformation);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_22overridableMotionState___cinit__(struct __pyx_obj_6bullet_6bullet_overridableMotionState *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_initialTransformation) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bullet/bullet.pyx":847
 *     cdef Transform _nTrans
 *     def __cinit__(self, Transform initialTransformation):
 *         self._nTrans = Transform()             # <<<<<<<<<<<<<<
 *         # self.thisptr = new coverrMotionState(trans, <PyObject *>self)
 *         self.thisptr = new MyMotionState(initialTransformation.thisptr[0])
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Transform), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_nTrans);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_nTrans));
  __pyx_v_self->_nTrans = ((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":849
 *         self._nTrans = Transform()
 *         # self.thisptr = new coverrMotionState(trans, <PyObject *>self)
 *         self.thisptr = new MyMotionState(initialTransformation.thisptr[0])             # <<<<<<<<<<<<<<
 *         (<MyMotionState*>self.thisptr).setPyCallback(self._stwL)
 * 
 */
  __pyx_v_self->__pyx_base.thisptr = new MyMotionState((__pyx_v_initialTransformation->thisptr[0]));

  /* "bullet/bullet.pyx":850
 *         # self.thisptr = new coverrMotionState(trans, <PyObject *>self)
 *         self.thisptr = new MyMotionState(initialTransformation.thisptr[0])
 *         (<MyMotionState*>self.thisptr).setPyCallback(self._stwL)             # <<<<<<<<<<<<<<
 * 
 *     property worldTrans:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_stwL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 850, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  ((MyMotionState *)__pyx_v_self->__pyx_base.thisptr)->setPyCallback(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":846
 * cdef class overridableMotionState(MotionState): # todo: turn into abstract
 *     cdef Transform _nTrans
 *     def __cinit__(self, Transform initialTransformation):             # <<<<<<<<<<<<<<
 *         self._nTrans = Transform()
 *         # self.thisptr = new coverrMotionState(trans, <PyObject *>self)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.overridableMotionState.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":854
 *     property worldTrans:
 *         "Set this to change body's transformation."
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._nTrans
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_22overridableMotionState_10worldTrans_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_22overridableMotionState_10worldTrans_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_22overridableMotionState_10worldTrans___get__(((struct __pyx_obj_6bullet_6bullet_overridableMotionState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_22overridableMotionState_10worldTrans___get__(struct __pyx_obj_6bullet_6bullet_overridableMotionState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "bullet/bullet.pyx":855
 *         "Set this to change body's transformation."
 *         def __get__(self):
 *             return self._nTrans             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, Transform value):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->_nTrans));
  __pyx_r = ((PyObject *)__pyx_v_self->_nTrans);
  goto __pyx_L0;

  /* "bullet/bullet.pyx":854
 *     property worldTrans:
 *         "Set this to change body's transformation."
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._nTrans
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":857
 *             return self._nTrans
 * 
 *         def __set__(self, Transform value):             # <<<<<<<<<<<<<<
 *             self._nTrans = value
 *             (<MyMotionState*>self.thisptr).setKinematicPos(value.thisptr[0])
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_22overridableMotionState_10worldTrans_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_6bullet_6bullet_22overridableMotionState_10worldTrans_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_value), __pyx_ptype_6bullet_6bullet_Transform, 1, "value", 0))) __PYX_ERR(1, 857, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_22overridableMotionState_10worldTrans_2__set__(((struct __pyx_obj_6bullet_6bullet_overridableMotionState *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_value));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_22overridableMotionState_10worldTrans_2__set__(struct __pyx_obj_6bullet_6bullet_overridableMotionState *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "bullet/bullet.pyx":858
 * 
 *         def __set__(self, Transform value):
 *             self._nTrans = value             # <<<<<<<<<<<<<<
 *             (<MyMotionState*>self.thisptr).setKinematicPos(value.thisptr[0])
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_value));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_value));
  __Pyx_GOTREF(__pyx_v_self->_nTrans);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->_nTrans));
  __pyx_v_self->_nTrans = __pyx_v_value;

  /* "bullet/bullet.pyx":859
 *         def __set__(self, Transform value):
 *             self._nTrans = value
 *             (<MyMotionState*>self.thisptr).setKinematicPos(value.thisptr[0])             # <<<<<<<<<<<<<<
 * 
 *     def setWorldTransform(self, Transform transform):
 */
  ((MyMotionState *)__pyx_v_self->__pyx_base.thisptr)->setKinematicPos((__pyx_v_value->thisptr[0]));

  /* "bullet/bullet.pyx":857
 *             return self._nTrans
 * 
 *         def __set__(self, Transform value):             # <<<<<<<<<<<<<<
 *             self._nTrans = value
 *             (<MyMotionState*>self.thisptr).setKinematicPos(value.thisptr[0])
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":861
 *             (<MyMotionState*>self.thisptr).setKinematicPos(value.thisptr[0])
 * 
 *     def setWorldTransform(self, Transform transform):             # <<<<<<<<<<<<<<
 *         pass
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_22overridableMotionState_3setWorldTransform(PyObject *__pyx_v_self, PyObject *__pyx_v_transform); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_22overridableMotionState_3setWorldTransform(PyObject *__pyx_v_self, PyObject *__pyx_v_transform) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setWorldTransform (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_transform), __pyx_ptype_6bullet_6bullet_Transform, 1, "transform", 0))) __PYX_ERR(1, 861, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_22overridableMotionState_2setWorldTransform(((struct __pyx_obj_6bullet_6bullet_overridableMotionState *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_transform));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_22overridableMotionState_2setWorldTransform(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_overridableMotionState *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_transform) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setWorldTransform", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":864
 *         pass
 * 
 *     def _stwL(self):             # <<<<<<<<<<<<<<
 *         cdef btTransform* cTrans = &(<MyMotionState*>self.thisptr).mworldTrans
 *         cdef btVector3 pos = cTrans.getOrigin()
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_22overridableMotionState_5_stwL(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_22overridableMotionState_5_stwL(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_stwL (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_22overridableMotionState_4_stwL(((struct __pyx_obj_6bullet_6bullet_overridableMotionState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_22overridableMotionState_4_stwL(struct __pyx_obj_6bullet_6bullet_overridableMotionState *__pyx_v_self) {
  btTransform *__pyx_v_cTrans;
  btVector3 __pyx_v_pos;
  btQuaternion __pyx_v_rot;
  CYTHON_UNUSED PyObject *__pyx_v_ex = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  __Pyx_RefNannySetupContext("_stwL", 0);

  /* "bullet/bullet.pyx":865
 * 
 *     def _stwL(self):
 *         cdef btTransform* cTrans = &(<MyMotionState*>self.thisptr).mworldTrans             # <<<<<<<<<<<<<<
 *         cdef btVector3 pos = cTrans.getOrigin()
 *         cdef btQuaternion rot = cTrans.getRotation()
 */
  __pyx_v_cTrans = (&((MyMotionState *)__pyx_v_self->__pyx_base.thisptr)->mworldTrans);

  /* "bullet/bullet.pyx":866
 *     def _stwL(self):
 *         cdef btTransform* cTrans = &(<MyMotionState*>self.thisptr).mworldTrans
 *         cdef btVector3 pos = cTrans.getOrigin()             # <<<<<<<<<<<<<<
 *         cdef btQuaternion rot = cTrans.getRotation()
 *         try:
 */
  __pyx_v_pos = __pyx_v_cTrans->getOrigin();

  /* "bullet/bullet.pyx":867
 *         cdef btTransform* cTrans = &(<MyMotionState*>self.thisptr).mworldTrans
 *         cdef btVector3 pos = cTrans.getOrigin()
 *         cdef btQuaternion rot = cTrans.getRotation()             # <<<<<<<<<<<<<<
 *         try:
 *             self._nTrans.setOrigin(Vector3.frombtVector3(pos))
 */
  __pyx_v_rot = __pyx_v_cTrans->getRotation();

  /* "bullet/bullet.pyx":868
 *         cdef btVector3 pos = cTrans.getOrigin()
 *         cdef btQuaternion rot = cTrans.getRotation()
 *         try:             # <<<<<<<<<<<<<<
 *             self._nTrans.setOrigin(Vector3.frombtVector3(pos))
 *             self._nTrans.setRotation(Quaternion.frombtQuat(rot))
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "bullet/bullet.pyx":869
 *         cdef btQuaternion rot = cTrans.getRotation()
 *         try:
 *             self._nTrans.setOrigin(Vector3.frombtVector3(pos))             # <<<<<<<<<<<<<<
 *             self._nTrans.setRotation(Quaternion.frombtQuat(rot))
 *             self.setWorldTransform(self._nTrans)
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_nTrans), __pyx_n_s_setOrigin); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 869, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __pyx_f_6bullet_6bullet_7Vector3_frombtVector3(__pyx_v_pos); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 869, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      if (!__pyx_t_7) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 869, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 869, __pyx_L3_error)
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[2] = {__pyx_t_7, __pyx_t_6};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 869, __pyx_L3_error)
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        } else
        #endif
        {
          __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 869, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
          __Pyx_GIVEREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_8, 0+1, __pyx_t_6);
          __pyx_t_6 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 869, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "bullet/bullet.pyx":870
 *         try:
 *             self._nTrans.setOrigin(Vector3.frombtVector3(pos))
 *             self._nTrans.setRotation(Quaternion.frombtQuat(rot))             # <<<<<<<<<<<<<<
 *             self.setWorldTransform(self._nTrans)
 *         except Exception as ex:
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->_nTrans), __pyx_n_s_setRotation); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 870, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_8 = __pyx_f_6bullet_6bullet_10Quaternion_frombtQuat(__pyx_v_rot); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 870, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_6 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      if (!__pyx_t_6) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 870, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[2] = {__pyx_t_6, __pyx_t_8};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 870, __pyx_L3_error)
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[2] = {__pyx_t_6, __pyx_t_8};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 870, __pyx_L3_error)
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        } else
        #endif
        {
          __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 870, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
          __Pyx_GIVEREF(__pyx_t_8);
          PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_8);
          __pyx_t_8 = 0;
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 870, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "bullet/bullet.pyx":871
 *             self._nTrans.setOrigin(Vector3.frombtVector3(pos))
 *             self._nTrans.setRotation(Quaternion.frombtQuat(rot))
 *             self.setWorldTransform(self._nTrans)             # <<<<<<<<<<<<<<
 *         except Exception as ex:
 *             raise
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setWorldTransform); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 871, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_7 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      if (!__pyx_t_7) {
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_t_5, ((PyObject *)__pyx_v_self->_nTrans)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 871, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
      } else {
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[2] = {__pyx_t_7, ((PyObject *)__pyx_v_self->_nTrans)};
          __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 871, __pyx_L3_error)
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_GOTREF(__pyx_t_4);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[2] = {__pyx_t_7, ((PyObject *)__pyx_v_self->_nTrans)};
          __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 871, __pyx_L3_error)
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_GOTREF(__pyx_t_4);
        } else
        #endif
        {
          __pyx_t_8 = PyTuple_New(1+1); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 871, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
          __Pyx_INCREF(((PyObject *)__pyx_v_self->_nTrans));
          __Pyx_GIVEREF(((PyObject *)__pyx_v_self->_nTrans));
          PyTuple_SET_ITEM(__pyx_t_8, 0+1, ((PyObject *)__pyx_v_self->_nTrans));
          __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 871, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "bullet/bullet.pyx":868
 *         cdef btVector3 pos = cTrans.getOrigin()
 *         cdef btQuaternion rot = cTrans.getRotation()
 *         try:             # <<<<<<<<<<<<<<
 *             self._nTrans.setOrigin(Vector3.frombtVector3(pos))
 *             self._nTrans.setRotation(Quaternion.frombtQuat(rot))
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "bullet/bullet.pyx":872
 *             self._nTrans.setRotation(Quaternion.frombtQuat(rot))
 *             self.setWorldTransform(self._nTrans)
 *         except Exception as ex:             # <<<<<<<<<<<<<<
 *             raise
 * 
 */
    __pyx_t_9 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_9) {
      __Pyx_AddTraceback("bullet.bullet.overridableMotionState._stwL", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_5, &__pyx_t_8) < 0) __PYX_ERR(1, 872, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_5);
      __pyx_v_ex = __pyx_t_5;

      /* "bullet/bullet.pyx":873
 *             self.setWorldTransform(self._nTrans)
 *         except Exception as ex:
 *             raise             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
      __Pyx_GIVEREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_5);
      __Pyx_XGIVEREF(__pyx_t_8);
      __Pyx_ErrRestoreWithState(__pyx_t_4, __pyx_t_5, __pyx_t_8);
      __pyx_t_4 = 0; __pyx_t_5 = 0; __pyx_t_8 = 0; 
      __PYX_ERR(1, 873, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "bullet/bullet.pyx":868
 *         cdef btVector3 pos = cTrans.getOrigin()
 *         cdef btQuaternion rot = cTrans.getRotation()
 *         try:             # <<<<<<<<<<<<<<
 *             self._nTrans.setOrigin(Vector3.frombtVector3(pos))
 *             self._nTrans.setRotation(Quaternion.frombtQuat(rot))
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "bullet/bullet.pyx":864
 *         pass
 * 
 *     def _stwL(self):             # <<<<<<<<<<<<<<
 *         cdef btTransform* cTrans = &(<MyMotionState*>self.thisptr).mworldTrans
 *         cdef btVector3 pos = cTrans.getOrigin()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("bullet.bullet.overridableMotionState._stwL", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ex);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":875
 *             raise
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         print('dealloc')
 *         del self.thisptr
 */

/* Python wrapper */
static void __pyx_pw_6bullet_6bullet_22overridableMotionState_7__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6bullet_6bullet_22overridableMotionState_7__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6bullet_6bullet_22overridableMotionState_6__dealloc__(((struct __pyx_obj_6bullet_6bullet_overridableMotionState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6bullet_6bullet_22overridableMotionState_6__dealloc__(struct __pyx_obj_6bullet_6bullet_overridableMotionState *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "bullet/bullet.pyx":876
 * 
 *     def __dealloc__(self):
 *         print('dealloc')             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */
  if (__Pyx_PrintOne(0, __pyx_n_s_dealloc) < 0) __PYX_ERR(1, 876, __pyx_L1_error)

  /* "bullet/bullet.pyx":877
 *     def __dealloc__(self):
 *         print('dealloc')
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete __pyx_v_self->__pyx_base.thisptr;

  /* "bullet/bullet.pyx":875
 *             raise
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         print('dealloc')
 *         del self.thisptr
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("bullet.bullet.overridableMotionState.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_22overridableMotionState_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_22overridableMotionState_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_22overridableMotionState_8__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_overridableMotionState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_22overridableMotionState_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_overridableMotionState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__42, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.overridableMotionState.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_22overridableMotionState_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_22overridableMotionState_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_22overridableMotionState_10__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_overridableMotionState *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_22overridableMotionState_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_overridableMotionState *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__43, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.overridableMotionState.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":891
 *     wrapping doesn't really make sense and will probably be changed.
 *     """
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btDefaultMotionState()
 * 
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_18DefaultMotionState_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_18DefaultMotionState_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6bullet_6bullet_18DefaultMotionState___cinit__(((struct __pyx_obj_6bullet_6bullet_DefaultMotionState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_18DefaultMotionState___cinit__(struct __pyx_obj_6bullet_6bullet_DefaultMotionState *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bullet/bullet.pyx":892
 *     """
 *     def __cinit__(self):
 *         self.thisptr = new btDefaultMotionState()             # <<<<<<<<<<<<<<
 * 
 *     # def setWorldTransform(self, Transform centerOfMassWorldTrans not None):
 */
  __pyx_v_self->__pyx_base.thisptr = new btDefaultMotionState();

  /* "bullet/bullet.pyx":891
 *     wrapping doesn't really make sense and will probably be changed.
 *     """
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btDefaultMotionState()
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_18DefaultMotionState_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_18DefaultMotionState_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_18DefaultMotionState_2__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_DefaultMotionState *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_18DefaultMotionState_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_DefaultMotionState *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__44, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.DefaultMotionState.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_18DefaultMotionState_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_18DefaultMotionState_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_18DefaultMotionState_4__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_DefaultMotionState *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_18DefaultMotionState_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_DefaultMotionState *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__45, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.DefaultMotionState.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":921
 *     cdef CollisionShape shape
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  MotionState motion = None,
 *                  CollisionShape shape = None,
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_9RigidBody_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_9RigidBody_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_MotionState *__pyx_v_motion = 0;
  struct __pyx_obj_6bullet_6bullet_CollisionShape *__pyx_v_shape = 0;
  btScalar __pyx_v_mass;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_motion,&__pyx_n_s_shape,&__pyx_n_s_mass,0};
    PyObject* values[3] = {0,0,0};

    /* "bullet/bullet.pyx":922
 * 
 *     def __init__(self,
 *                  MotionState motion = None,             # <<<<<<<<<<<<<<
 *                  CollisionShape shape = None,
 *                  btScalar mass = 0.0):
 */
    values[0] = (PyObject *)((struct __pyx_obj_6bullet_6bullet_MotionState *)Py_None);

    /* "bullet/bullet.pyx":923
 *     def __init__(self,
 *                  MotionState motion = None,
 *                  CollisionShape shape = None,             # <<<<<<<<<<<<<<
 *                  btScalar mass = 0.0):
 *         if motion is None:
 */
    values[1] = (PyObject *)((struct __pyx_obj_6bullet_6bullet_CollisionShape *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_motion);
          if (value) { values[0] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_shape);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_mass);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(1, 921, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_motion = ((struct __pyx_obj_6bullet_6bullet_MotionState *)values[0]);
    __pyx_v_shape = ((struct __pyx_obj_6bullet_6bullet_CollisionShape *)values[1]);
    if (values[2]) {
      __pyx_v_mass = __pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_mass == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 924, __pyx_L3_error)
    } else {
      __pyx_v_mass = ((btScalar)0.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 921, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.RigidBody.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_motion), __pyx_ptype_6bullet_6bullet_MotionState, 1, "motion", 0))) __PYX_ERR(1, 922, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_shape), __pyx_ptype_6bullet_6bullet_CollisionShape, 1, "shape", 0))) __PYX_ERR(1, 923, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody___init__(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self), __pyx_v_motion, __pyx_v_shape, __pyx_v_mass);

  /* "bullet/bullet.pyx":921
 *     cdef CollisionShape shape
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  MotionState motion = None,
 *                  CollisionShape shape = None,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_9RigidBody___init__(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_MotionState *__pyx_v_motion, struct __pyx_obj_6bullet_6bullet_CollisionShape *__pyx_v_shape, btScalar __pyx_v_mass) {
  btVector3 __pyx_v_inertia;
  btRigidBody::btRigidBodyConstructionInfo *__pyx_v_info;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_motion);
  __Pyx_INCREF((PyObject *)__pyx_v_shape);

  /* "bullet/bullet.pyx":925
 *                  CollisionShape shape = None,
 *                  btScalar mass = 0.0):
 *         if motion is None:             # <<<<<<<<<<<<<<
 *             motion = DefaultMotionState()
 *         if shape is None:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_motion) == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "bullet/bullet.pyx":926
 *                  btScalar mass = 0.0):
 *         if motion is None:
 *             motion = DefaultMotionState()             # <<<<<<<<<<<<<<
 *         if shape is None:
 *             shape = BoxShape(Vector3(0.5, 0.5, 0.5))
 */
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_DefaultMotionState), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 926, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_motion, ((struct __pyx_obj_6bullet_6bullet_MotionState *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "bullet/bullet.pyx":925
 *                  CollisionShape shape = None,
 *                  btScalar mass = 0.0):
 *         if motion is None:             # <<<<<<<<<<<<<<
 *             motion = DefaultMotionState()
 *         if shape is None:
 */
  }

  /* "bullet/bullet.pyx":927
 *         if motion is None:
 *             motion = DefaultMotionState()
 *         if shape is None:             # <<<<<<<<<<<<<<
 *             shape = BoxShape(Vector3(0.5, 0.5, 0.5))
 * 
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_shape) == Py_None);
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "bullet/bullet.pyx":928
 *             motion = DefaultMotionState()
 *         if shape is None:
 *             shape = BoxShape(Vector3(0.5, 0.5, 0.5))             # <<<<<<<<<<<<<<
 * 
 *         self.motion = motion
 */
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Vector3), __pyx_tuple__46, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 928, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 928, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_BoxShape), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 928, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_shape, ((struct __pyx_obj_6bullet_6bullet_CollisionShape *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "bullet/bullet.pyx":927
 *         if motion is None:
 *             motion = DefaultMotionState()
 *         if shape is None:             # <<<<<<<<<<<<<<
 *             shape = BoxShape(Vector3(0.5, 0.5, 0.5))
 * 
 */
  }

  /* "bullet/bullet.pyx":930
 *             shape = BoxShape(Vector3(0.5, 0.5, 0.5))
 * 
 *         self.motion = motion             # <<<<<<<<<<<<<<
 *         self._shape = shape
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_motion));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_motion));
  __Pyx_GOTREF(__pyx_v_self->motion);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->motion));
  __pyx_v_self->motion = __pyx_v_motion;

  /* "bullet/bullet.pyx":931
 * 
 *         self.motion = motion
 *         self._shape = shape             # <<<<<<<<<<<<<<
 * 
 *         cdef btVector3 inertia = btVector3(0, 0, 0)
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_shape));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_shape));
  __Pyx_GOTREF(__pyx_v_self->__pyx_base._shape);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->__pyx_base._shape));
  __pyx_v_self->__pyx_base._shape = __pyx_v_shape;

  /* "bullet/bullet.pyx":933
 *         self._shape = shape
 * 
 *         cdef btVector3 inertia = btVector3(0, 0, 0)             # <<<<<<<<<<<<<<
 *         # TODO This is a weak heuristic to avoid using calculateLocalInertia on
 *         # a shape that does not support it (and will probably SIGABRT the
 */
  __pyx_v_inertia = btVector3(0.0, 0.0, 0.0);

  /* "bullet/bullet.pyx":939
 *         # explicitly list the shapes which cannot have their local inertia
 *         # calculated.
 *         if mass != 0.0:             # <<<<<<<<<<<<<<
 *             shape.thisptr.calculateLocalInertia(mass, inertia)
 * 
 */
  __pyx_t_1 = ((__pyx_v_mass != 0.0) != 0);
  if (__pyx_t_1) {

    /* "bullet/bullet.pyx":940
 *         # calculated.
 *         if mass != 0.0:
 *             shape.thisptr.calculateLocalInertia(mass, inertia)             # <<<<<<<<<<<<<<
 * 
 *         cdef btRigidBodyConstructionInfo* info
 */
    __pyx_v_shape->thisptr->calculateLocalInertia(__pyx_v_mass, __pyx_v_inertia);

    /* "bullet/bullet.pyx":939
 *         # explicitly list the shapes which cannot have their local inertia
 *         # calculated.
 *         if mass != 0.0:             # <<<<<<<<<<<<<<
 *             shape.thisptr.calculateLocalInertia(mass, inertia)
 * 
 */
  }

  /* "bullet/bullet.pyx":943
 * 
 *         cdef btRigidBodyConstructionInfo* info
 *         info = new btRigidBodyConstructionInfo(             # <<<<<<<<<<<<<<
 *             mass, self.motion.thisptr, self._shape.thisptr, inertia)
 *         self.thisptr = new btRigidBody(info[0])
 */
  __pyx_v_info = new btRigidBody::btRigidBodyConstructionInfo(__pyx_v_mass, __pyx_v_self->motion->thisptr, __pyx_v_self->__pyx_base._shape->thisptr, __pyx_v_inertia);

  /* "bullet/bullet.pyx":945
 *         info = new btRigidBodyConstructionInfo(
 *             mass, self.motion.thisptr, self._shape.thisptr, inertia)
 *         self.thisptr = new btRigidBody(info[0])             # <<<<<<<<<<<<<<
 *         del info
 * 
 */
  __pyx_v_self->__pyx_base.thisptr = new btRigidBody((__pyx_v_info[0]));

  /* "bullet/bullet.pyx":946
 *             mass, self.motion.thisptr, self._shape.thisptr, inertia)
 *         self.thisptr = new btRigidBody(info[0])
 *         del info             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete __pyx_v_info;

  /* "bullet/bullet.pyx":921
 *     cdef CollisionShape shape
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  MotionState motion = None,
 *                  CollisionShape shape = None,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_motion);
  __Pyx_XDECREF((PyObject *)__pyx_v_shape);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":950
 * 
 *     @classmethod
 *     def fromConstructionInfo(cls, MotionState motion,             # <<<<<<<<<<<<<<
 *                              CollisionShape shape, btScalar mass,
 *                              Vector3 inertia, Transform worldTransform,
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_3fromConstructionInfo(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_2fromConstructionInfo[] = "\n        Create a new L{RigidBody} instance, specifying all of its parameters.\n\n        @param motion: A L{MotionState} instance which specifies the body's\n            initial world transform and which will receive motion updates for\n            the body.  If specified, worldTransform is ignored.\n\n        @param shape: A L{CollisionShape} instance which specifies the body's\n            shape for collision detection.\n\n        @param mass: The body's mass.  Setting this to C{0} creates a fixed\n            (static; non-dynamic; stationary) body.\n\n        @param worldTransform: A L{Transform} which specifies the body's initial\n            position and orientation in the world.  Only used if C{motion} is\n            not given.\n\n        @param linearDamping: A value between 0 and 1 which is used to dampen\n            linear velocity.  Higher values dampen more.\n\n        @param angularDamping: A value between 0 and 1 which is used to dampen\n            angular velocity.  Higher values dampen more.\n\n        @param friction: The friction value this body constributes to friction\n            calculates.\n\n        @param restitution: The coefficient of restitution for this body, giving\n            the ratio of speed after and before a collision with another object.\n\n        @param linearSleepingThreshold: See L{getLinearSleepingThreshold}.\n\n        @param angularSleepingThreshold: See L{getAngularSleepingThreshold}.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_3fromConstructionInfo(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_MotionState *__pyx_v_motion = 0;
  struct __pyx_obj_6bullet_6bullet_CollisionShape *__pyx_v_shape = 0;
  btScalar __pyx_v_mass;
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_inertia = 0;
  struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_worldTransform = 0;
  btScalar __pyx_v_linearDamping;
  btScalar __pyx_v_angularDamping;
  btScalar __pyx_v_friction;
  btScalar __pyx_v_restitution;
  btScalar __pyx_v_linearSleepingThreshold;
  btScalar __pyx_v_angularSleepingThreshold;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromConstructionInfo (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_motion,&__pyx_n_s_shape,&__pyx_n_s_mass,&__pyx_n_s_inertia,&__pyx_n_s_worldTransform,&__pyx_n_s_linearDamping,&__pyx_n_s_angularDamping,&__pyx_n_s_friction,&__pyx_n_s_restitution,&__pyx_n_s_linearSleepingThreshold,&__pyx_n_s_angularSleepingThreshold,0};
    PyObject* values[11] = {0,0,0,0,0,0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_motion)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_shape)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, 1); __PYX_ERR(1, 950, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_mass)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, 2); __PYX_ERR(1, 950, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_inertia)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, 3); __PYX_ERR(1, 950, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_worldTransform)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, 4); __PYX_ERR(1, 950, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_linearDamping)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, 5); __PYX_ERR(1, 950, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (likely((values[6] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_angularDamping)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, 6); __PYX_ERR(1, 950, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (likely((values[7] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_friction)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, 7); __PYX_ERR(1, 950, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (likely((values[8] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_restitution)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, 8); __PYX_ERR(1, 950, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (likely((values[9] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_linearSleepingThreshold)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, 9); __PYX_ERR(1, 950, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (likely((values[10] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_angularSleepingThreshold)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, 10); __PYX_ERR(1, 950, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "fromConstructionInfo") < 0)) __PYX_ERR(1, 950, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 11) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
    }
    __pyx_v_motion = ((struct __pyx_obj_6bullet_6bullet_MotionState *)values[0]);
    __pyx_v_shape = ((struct __pyx_obj_6bullet_6bullet_CollisionShape *)values[1]);
    __pyx_v_mass = __pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_mass == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 951, __pyx_L3_error)
    __pyx_v_inertia = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[3]);
    __pyx_v_worldTransform = ((struct __pyx_obj_6bullet_6bullet_Transform *)values[4]);
    __pyx_v_linearDamping = __pyx_PyFloat_AsFloat(values[5]); if (unlikely((__pyx_v_linearDamping == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 953, __pyx_L3_error)
    __pyx_v_angularDamping = __pyx_PyFloat_AsFloat(values[6]); if (unlikely((__pyx_v_angularDamping == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 953, __pyx_L3_error)
    __pyx_v_friction = __pyx_PyFloat_AsFloat(values[7]); if (unlikely((__pyx_v_friction == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 954, __pyx_L3_error)
    __pyx_v_restitution = __pyx_PyFloat_AsFloat(values[8]); if (unlikely((__pyx_v_restitution == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 954, __pyx_L3_error)
    __pyx_v_linearSleepingThreshold = __pyx_PyFloat_AsFloat(values[9]); if (unlikely((__pyx_v_linearSleepingThreshold == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 955, __pyx_L3_error)
    __pyx_v_angularSleepingThreshold = __pyx_PyFloat_AsFloat(values[10]); if (unlikely((__pyx_v_angularSleepingThreshold == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 956, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 950, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.RigidBody.fromConstructionInfo", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_motion), __pyx_ptype_6bullet_6bullet_MotionState, 1, "motion", 0))) __PYX_ERR(1, 950, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_shape), __pyx_ptype_6bullet_6bullet_CollisionShape, 1, "shape", 0))) __PYX_ERR(1, 951, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_inertia), __pyx_ptype_6bullet_6bullet_Vector3, 1, "inertia", 0))) __PYX_ERR(1, 952, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_worldTransform), __pyx_ptype_6bullet_6bullet_Transform, 1, "worldTransform", 0))) __PYX_ERR(1, 952, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_2fromConstructionInfo(((PyTypeObject*)__pyx_v_cls), __pyx_v_motion, __pyx_v_shape, __pyx_v_mass, __pyx_v_inertia, __pyx_v_worldTransform, __pyx_v_linearDamping, __pyx_v_angularDamping, __pyx_v_friction, __pyx_v_restitution, __pyx_v_linearSleepingThreshold, __pyx_v_angularSleepingThreshold);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_2fromConstructionInfo(PyTypeObject *__pyx_v_cls, struct __pyx_obj_6bullet_6bullet_MotionState *__pyx_v_motion, struct __pyx_obj_6bullet_6bullet_CollisionShape *__pyx_v_shape, btScalar __pyx_v_mass, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_inertia, struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_worldTransform, btScalar __pyx_v_linearDamping, btScalar __pyx_v_angularDamping, btScalar __pyx_v_friction, btScalar __pyx_v_restitution, btScalar __pyx_v_linearSleepingThreshold, btScalar __pyx_v_angularSleepingThreshold) {
  struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_body = 0;
  btRigidBody::btRigidBodyConstructionInfo *__pyx_v_info;
  btMotionState *__pyx_v_motionState;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  btMotionState *__pyx_t_4;
  __Pyx_RefNannySetupContext("fromConstructionInfo", 0);

  /* "bullet/bullet.pyx":990
 *         @param angularSleepingThreshold: See L{getAngularSleepingThreshold}.
 *         """
 *         cdef RigidBody body = cls.__new__(cls)             # <<<<<<<<<<<<<<
 *         cdef btRigidBodyConstructionInfo *info
 *         cdef btMotionState *motionState
 */
  if (unlikely(((PyObject *)__pyx_v_cls) == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object.__new__(X): X is not a type object (NoneType)");
    __PYX_ERR(1, 990, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_tp_new(((PyObject *)__pyx_v_cls), __pyx_empty_tuple); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 990, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_6bullet_6bullet_RigidBody)))) __PYX_ERR(1, 990, __pyx_L1_error)
  __pyx_v_body = ((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":994
 *         cdef btMotionState *motionState
 * 
 *         if motion is not None:             # <<<<<<<<<<<<<<
 *             motionState = motion.thisptr
 *         else:
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_motion) != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "bullet/bullet.pyx":995
 * 
 *         if motion is not None:
 *             motionState = motion.thisptr             # <<<<<<<<<<<<<<
 *         else:
 *             motionState = <btMotionState*>0
 */
    __pyx_t_4 = __pyx_v_motion->thisptr;
    __pyx_v_motionState = __pyx_t_4;

    /* "bullet/bullet.pyx":994
 *         cdef btMotionState *motionState
 * 
 *         if motion is not None:             # <<<<<<<<<<<<<<
 *             motionState = motion.thisptr
 *         else:
 */
    goto __pyx_L3;
  }

  /* "bullet/bullet.pyx":997
 *             motionState = motion.thisptr
 *         else:
 *             motionState = <btMotionState*>0             # <<<<<<<<<<<<<<
 * 
 *         info = new btRigidBodyConstructionInfo(
 */
  /*else*/ {
    __pyx_v_motionState = ((btMotionState *)0);
  }
  __pyx_L3:;

  /* "bullet/bullet.pyx":999
 *             motionState = <btMotionState*>0
 * 
 *         info = new btRigidBodyConstructionInfo(             # <<<<<<<<<<<<<<
 *             mass, motionState, shape.thisptr,
 *             btVector3(inertia.x, inertia.y, inertia.z))
 */
  __pyx_v_info = new btRigidBody::btRigidBodyConstructionInfo(__pyx_v_mass, __pyx_v_motionState, __pyx_v_shape->thisptr, btVector3(__pyx_v_inertia->x, __pyx_v_inertia->y, __pyx_v_inertia->z));

  /* "bullet/bullet.pyx":1003
 *             btVector3(inertia.x, inertia.y, inertia.z))
 * 
 *         info.m_mass = mass             # <<<<<<<<<<<<<<
 *         info.m_startWorldTransform = worldTransform.thisptr[0]
 *         info.m_linearDamping = linearDamping
 */
  __pyx_v_info->m_mass = __pyx_v_mass;

  /* "bullet/bullet.pyx":1004
 * 
 *         info.m_mass = mass
 *         info.m_startWorldTransform = worldTransform.thisptr[0]             # <<<<<<<<<<<<<<
 *         info.m_linearDamping = linearDamping
 *         info.m_angularDamping = angularDamping
 */
  __pyx_v_info->m_startWorldTransform = (__pyx_v_worldTransform->thisptr[0]);

  /* "bullet/bullet.pyx":1005
 *         info.m_mass = mass
 *         info.m_startWorldTransform = worldTransform.thisptr[0]
 *         info.m_linearDamping = linearDamping             # <<<<<<<<<<<<<<
 *         info.m_angularDamping = angularDamping
 *         info.m_friction = friction
 */
  __pyx_v_info->m_linearDamping = __pyx_v_linearDamping;

  /* "bullet/bullet.pyx":1006
 *         info.m_startWorldTransform = worldTransform.thisptr[0]
 *         info.m_linearDamping = linearDamping
 *         info.m_angularDamping = angularDamping             # <<<<<<<<<<<<<<
 *         info.m_friction = friction
 *         info.m_restitution = restitution
 */
  __pyx_v_info->m_angularDamping = __pyx_v_angularDamping;

  /* "bullet/bullet.pyx":1007
 *         info.m_linearDamping = linearDamping
 *         info.m_angularDamping = angularDamping
 *         info.m_friction = friction             # <<<<<<<<<<<<<<
 *         info.m_restitution = restitution
 *         info.m_linearSleepingThreshold = linearSleepingThreshold
 */
  __pyx_v_info->m_friction = __pyx_v_friction;

  /* "bullet/bullet.pyx":1008
 *         info.m_angularDamping = angularDamping
 *         info.m_friction = friction
 *         info.m_restitution = restitution             # <<<<<<<<<<<<<<
 *         info.m_linearSleepingThreshold = linearSleepingThreshold
 *         info.m_angularSleepingThreshold = angularSleepingThreshold
 */
  __pyx_v_info->m_restitution = __pyx_v_restitution;

  /* "bullet/bullet.pyx":1009
 *         info.m_friction = friction
 *         info.m_restitution = restitution
 *         info.m_linearSleepingThreshold = linearSleepingThreshold             # <<<<<<<<<<<<<<
 *         info.m_angularSleepingThreshold = angularSleepingThreshold
 * 
 */
  __pyx_v_info->m_linearSleepingThreshold = __pyx_v_linearSleepingThreshold;

  /* "bullet/bullet.pyx":1010
 *         info.m_restitution = restitution
 *         info.m_linearSleepingThreshold = linearSleepingThreshold
 *         info.m_angularSleepingThreshold = angularSleepingThreshold             # <<<<<<<<<<<<<<
 * 
 *         body.thisptr = new btRigidBody(info[0])
 */
  __pyx_v_info->m_angularSleepingThreshold = __pyx_v_angularSleepingThreshold;

  /* "bullet/bullet.pyx":1012
 *         info.m_angularSleepingThreshold = angularSleepingThreshold
 * 
 *         body.thisptr = new btRigidBody(info[0])             # <<<<<<<<<<<<<<
 *         body.motion = motion
 *         body._shape = shape
 */
  __pyx_v_body->__pyx_base.thisptr = new btRigidBody((__pyx_v_info[0]));

  /* "bullet/bullet.pyx":1013
 * 
 *         body.thisptr = new btRigidBody(info[0])
 *         body.motion = motion             # <<<<<<<<<<<<<<
 *         body._shape = shape
 *         del info
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_motion));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_motion));
  __Pyx_GOTREF(__pyx_v_body->motion);
  __Pyx_DECREF(((PyObject *)__pyx_v_body->motion));
  __pyx_v_body->motion = __pyx_v_motion;

  /* "bullet/bullet.pyx":1014
 *         body.thisptr = new btRigidBody(info[0])
 *         body.motion = motion
 *         body._shape = shape             # <<<<<<<<<<<<<<
 *         del info
 *         return body
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_shape));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_shape));
  __Pyx_GOTREF(__pyx_v_body->__pyx_base._shape);
  __Pyx_DECREF(((PyObject *)__pyx_v_body->__pyx_base._shape));
  __pyx_v_body->__pyx_base._shape = __pyx_v_shape;

  /* "bullet/bullet.pyx":1015
 *         body.motion = motion
 *         body._shape = shape
 *         del info             # <<<<<<<<<<<<<<
 *         return body
 * 
 */
  delete __pyx_v_info;

  /* "bullet/bullet.pyx":1016
 *         body._shape = shape
 *         del info
 *         return body             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_body));
  __pyx_r = ((PyObject *)__pyx_v_body);
  goto __pyx_L0;

  /* "bullet/bullet.pyx":950
 * 
 *     @classmethod
 *     def fromConstructionInfo(cls, MotionState motion,             # <<<<<<<<<<<<<<
 *                              CollisionShape shape, btScalar mass,
 *                              Vector3 inertia, Transform worldTransform,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.fromConstructionInfo", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_body);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1019
 * 
 * 
 *     def isInWorld(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return a boolean indicating whether or not this RigidBody has been added
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_5isInWorld(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_4isInWorld[] = "\n        Return a boolean indicating whether or not this RigidBody has been added\n        to a CollisionWorld.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_5isInWorld(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("isInWorld (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_4isInWorld(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_4isInWorld(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self) {
  btRigidBody *__pyx_v_body;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("isInWorld", 0);

  /* "bullet/bullet.pyx":1025
 *         """
 *         cdef btRigidBody *body
 *         body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         return body.isInWorld()
 * 
 */
  __pyx_v_body = ((btRigidBody *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1026
 *         cdef btRigidBody *body
 *         body = <btRigidBody*>self.thisptr
 *         return body.isInWorld()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_bool(__pyx_v_body->isInWorld()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1026, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":1019
 * 
 * 
 *     def isInWorld(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return a boolean indicating whether or not this RigidBody has been added
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.isInWorld", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1029
 * 
 * 
 *     def getInvMass(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the inverse of the mass of this L{RigidBody}.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_7getInvMass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_6getInvMass[] = "\n        Return the inverse of the mass of this L{RigidBody}.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_7getInvMass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getInvMass (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_6getInvMass(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_6getInvMass(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self) {
  btRigidBody *__pyx_v_body;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getInvMass", 0);

  /* "bullet/bullet.pyx":1034
 *         """
 *         cdef btRigidBody *body
 *         body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         return body.getInvMass()
 * 
 */
  __pyx_v_body = ((btRigidBody *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1035
 *         cdef btRigidBody *body
 *         body = <btRigidBody*>self.thisptr
 *         return body.getInvMass()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_body->getInvMass()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1035, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":1029
 * 
 * 
 *     def getInvMass(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the inverse of the mass of this L{RigidBody}.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.getInvMass", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1038
 * 
 * 
 *     def getInvInertiaDiagLocal(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the inverse of the local inertia vector.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_9getInvInertiaDiagLocal(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_8getInvInertiaDiagLocal[] = "\n        Return the inverse of the local inertia vector.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_9getInvInertiaDiagLocal(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getInvInertiaDiagLocal (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_8getInvInertiaDiagLocal(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_8getInvInertiaDiagLocal(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self) {
  btRigidBody *__pyx_v_body;
  btVector3 __pyx_v_inertia;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("getInvInertiaDiagLocal", 0);

  /* "bullet/bullet.pyx":1043
 *         """
 *         cdef btRigidBody *body
 *         body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         cdef btVector3 inertia = body.getInvInertiaDiagLocal()
 *         return Vector3(inertia.getX(), inertia.getY(), inertia.getZ())
 */
  __pyx_v_body = ((btRigidBody *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1044
 *         cdef btRigidBody *body
 *         body = <btRigidBody*>self.thisptr
 *         cdef btVector3 inertia = body.getInvInertiaDiagLocal()             # <<<<<<<<<<<<<<
 *         return Vector3(inertia.getX(), inertia.getY(), inertia.getZ())
 * 
 */
  __pyx_v_inertia = __pyx_v_body->getInvInertiaDiagLocal();

  /* "bullet/bullet.pyx":1045
 *         body = <btRigidBody*>self.thisptr
 *         cdef btVector3 inertia = body.getInvInertiaDiagLocal()
 *         return Vector3(inertia.getX(), inertia.getY(), inertia.getZ())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_inertia.getX()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1045, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_inertia.getY()); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1045, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_inertia.getZ()); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1045, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1045, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Vector3), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1045, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":1038
 * 
 * 
 *     def getInvInertiaDiagLocal(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the inverse of the local inertia vector.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.getInvInertiaDiagLocal", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1048
 * 
 * 
 *     def getMotionState(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the MotionState associated with this RigidBody.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_11getMotionState(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_10getMotionState[] = "\n        Return the MotionState associated with this RigidBody.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_11getMotionState(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getMotionState (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_10getMotionState(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_10getMotionState(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getMotionState", 0);

  /* "bullet/bullet.pyx":1052
 *         Return the MotionState associated with this RigidBody.
 *         """
 *         return self.motion             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->motion));
  __pyx_r = ((PyObject *)__pyx_v_self->motion);
  goto __pyx_L0;

  /* "bullet/bullet.pyx":1048
 * 
 * 
 *     def getMotionState(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the MotionState associated with this RigidBody.
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1055
 * 
 * 
 *     def setAngularFactor(self, btScalar angularFactor):             # <<<<<<<<<<<<<<
 *         """
 *         Specify whether this object will be allowed to rotate or not.  If the
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_13setAngularFactor(PyObject *__pyx_v_self, PyObject *__pyx_arg_angularFactor); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_12setAngularFactor[] = "\n        Specify whether this object will be allowed to rotate or not.  If the\n        given angularFactor argument is 0, rotation will not be allowed.  If it\n        is 1, rotation will be allowed.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_13setAngularFactor(PyObject *__pyx_v_self, PyObject *__pyx_arg_angularFactor) {
  btScalar __pyx_v_angularFactor;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setAngularFactor (wrapper)", 0);
  assert(__pyx_arg_angularFactor); {
    __pyx_v_angularFactor = __pyx_PyFloat_AsFloat(__pyx_arg_angularFactor); if (unlikely((__pyx_v_angularFactor == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 1055, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.RigidBody.setAngularFactor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_12setAngularFactor(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self), ((btScalar)__pyx_v_angularFactor));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_12setAngularFactor(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, btScalar __pyx_v_angularFactor) {
  btRigidBody *__pyx_v_body;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setAngularFactor", 0);

  /* "bullet/bullet.pyx":1061
 *         is 1, rotation will be allowed.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         body.setAngularFactor(angularFactor)
 * 
 */
  __pyx_v_body = ((btRigidBody *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1062
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         body.setAngularFactor(angularFactor)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_body->setAngularFactor(__pyx_v_angularFactor);

  /* "bullet/bullet.pyx":1055
 * 
 * 
 *     def setAngularFactor(self, btScalar angularFactor):             # <<<<<<<<<<<<<<
 *         """
 *         Specify whether this object will be allowed to rotate or not.  If the
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1065
 * 
 * 
 *     def setLinearVelocity(self, Vector3 v not None):             # <<<<<<<<<<<<<<
 *         """
 *         Change the linear velocity of this RigidBody for at least a single
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_15setLinearVelocity(PyObject *__pyx_v_self, PyObject *__pyx_v_v); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_14setLinearVelocity[] = "\n        Change the linear velocity of this RigidBody for at least a single\n        simulation step.  It is unspecified whether the change will persist for\n        more than one simulation step.  For reliable and reproducable results,\n        you must set the linear velocity before each simulation tick.  This is\n        best done in the physics tick callback.\n\n        XXX The physics tick callback is presently unexposed.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_15setLinearVelocity(PyObject *__pyx_v_self, PyObject *__pyx_v_v) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setLinearVelocity (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_ptype_6bullet_6bullet_Vector3, 0, "v", 0))) __PYX_ERR(1, 1065, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_14setLinearVelocity(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_v));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_14setLinearVelocity(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_v) {
  btRigidBody *__pyx_v_body;
  btVector3 __pyx_v_vel;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setLinearVelocity", 0);

  /* "bullet/bullet.pyx":1075
 *         XXX The physics tick callback is presently unexposed.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         cdef btVector3 vel = btVector3(v.x, v.y, v.z)
 *         body.setLinearVelocity(vel)
 */
  __pyx_v_body = ((btRigidBody *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1076
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 vel = btVector3(v.x, v.y, v.z)             # <<<<<<<<<<<<<<
 *         body.setLinearVelocity(vel)
 * 
 */
  __pyx_v_vel = btVector3(__pyx_v_v->x, __pyx_v_v->y, __pyx_v_v->z);

  /* "bullet/bullet.pyx":1077
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 vel = btVector3(v.x, v.y, v.z)
 *         body.setLinearVelocity(vel)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_body->setLinearVelocity(__pyx_v_vel);

  /* "bullet/bullet.pyx":1065
 * 
 * 
 *     def setLinearVelocity(self, Vector3 v not None):             # <<<<<<<<<<<<<<
 *         """
 *         Change the linear velocity of this RigidBody for at least a single
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1080
 * 
 * 
 *     def getLinearVelocity(self):             # <<<<<<<<<<<<<<
 *         """
 *         Retrieve the current linear velocity of this RigidBody as a Vector3.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_17getLinearVelocity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_16getLinearVelocity[] = "\n        Retrieve the current linear velocity of this RigidBody as a Vector3.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_17getLinearVelocity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getLinearVelocity (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_16getLinearVelocity(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_16getLinearVelocity(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self) {
  btRigidBody *__pyx_v_body;
  btVector3 __pyx_v_vel;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("getLinearVelocity", 0);

  /* "bullet/bullet.pyx":1084
 *         Retrieve the current linear velocity of this RigidBody as a Vector3.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         cdef btVector3 vel = body.getLinearVelocity()
 *         return Vector3(vel.getX(), vel.getY(), vel.getZ())
 */
  __pyx_v_body = ((btRigidBody *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1085
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 vel = body.getLinearVelocity()             # <<<<<<<<<<<<<<
 *         return Vector3(vel.getX(), vel.getY(), vel.getZ())
 * 
 */
  __pyx_v_vel = __pyx_v_body->getLinearVelocity();

  /* "bullet/bullet.pyx":1086
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 vel = body.getLinearVelocity()
 *         return Vector3(vel.getX(), vel.getY(), vel.getZ())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_vel.getX()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1086, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_vel.getY()); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1086, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_vel.getZ()); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1086, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1086, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Vector3), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1086, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":1080
 * 
 * 
 *     def getLinearVelocity(self):             # <<<<<<<<<<<<<<
 *         """
 *         Retrieve the current linear velocity of this RigidBody as a Vector3.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.getLinearVelocity", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1089
 * 
 * 
 *     def getLinearDamping(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the linear velocity damping value for this RigidBody.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_19getLinearDamping(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_18getLinearDamping[] = "\n        Return the linear velocity damping value for this RigidBody.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_19getLinearDamping(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getLinearDamping (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_18getLinearDamping(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_18getLinearDamping(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self) {
  btRigidBody *__pyx_v_body;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getLinearDamping", 0);

  /* "bullet/bullet.pyx":1093
 *         Return the linear velocity damping value for this RigidBody.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         return body.getLinearDamping()
 * 
 */
  __pyx_v_body = ((btRigidBody *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1094
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         return body.getLinearDamping()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_body->getLinearDamping()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1094, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":1089
 * 
 * 
 *     def getLinearDamping(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the linear velocity damping value for this RigidBody.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.getLinearDamping", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1097
 * 
 * 
 *     def getLinearSleepingThreshold(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the linear velocity threshold below which the body will not be
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_21getLinearSleepingThreshold(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_20getLinearSleepingThreshold[] = "\n        Return the linear velocity threshold below which the body will not be\n        deactivated.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_21getLinearSleepingThreshold(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getLinearSleepingThreshold (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_20getLinearSleepingThreshold(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_20getLinearSleepingThreshold(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self) {
  btRigidBody *__pyx_v_body;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getLinearSleepingThreshold", 0);

  /* "bullet/bullet.pyx":1102
 *         deactivated.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         return body.getLinearSleepingThreshold()
 * 
 */
  __pyx_v_body = ((btRigidBody *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1103
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         return body.getLinearSleepingThreshold()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_body->getLinearSleepingThreshold()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":1097
 * 
 * 
 *     def getLinearSleepingThreshold(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the linear velocity threshold below which the body will not be
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.getLinearSleepingThreshold", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1106
 * 
 * 
 *     def getAngularSleepingThreshold(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the linear velocity threshold below which the body will not be
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_23getAngularSleepingThreshold(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_22getAngularSleepingThreshold[] = "\n        Return the linear velocity threshold below which the body will not be\n        deactivated.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_23getAngularSleepingThreshold(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getAngularSleepingThreshold (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_22getAngularSleepingThreshold(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_22getAngularSleepingThreshold(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self) {
  btRigidBody *__pyx_v_body;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getAngularSleepingThreshold", 0);

  /* "bullet/bullet.pyx":1111
 *         deactivated.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         return body.getAngularSleepingThreshold()
 * 
 */
  __pyx_v_body = ((btRigidBody *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1112
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         return body.getAngularSleepingThreshold()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_body->getAngularSleepingThreshold()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":1106
 * 
 * 
 *     def getAngularSleepingThreshold(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the linear velocity threshold below which the body will not be
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.getAngularSleepingThreshold", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1115
 * 
 * 
 *     def getAngularDamping(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the angular velocity damping value for this RigidBody.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_25getAngularDamping(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_24getAngularDamping[] = "\n        Return the angular velocity damping value for this RigidBody.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_25getAngularDamping(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getAngularDamping (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_24getAngularDamping(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_24getAngularDamping(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self) {
  btRigidBody *__pyx_v_body;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getAngularDamping", 0);

  /* "bullet/bullet.pyx":1119
 *         Return the angular velocity damping value for this RigidBody.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         return body.getAngularDamping()
 * 
 */
  __pyx_v_body = ((btRigidBody *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1120
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         return body.getAngularDamping()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_body->getAngularDamping()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":1115
 * 
 * 
 *     def getAngularDamping(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the angular velocity damping value for this RigidBody.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.getAngularDamping", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1123
 * 
 * 
 *     def applyCentralForce(self, Vector3 f not None):             # <<<<<<<<<<<<<<
 *         """
 *         Apply a force to the center of mass of this RigidBody.  The resulting
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_27applyCentralForce(PyObject *__pyx_v_self, PyObject *__pyx_v_f); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_26applyCentralForce[] = "\n        Apply a force to the center of mass of this RigidBody.  The resulting\n        acceleration is computed in the usual way, dividing the force by the\n        mass of the RigidBody.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_27applyCentralForce(PyObject *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("applyCentralForce (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_f), __pyx_ptype_6bullet_6bullet_Vector3, 0, "f", 0))) __PYX_ERR(1, 1123, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_26applyCentralForce(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_f));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_26applyCentralForce(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_f) {
  btRigidBody *__pyx_v_body;
  btVector3 __pyx_v_force;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("applyCentralForce", 0);

  /* "bullet/bullet.pyx":1129
 *         mass of the RigidBody.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         cdef btVector3 force = btVector3(f.x, f.y, f.z)
 *         body.applyCentralForce(force)
 */
  __pyx_v_body = ((btRigidBody *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1130
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 force = btVector3(f.x, f.y, f.z)             # <<<<<<<<<<<<<<
 *         body.applyCentralForce(force)
 * 
 */
  __pyx_v_force = btVector3(__pyx_v_f->x, __pyx_v_f->y, __pyx_v_f->z);

  /* "bullet/bullet.pyx":1131
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 force = btVector3(f.x, f.y, f.z)
 *         body.applyCentralForce(force)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_body->applyCentralForce(__pyx_v_force);

  /* "bullet/bullet.pyx":1123
 * 
 * 
 *     def applyCentralForce(self, Vector3 f not None):             # <<<<<<<<<<<<<<
 *         """
 *         Apply a force to the center of mass of this RigidBody.  The resulting
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1134
 * 
 * 
 *     def applyForce(self, Vector3 f not None, Vector3 relativePosition not None):             # <<<<<<<<<<<<<<
 *         """
 *         Apply a force to this RigidBody at a specified offset from its center of
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_29applyForce(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_28applyForce[] = "\n        Apply a force to this RigidBody at a specified offset from its center of\n        mass.  The resulting acceleration is computed in the usual way, dividing\n        the force by the mass of the RigidBody.  A force applied off-center may\n        also result in rotation.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_29applyForce(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_f = 0;
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_relativePosition = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("applyForce (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_f,&__pyx_n_s_relativePosition,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_f)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_relativePosition)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("applyForce", 1, 2, 2, 1); __PYX_ERR(1, 1134, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "applyForce") < 0)) __PYX_ERR(1, 1134, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_f = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
    __pyx_v_relativePosition = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("applyForce", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1134, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.RigidBody.applyForce", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_f), __pyx_ptype_6bullet_6bullet_Vector3, 0, "f", 0))) __PYX_ERR(1, 1134, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_relativePosition), __pyx_ptype_6bullet_6bullet_Vector3, 0, "relativePosition", 0))) __PYX_ERR(1, 1134, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_28applyForce(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self), __pyx_v_f, __pyx_v_relativePosition);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_28applyForce(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_f, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_relativePosition) {
  btRigidBody *__pyx_v_body;
  btVector3 __pyx_v_force;
  btVector3 __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("applyForce", 0);

  /* "bullet/bullet.pyx":1141
 *         also result in rotation.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         cdef btVector3 force = btVector3(f.x, f.y, f.z)
 *         cdef btVector3 pos = btVector3(
 */
  __pyx_v_body = ((btRigidBody *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1142
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 force = btVector3(f.x, f.y, f.z)             # <<<<<<<<<<<<<<
 *         cdef btVector3 pos = btVector3(
 *             relativePosition.x, relativePosition.y, relativePosition.z)
 */
  __pyx_v_force = btVector3(__pyx_v_f->x, __pyx_v_f->y, __pyx_v_f->z);

  /* "bullet/bullet.pyx":1143
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 force = btVector3(f.x, f.y, f.z)
 *         cdef btVector3 pos = btVector3(             # <<<<<<<<<<<<<<
 *             relativePosition.x, relativePosition.y, relativePosition.z)
 *         body.applyForce(force, pos)
 */
  __pyx_v_pos = btVector3(__pyx_v_relativePosition->x, __pyx_v_relativePosition->y, __pyx_v_relativePosition->z);

  /* "bullet/bullet.pyx":1145
 *         cdef btVector3 pos = btVector3(
 *             relativePosition.x, relativePosition.y, relativePosition.z)
 *         body.applyForce(force, pos)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_body->applyForce(__pyx_v_force, __pyx_v_pos);

  /* "bullet/bullet.pyx":1134
 * 
 * 
 *     def applyForce(self, Vector3 f not None, Vector3 relativePosition not None):             # <<<<<<<<<<<<<<
 *         """
 *         Apply a force to this RigidBody at a specified offset from its center of
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1148
 * 
 * 
 *     def applyCentralImpulse(self, Vector3 i not None):             # <<<<<<<<<<<<<<
 *         """
 *         Apply an impulse to this RigidBody.  The resulting acceleration will be
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_31applyCentralImpulse(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_30applyCentralImpulse[] = "\n        Apply an impulse to this RigidBody.  The resulting acceleration will be\n        equal to the impulse.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_31applyCentralImpulse(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("applyCentralImpulse (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_i), __pyx_ptype_6bullet_6bullet_Vector3, 0, "i", 0))) __PYX_ERR(1, 1148, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_30applyCentralImpulse(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_i));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_30applyCentralImpulse(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_i) {
  btRigidBody *__pyx_v_body;
  btVector3 __pyx_v_impulse;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("applyCentralImpulse", 0);

  /* "bullet/bullet.pyx":1153
 *         equal to the impulse.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         cdef btVector3 impulse = btVector3(i.x, i.y, i.z)
 *         body.applyCentralImpulse(impulse)
 */
  __pyx_v_body = ((btRigidBody *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1154
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 impulse = btVector3(i.x, i.y, i.z)             # <<<<<<<<<<<<<<
 *         body.applyCentralImpulse(impulse)
 * 
 */
  __pyx_v_impulse = btVector3(__pyx_v_i->x, __pyx_v_i->y, __pyx_v_i->z);

  /* "bullet/bullet.pyx":1155
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 impulse = btVector3(i.x, i.y, i.z)
 *         body.applyCentralImpulse(impulse)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_body->applyCentralImpulse(__pyx_v_impulse);

  /* "bullet/bullet.pyx":1148
 * 
 * 
 *     def applyCentralImpulse(self, Vector3 i not None):             # <<<<<<<<<<<<<<
 *         """
 *         Apply an impulse to this RigidBody.  The resulting acceleration will be
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1158
 * 
 * 
 *     def applyImpulse(self, Vector3 i not None, Vector3 relativePosition not None):             # <<<<<<<<<<<<<<
 *         """
 *         Apply an impulse to this RigidBody at a specified offset from its center
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_33applyImpulse(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_32applyImpulse[] = "\n        Apply an impulse to this RigidBody at a specified offset from its center\n        of mass.  The resulting accleration will be equal to the impulse.  An\n        impulse applied off-center may also result in rotation.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_33applyImpulse(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_i = 0;
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_relativePosition = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("applyImpulse (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_i,&__pyx_n_s_relativePosition,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_i)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_relativePosition)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("applyImpulse", 1, 2, 2, 1); __PYX_ERR(1, 1158, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "applyImpulse") < 0)) __PYX_ERR(1, 1158, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_i = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
    __pyx_v_relativePosition = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("applyImpulse", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1158, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.RigidBody.applyImpulse", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_i), __pyx_ptype_6bullet_6bullet_Vector3, 0, "i", 0))) __PYX_ERR(1, 1158, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_relativePosition), __pyx_ptype_6bullet_6bullet_Vector3, 0, "relativePosition", 0))) __PYX_ERR(1, 1158, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_32applyImpulse(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self), __pyx_v_i, __pyx_v_relativePosition);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_32applyImpulse(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_i, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_relativePosition) {
  btRigidBody *__pyx_v_body;
  btVector3 __pyx_v_impulse;
  btVector3 __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("applyImpulse", 0);

  /* "bullet/bullet.pyx":1164
 *         impulse applied off-center may also result in rotation.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         cdef btVector3 impulse = btVector3(i.x, i.y, i.z)
 *         cdef btVector3 pos = btVector3(
 */
  __pyx_v_body = ((btRigidBody *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1165
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 impulse = btVector3(i.x, i.y, i.z)             # <<<<<<<<<<<<<<
 *         cdef btVector3 pos = btVector3(
 *             relativePosition.x, relativePosition.y, relativePosition.z)
 */
  __pyx_v_impulse = btVector3(__pyx_v_i->x, __pyx_v_i->y, __pyx_v_i->z);

  /* "bullet/bullet.pyx":1166
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 impulse = btVector3(i.x, i.y, i.z)
 *         cdef btVector3 pos = btVector3(             # <<<<<<<<<<<<<<
 *             relativePosition.x, relativePosition.y, relativePosition.z)
 *         body.applyImpulse(impulse, pos)
 */
  __pyx_v_pos = btVector3(__pyx_v_relativePosition->x, __pyx_v_relativePosition->y, __pyx_v_relativePosition->z);

  /* "bullet/bullet.pyx":1168
 *         cdef btVector3 pos = btVector3(
 *             relativePosition.x, relativePosition.y, relativePosition.z)
 *         body.applyImpulse(impulse, pos)             # <<<<<<<<<<<<<<
 * 
 *     def setGravity(self, Vector3 acceleration):
 */
  __pyx_v_body->applyImpulse(__pyx_v_impulse, __pyx_v_pos);

  /* "bullet/bullet.pyx":1158
 * 
 * 
 *     def applyImpulse(self, Vector3 i not None, Vector3 relativePosition not None):             # <<<<<<<<<<<<<<
 *         """
 *         Apply an impulse to this RigidBody at a specified offset from its center
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1170
 *         body.applyImpulse(impulse, pos)
 * 
 *     def setGravity(self, Vector3 acceleration):             # <<<<<<<<<<<<<<
 *         cdef btVector3 nvec = btVector3(acceleration.x, acceleration.y, acceleration.z)
 *         (<btRigidBody*>self.thisptr).setGravity(nvec)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_35setGravity(PyObject *__pyx_v_self, PyObject *__pyx_v_acceleration); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_35setGravity(PyObject *__pyx_v_self, PyObject *__pyx_v_acceleration) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setGravity (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_acceleration), __pyx_ptype_6bullet_6bullet_Vector3, 1, "acceleration", 0))) __PYX_ERR(1, 1170, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_34setGravity(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_acceleration));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_34setGravity(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_acceleration) {
  btVector3 __pyx_v_nvec;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setGravity", 0);

  /* "bullet/bullet.pyx":1171
 * 
 *     def setGravity(self, Vector3 acceleration):
 *         cdef btVector3 nvec = btVector3(acceleration.x, acceleration.y, acceleration.z)             # <<<<<<<<<<<<<<
 *         (<btRigidBody*>self.thisptr).setGravity(nvec)
 * 
 */
  __pyx_v_nvec = btVector3(__pyx_v_acceleration->x, __pyx_v_acceleration->y, __pyx_v_acceleration->z);

  /* "bullet/bullet.pyx":1172
 *     def setGravity(self, Vector3 acceleration):
 *         cdef btVector3 nvec = btVector3(acceleration.x, acceleration.y, acceleration.z)
 *         (<btRigidBody*>self.thisptr).setGravity(nvec)             # <<<<<<<<<<<<<<
 * 
 *     def setMassProps(self, float mass, Vector3 inertia):
 */
  ((btRigidBody *)__pyx_v_self->__pyx_base.thisptr)->setGravity(__pyx_v_nvec);

  /* "bullet/bullet.pyx":1170
 *         body.applyImpulse(impulse, pos)
 * 
 *     def setGravity(self, Vector3 acceleration):             # <<<<<<<<<<<<<<
 *         cdef btVector3 nvec = btVector3(acceleration.x, acceleration.y, acceleration.z)
 *         (<btRigidBody*>self.thisptr).setGravity(nvec)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1174
 *         (<btRigidBody*>self.thisptr).setGravity(nvec)
 * 
 *     def setMassProps(self, float mass, Vector3 inertia):             # <<<<<<<<<<<<<<
 *         cdef btVector3 nvec = btVector3(inertia.x, inertia.y, inertia.z)
 *         (<btRigidBody*>self.thisptr).setMassProps(mass, nvec)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_37setMassProps(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_37setMassProps(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_mass;
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_inertia = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setMassProps (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_mass,&__pyx_n_s_inertia,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_mass)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_inertia)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setMassProps", 1, 2, 2, 1); __PYX_ERR(1, 1174, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setMassProps") < 0)) __PYX_ERR(1, 1174, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_mass = __pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_mass == (float)-1) && PyErr_Occurred())) __PYX_ERR(1, 1174, __pyx_L3_error)
    __pyx_v_inertia = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setMassProps", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1174, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.RigidBody.setMassProps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_inertia), __pyx_ptype_6bullet_6bullet_Vector3, 1, "inertia", 0))) __PYX_ERR(1, 1174, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_36setMassProps(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self), __pyx_v_mass, __pyx_v_inertia);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_36setMassProps(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, float __pyx_v_mass, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_inertia) {
  btVector3 __pyx_v_nvec;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setMassProps", 0);

  /* "bullet/bullet.pyx":1175
 * 
 *     def setMassProps(self, float mass, Vector3 inertia):
 *         cdef btVector3 nvec = btVector3(inertia.x, inertia.y, inertia.z)             # <<<<<<<<<<<<<<
 *         (<btRigidBody*>self.thisptr).setMassProps(mass, nvec)
 * 
 */
  __pyx_v_nvec = btVector3(__pyx_v_inertia->x, __pyx_v_inertia->y, __pyx_v_inertia->z);

  /* "bullet/bullet.pyx":1176
 *     def setMassProps(self, float mass, Vector3 inertia):
 *         cdef btVector3 nvec = btVector3(inertia.x, inertia.y, inertia.z)
 *         (<btRigidBody*>self.thisptr).setMassProps(mass, nvec)             # <<<<<<<<<<<<<<
 * 
 *     def updateInertiaTensor(self):
 */
  ((btRigidBody *)__pyx_v_self->__pyx_base.thisptr)->setMassProps(__pyx_v_mass, __pyx_v_nvec);

  /* "bullet/bullet.pyx":1174
 *         (<btRigidBody*>self.thisptr).setGravity(nvec)
 * 
 *     def setMassProps(self, float mass, Vector3 inertia):             # <<<<<<<<<<<<<<
 *         cdef btVector3 nvec = btVector3(inertia.x, inertia.y, inertia.z)
 *         (<btRigidBody*>self.thisptr).setMassProps(mass, nvec)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1178
 *         (<btRigidBody*>self.thisptr).setMassProps(mass, nvec)
 * 
 *     def updateInertiaTensor(self):             # <<<<<<<<<<<<<<
 *         (<btRigidBody*>self.thisptr).updateInertiaTensor()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_39updateInertiaTensor(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_39updateInertiaTensor(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("updateInertiaTensor (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_38updateInertiaTensor(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_38updateInertiaTensor(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("updateInertiaTensor", 0);

  /* "bullet/bullet.pyx":1179
 * 
 *     def updateInertiaTensor(self):
 *         (<btRigidBody*>self.thisptr).updateInertiaTensor()             # <<<<<<<<<<<<<<
 * 
 *     # def getAabb (self, btVector3 &aabbMin, btVector3 &aabbMax):
 */
  ((btRigidBody *)__pyx_v_self->__pyx_base.thisptr)->updateInertiaTensor();

  /* "bullet/bullet.pyx":1178
 *         (<btRigidBody*>self.thisptr).setMassProps(mass, nvec)
 * 
 *     def updateInertiaTensor(self):             # <<<<<<<<<<<<<<
 *         (<btRigidBody*>self.thisptr).updateInertiaTensor()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1193
 *     #     pass
 *     #
 *     def getAngularVelocity (self):             # <<<<<<<<<<<<<<
 *         """
 *         Retrieve the current angular velocity of this RigidBody as a Vector3.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_41getAngularVelocity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_40getAngularVelocity[] = "\n        Retrieve the current angular velocity of this RigidBody as a Vector3.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_41getAngularVelocity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getAngularVelocity (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_40getAngularVelocity(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_40getAngularVelocity(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self) {
  btRigidBody *__pyx_v_body;
  btVector3 __pyx_v_vel;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("getAngularVelocity", 0);

  /* "bullet/bullet.pyx":1197
 *         Retrieve the current angular velocity of this RigidBody as a Vector3.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         cdef btVector3 vel = body.getAngularVelocity()
 *         return Vector3(vel.getX(), vel.getY(), vel.getZ())
 */
  __pyx_v_body = ((btRigidBody *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1198
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 vel = body.getAngularVelocity()             # <<<<<<<<<<<<<<
 *         return Vector3(vel.getX(), vel.getY(), vel.getZ())
 * 
 */
  __pyx_v_vel = __pyx_v_body->getAngularVelocity();

  /* "bullet/bullet.pyx":1199
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 vel = body.getAngularVelocity()
 *         return Vector3(vel.getX(), vel.getY(), vel.getZ())             # <<<<<<<<<<<<<<
 * 
 *     def setAngularVelocity (self, Vector3 ang_vel):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_vel.getX()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_vel.getY()); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_vel.getZ()); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Vector3), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":1193
 *     #     pass
 *     #
 *     def getAngularVelocity (self):             # <<<<<<<<<<<<<<
 *         """
 *         Retrieve the current angular velocity of this RigidBody as a Vector3.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.getAngularVelocity", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1201
 *         return Vector3(vel.getX(), vel.getY(), vel.getZ())
 * 
 *     def setAngularVelocity (self, Vector3 ang_vel):             # <<<<<<<<<<<<<<
 *         cdef btVector3 btang_vel = btVector3(ang_vel.x, ang_vel.y, ang_vel.z)
 *         (<btRigidBody*>self.thisptr).setAngularVelocity(btang_vel)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_43setAngularVelocity(PyObject *__pyx_v_self, PyObject *__pyx_v_ang_vel); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_43setAngularVelocity(PyObject *__pyx_v_self, PyObject *__pyx_v_ang_vel) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setAngularVelocity (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ang_vel), __pyx_ptype_6bullet_6bullet_Vector3, 1, "ang_vel", 0))) __PYX_ERR(1, 1201, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_42setAngularVelocity(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_ang_vel));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_42setAngularVelocity(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_ang_vel) {
  btVector3 __pyx_v_btang_vel;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setAngularVelocity", 0);

  /* "bullet/bullet.pyx":1202
 * 
 *     def setAngularVelocity (self, Vector3 ang_vel):
 *         cdef btVector3 btang_vel = btVector3(ang_vel.x, ang_vel.y, ang_vel.z)             # <<<<<<<<<<<<<<
 *         (<btRigidBody*>self.thisptr).setAngularVelocity(btang_vel)
 * 
 */
  __pyx_v_btang_vel = btVector3(__pyx_v_ang_vel->x, __pyx_v_ang_vel->y, __pyx_v_ang_vel->z);

  /* "bullet/bullet.pyx":1203
 *     def setAngularVelocity (self, Vector3 ang_vel):
 *         cdef btVector3 btang_vel = btVector3(ang_vel.x, ang_vel.y, ang_vel.z)
 *         (<btRigidBody*>self.thisptr).setAngularVelocity(btang_vel)             # <<<<<<<<<<<<<<
 * 
 *     def setSleepingThresholds(self, float linear, float angular):
 */
  ((btRigidBody *)__pyx_v_self->__pyx_base.thisptr)->setAngularVelocity(__pyx_v_btang_vel);

  /* "bullet/bullet.pyx":1201
 *         return Vector3(vel.getX(), vel.getY(), vel.getZ())
 * 
 *     def setAngularVelocity (self, Vector3 ang_vel):             # <<<<<<<<<<<<<<
 *         cdef btVector3 btang_vel = btVector3(ang_vel.x, ang_vel.y, ang_vel.z)
 *         (<btRigidBody*>self.thisptr).setAngularVelocity(btang_vel)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1205
 *         (<btRigidBody*>self.thisptr).setAngularVelocity(btang_vel)
 * 
 *     def setSleepingThresholds(self, float linear, float angular):             # <<<<<<<<<<<<<<
 *         """
 *         Set the linear and angular velocity thresholds.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_45setSleepingThresholds(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_44setSleepingThresholds[] = "\n        Set the linear and angular velocity thresholds.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_45setSleepingThresholds(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_linear;
  float __pyx_v_angular;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setSleepingThresholds (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_linear,&__pyx_n_s_angular,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_linear)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_angular)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setSleepingThresholds", 1, 2, 2, 1); __PYX_ERR(1, 1205, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setSleepingThresholds") < 0)) __PYX_ERR(1, 1205, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_linear = __pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_linear == (float)-1) && PyErr_Occurred())) __PYX_ERR(1, 1205, __pyx_L3_error)
    __pyx_v_angular = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_angular == (float)-1) && PyErr_Occurred())) __PYX_ERR(1, 1205, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setSleepingThresholds", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1205, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.RigidBody.setSleepingThresholds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_44setSleepingThresholds(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self), __pyx_v_linear, __pyx_v_angular);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_44setSleepingThresholds(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, float __pyx_v_linear, float __pyx_v_angular) {
  btRigidBody *__pyx_v_body;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setSleepingThresholds", 0);

  /* "bullet/bullet.pyx":1209
 *         Set the linear and angular velocity thresholds.
 *         """
 *         cdef btRigidBody * body = <btRigidBody *> self.thisptr             # <<<<<<<<<<<<<<
 *         body.setSleepingThresholds(linear, angular)
 * 
 */
  __pyx_v_body = ((btRigidBody *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1210
 *         """
 *         cdef btRigidBody * body = <btRigidBody *> self.thisptr
 *         body.setSleepingThresholds(linear, angular)             # <<<<<<<<<<<<<<
 * 
 *     property linearSleepingThreshold:
 */
  __pyx_v_body->setSleepingThresholds(__pyx_v_linear, __pyx_v_angular);

  /* "bullet/bullet.pyx":1205
 *         (<btRigidBody*>self.thisptr).setAngularVelocity(btang_vel)
 * 
 *     def setSleepingThresholds(self, float linear, float angular):             # <<<<<<<<<<<<<<
 *         """
 *         Set the linear and angular velocity thresholds.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1215
 *         "Body's linearSleepingThreshold."
 * 
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.getLinearSleepingThreshold()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_23linearSleepingThreshold_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_23linearSleepingThreshold_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_23linearSleepingThreshold___get__(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_23linearSleepingThreshold___get__(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "bullet/bullet.pyx":1216
 * 
 *         def __get__(self):
 *             return self.getLinearSleepingThreshold()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, float value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getLinearSleepingThreshold); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1216, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1216, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1216, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":1215
 *         "Body's linearSleepingThreshold."
 * 
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.getLinearSleepingThreshold()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.linearSleepingThreshold.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1218
 *             return self.getLinearSleepingThreshold()
 * 
 *         def __set__(self, float value):             # <<<<<<<<<<<<<<
 *             angular = self.getLinearSleepingThreshold()
 *             self.setSleepingThresholds(value, angular)
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_9RigidBody_23linearSleepingThreshold_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pw_6bullet_6bullet_9RigidBody_23linearSleepingThreshold_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  float __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsFloat(__pyx_arg_value); if (unlikely((__pyx_v_value == (float)-1) && PyErr_Occurred())) __PYX_ERR(1, 1218, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.RigidBody.linearSleepingThreshold.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_23linearSleepingThreshold_2__set__(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self), ((float)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_9RigidBody_23linearSleepingThreshold_2__set__(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, float __pyx_v_value) {
  PyObject *__pyx_v_angular = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "bullet/bullet.pyx":1219
 * 
 *         def __set__(self, float value):
 *             angular = self.getLinearSleepingThreshold()             # <<<<<<<<<<<<<<
 *             self.setSleepingThresholds(value, angular)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getLinearSleepingThreshold); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1219, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1219, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1219, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_angular = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":1220
 *         def __set__(self, float value):
 *             angular = self.getLinearSleepingThreshold()
 *             self.setSleepingThresholds(value, angular)             # <<<<<<<<<<<<<<
 * 
 *     property angularSleepingThreshold:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setSleepingThresholds); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1220, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_value); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1220, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_3, __pyx_v_angular};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1220, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_3, __pyx_v_angular};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1220, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 1220, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_3);
    __Pyx_INCREF(__pyx_v_angular);
    __Pyx_GIVEREF(__pyx_v_angular);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_angular);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1220, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":1218
 *             return self.getLinearSleepingThreshold()
 * 
 *         def __set__(self, float value):             # <<<<<<<<<<<<<<
 *             angular = self.getLinearSleepingThreshold()
 *             self.setSleepingThresholds(value, angular)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.linearSleepingThreshold.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_angular);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1225
 *         "Body's angularSleepingThreshold."
 * 
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.getAngularSleepingThreshold()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_24angularSleepingThreshold_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_24angularSleepingThreshold_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_24angularSleepingThreshold___get__(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_24angularSleepingThreshold___get__(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "bullet/bullet.pyx":1226
 * 
 *         def __get__(self):
 *             return self.getAngularSleepingThreshold()             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, float value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getAngularSleepingThreshold); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1226, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1226, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":1225
 *         "Body's angularSleepingThreshold."
 * 
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.getAngularSleepingThreshold()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.angularSleepingThreshold.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1228
 *             return self.getAngularSleepingThreshold()
 * 
 *         def __set__(self, float value):             # <<<<<<<<<<<<<<
 *             linear = self.getLinearSleepingThreshold()
 *             self.setSleepingThresholds(linear, value)
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_9RigidBody_24angularSleepingThreshold_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value); /*proto*/
static int __pyx_pw_6bullet_6bullet_9RigidBody_24angularSleepingThreshold_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_value) {
  float __pyx_v_value;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_value); {
    __pyx_v_value = __pyx_PyFloat_AsFloat(__pyx_arg_value); if (unlikely((__pyx_v_value == (float)-1) && PyErr_Occurred())) __PYX_ERR(1, 1228, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.RigidBody.angularSleepingThreshold.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_24angularSleepingThreshold_2__set__(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self), ((float)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_9RigidBody_24angularSleepingThreshold_2__set__(struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, float __pyx_v_value) {
  PyObject *__pyx_v_linear = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "bullet/bullet.pyx":1229
 * 
 *         def __set__(self, float value):
 *             linear = self.getLinearSleepingThreshold()             # <<<<<<<<<<<<<<
 *             self.setSleepingThresholds(linear, value)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getLinearSleepingThreshold); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1229, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1229, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_linear = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":1230
 *         def __set__(self, float value):
 *             linear = self.getLinearSleepingThreshold()
 *             self.setSleepingThresholds(linear, value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setSleepingThresholds); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1230, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_value); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1230, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_v_linear, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1230, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_v_linear, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1230, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 1230, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_INCREF(__pyx_v_linear);
    __Pyx_GIVEREF(__pyx_v_linear);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_linear);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1230, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":1228
 *             return self.getAngularSleepingThreshold()
 * 
 *         def __set__(self, float value):             # <<<<<<<<<<<<<<
 *             linear = self.getLinearSleepingThreshold()
 *             self.setSleepingThresholds(linear, value)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.angularSleepingThreshold.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_linear);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_47__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_47__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_46__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_46__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__47, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_49__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9RigidBody_49__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RigidBody_48__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_48__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__48, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1244
 *     cdef btActionInterface *thisptr
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_6bullet_6bullet_15ActionInterface_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6bullet_6bullet_15ActionInterface_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6bullet_6bullet_15ActionInterface___dealloc__(((struct __pyx_obj_6bullet_6bullet_ActionInterface *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6bullet_6bullet_15ActionInterface___dealloc__(struct __pyx_obj_6bullet_6bullet_ActionInterface *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "bullet/bullet.pyx":1245
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete __pyx_v_self->thisptr;

  /* "bullet/bullet.pyx":1244
 *     cdef btActionInterface *thisptr
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15ActionInterface_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_15ActionInterface_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_15ActionInterface_2__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_ActionInterface *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15ActionInterface_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_ActionInterface *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__49, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.ActionInterface.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_15ActionInterface_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_15ActionInterface_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_15ActionInterface_4__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_ActionInterface *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_15ActionInterface_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_ActionInterface *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__50, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.ActionInterface.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1259
 *     XXX THIS WRAPPER MAY CAUSE SEGFAULTS.  Use a subclass instead.
 *     """
 *     def setWalkDirection(self, Vector3 walkDirection):             # <<<<<<<<<<<<<<
 *         """
 *         Set the movement direction for this CharacterControllerInterface.  The
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_28CharacterControllerInterface_1setWalkDirection(PyObject *__pyx_v_self, PyObject *__pyx_v_walkDirection); /*proto*/
static char __pyx_doc_6bullet_6bullet_28CharacterControllerInterface_setWalkDirection[] = "\n        Set the movement direction for this CharacterControllerInterface.  The\n        magnitude and the direction of the given walkDirection will determine\n        how this object moves in the world.\n\n        Calling setWalkDirection will cause a previous call to\n        setVelocityForTimeInterval to be disregarded.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_28CharacterControllerInterface_1setWalkDirection(PyObject *__pyx_v_self, PyObject *__pyx_v_walkDirection) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setWalkDirection (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_walkDirection), __pyx_ptype_6bullet_6bullet_Vector3, 1, "walkDirection", 0))) __PYX_ERR(1, 1259, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_28CharacterControllerInterface_setWalkDirection(((struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_walkDirection));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_28CharacterControllerInterface_setWalkDirection(struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_walkDirection) {
  btCharacterControllerInterface *__pyx_v_controller;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setWalkDirection", 0);

  /* "bullet/bullet.pyx":1269
 *         """
 *         cdef btCharacterControllerInterface *controller
 *         controller = <btCharacterControllerInterface*>self.thisptr             # <<<<<<<<<<<<<<
 *         controller.setWalkDirection(
 *             btVector3(walkDirection.x, walkDirection.y, walkDirection.z))
 */
  __pyx_v_controller = ((btCharacterControllerInterface *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1270
 *         cdef btCharacterControllerInterface *controller
 *         controller = <btCharacterControllerInterface*>self.thisptr
 *         controller.setWalkDirection(             # <<<<<<<<<<<<<<
 *             btVector3(walkDirection.x, walkDirection.y, walkDirection.z))
 * 
 */
  __pyx_v_controller->setWalkDirection(btVector3(__pyx_v_walkDirection->x, __pyx_v_walkDirection->y, __pyx_v_walkDirection->z));

  /* "bullet/bullet.pyx":1259
 *     XXX THIS WRAPPER MAY CAUSE SEGFAULTS.  Use a subclass instead.
 *     """
 *     def setWalkDirection(self, Vector3 walkDirection):             # <<<<<<<<<<<<<<
 *         """
 *         Set the movement direction for this CharacterControllerInterface.  The
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1274
 * 
 * 
 *     def setVelocityForTimeInterval(self,             # <<<<<<<<<<<<<<
 *                                    Vector3 velocity not None,
 *                                    btScalar timeInterval):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_28CharacterControllerInterface_3setVelocityForTimeInterval(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_28CharacterControllerInterface_2setVelocityForTimeInterval[] = "\n        Set the movement direction for this CharacterControllerInterface.  The\n        direction of the given velocity will determine the direction of this\n        object's movement in the world, while the timeInterval will determine\n        the rate of movement.\n\n        Calling setVelocityForTimeInterval will cause a previous call to\n        setWalkDirection to be disregarded.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_28CharacterControllerInterface_3setVelocityForTimeInterval(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_velocity = 0;
  btScalar __pyx_v_timeInterval;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setVelocityForTimeInterval (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_velocity,&__pyx_n_s_timeInterval,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_velocity)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_timeInterval)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("setVelocityForTimeInterval", 1, 2, 2, 1); __PYX_ERR(1, 1274, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setVelocityForTimeInterval") < 0)) __PYX_ERR(1, 1274, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_velocity = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
    __pyx_v_timeInterval = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_timeInterval == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 1276, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setVelocityForTimeInterval", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1274, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CharacterControllerInterface.setVelocityForTimeInterval", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_velocity), __pyx_ptype_6bullet_6bullet_Vector3, 0, "velocity", 0))) __PYX_ERR(1, 1275, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_28CharacterControllerInterface_2setVelocityForTimeInterval(((struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface *)__pyx_v_self), __pyx_v_velocity, __pyx_v_timeInterval);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_28CharacterControllerInterface_2setVelocityForTimeInterval(struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_velocity, btScalar __pyx_v_timeInterval) {
  btCharacterControllerInterface *__pyx_v_controller;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setVelocityForTimeInterval", 0);

  /* "bullet/bullet.pyx":1287
 *         """
 *         cdef btCharacterControllerInterface *controller
 *         controller = <btCharacterControllerInterface*>self.thisptr             # <<<<<<<<<<<<<<
 *         controller.setVelocityForTimeInterval(
 *             btVector3(velocity.x, velocity.y, velocity.z), timeInterval)
 */
  __pyx_v_controller = ((btCharacterControllerInterface *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1288
 *         cdef btCharacterControllerInterface *controller
 *         controller = <btCharacterControllerInterface*>self.thisptr
 *         controller.setVelocityForTimeInterval(             # <<<<<<<<<<<<<<
 *             btVector3(velocity.x, velocity.y, velocity.z), timeInterval)
 * 
 */
  __pyx_v_controller->setVelocityForTimeInterval(btVector3(__pyx_v_velocity->x, __pyx_v_velocity->y, __pyx_v_velocity->z), __pyx_v_timeInterval);

  /* "bullet/bullet.pyx":1274
 * 
 * 
 *     def setVelocityForTimeInterval(self,             # <<<<<<<<<<<<<<
 *                                    Vector3 velocity not None,
 *                                    btScalar timeInterval):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_28CharacterControllerInterface_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_28CharacterControllerInterface_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_28CharacterControllerInterface_4__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_28CharacterControllerInterface_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__51, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CharacterControllerInterface.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_28CharacterControllerInterface_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_28CharacterControllerInterface_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_28CharacterControllerInterface_6__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_28CharacterControllerInterface_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__52, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CharacterControllerInterface.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1300
 *      This class is a wrapper around btPairCachingGhostObject.
 *      """
 *      def __init__(self):             # <<<<<<<<<<<<<<
 *          self.thisptr = new btPairCachingGhostObject()
 * 
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_22PairCachingGhostObject_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_22PairCachingGhostObject_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_6bullet_6bullet_22PairCachingGhostObject___init__(((struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_22PairCachingGhostObject___init__(struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  btPairCachingGhostObject *__pyx_t_1;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "bullet/bullet.pyx":1301
 *      """
 *      def __init__(self):
 *          self.thisptr = new btPairCachingGhostObject()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  try {
    __pyx_t_1 = new btPairCachingGhostObject();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 1301, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.thisptr = __pyx_t_1;

  /* "bullet/bullet.pyx":1300
 *      This class is a wrapper around btPairCachingGhostObject.
 *      """
 *      def __init__(self):             # <<<<<<<<<<<<<<
 *          self.thisptr = new btPairCachingGhostObject()
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.PairCachingGhostObject.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_22PairCachingGhostObject_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_22PairCachingGhostObject_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_22PairCachingGhostObject_2__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_22PairCachingGhostObject_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__53, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.PairCachingGhostObject.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_22PairCachingGhostObject_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_22PairCachingGhostObject_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_22PairCachingGhostObject_4__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_22PairCachingGhostObject_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__54, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.PairCachingGhostObject.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1318
 *     cdef readonly PairCachingGhostObject ghost
 * 
 *     def __init__(self, PairCachingGhostObject ghost not None, float stepHeight, Vector3 upAxis):             # <<<<<<<<<<<<<<
 *         self.ghost = ghost
 *         # XXX ghost must have a shape and it must not change after this
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_28KinematicCharacterController_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_28KinematicCharacterController_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *__pyx_v_ghost = 0;
  float __pyx_v_stepHeight;
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_upAxis = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ghost,&__pyx_n_s_stepHeight,&__pyx_n_s_upAxis,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_ghost)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_stepHeight)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 1); __PYX_ERR(1, 1318, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_upAxis)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 2); __PYX_ERR(1, 1318, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(1, 1318, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_ghost = ((struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *)values[0]);
    __pyx_v_stepHeight = __pyx_PyFloat_AsFloat(values[1]); if (unlikely((__pyx_v_stepHeight == (float)-1) && PyErr_Occurred())) __PYX_ERR(1, 1318, __pyx_L3_error)
    __pyx_v_upAxis = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1318, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.KinematicCharacterController.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_ghost), __pyx_ptype_6bullet_6bullet_PairCachingGhostObject, 0, "ghost", 0))) __PYX_ERR(1, 1318, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_upAxis), __pyx_ptype_6bullet_6bullet_Vector3, 1, "upAxis", 0))) __PYX_ERR(1, 1318, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_28KinematicCharacterController___init__(((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)__pyx_v_self), __pyx_v_ghost, __pyx_v_stepHeight, __pyx_v_upAxis);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_28KinematicCharacterController___init__(struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *__pyx_v_ghost, float __pyx_v_stepHeight, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_upAxis) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "bullet/bullet.pyx":1319
 * 
 *     def __init__(self, PairCachingGhostObject ghost not None, float stepHeight, Vector3 upAxis):
 *         self.ghost = ghost             # <<<<<<<<<<<<<<
 *         # XXX ghost must have a shape and it must not change after this
 *         self.thisptr = new btKinematicCharacterController(
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_ghost));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_ghost));
  __Pyx_GOTREF(__pyx_v_self->ghost);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->ghost));
  __pyx_v_self->ghost = __pyx_v_ghost;

  /* "bullet/bullet.pyx":1321
 *         self.ghost = ghost
 *         # XXX ghost must have a shape and it must not change after this
 *         self.thisptr = new btKinematicCharacterController(             # <<<<<<<<<<<<<<
 *             <btPairCachingGhostObject*>self.ghost.thisptr,
 *             <btConvexShape*>self.ghost._shape.thisptr, stepHeight, upAxis.tobtVector3())
 */
  __pyx_v_self->__pyx_base.__pyx_base.thisptr = new btKinematicCharacterController(((btPairCachingGhostObject *)__pyx_v_self->ghost->__pyx_base.thisptr), ((btConvexShape *)__pyx_v_self->ghost->__pyx_base._shape->thisptr), __pyx_v_stepHeight, ((struct __pyx_vtabstruct_6bullet_6bullet_Vector3 *)__pyx_v_upAxis->__pyx_vtab)->tobtVector3(__pyx_v_upAxis));

  /* "bullet/bullet.pyx":1318
 *     cdef readonly PairCachingGhostObject ghost
 * 
 *     def __init__(self, PairCachingGhostObject ghost not None, float stepHeight, Vector3 upAxis):             # <<<<<<<<<<<<<<
 *         self.ghost = ghost
 *         # XXX ghost must have a shape and it must not change after this
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1326
 * 
 * 
 *     def warp(self, Vector3 origin not None):             # <<<<<<<<<<<<<<
 *         """
 *         Change the location of this object to the given point without traversing
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_28KinematicCharacterController_3warp(PyObject *__pyx_v_self, PyObject *__pyx_v_origin); /*proto*/
static char __pyx_doc_6bullet_6bullet_28KinematicCharacterController_2warp[] = "\n        Change the location of this object to the given point without traversing\n        the intermediate distance.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_28KinematicCharacterController_3warp(PyObject *__pyx_v_self, PyObject *__pyx_v_origin) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("warp (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_origin), __pyx_ptype_6bullet_6bullet_Vector3, 0, "origin", 0))) __PYX_ERR(1, 1326, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_28KinematicCharacterController_2warp(((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_origin));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_28KinematicCharacterController_2warp(struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_origin) {
  btKinematicCharacterController *__pyx_v_controller;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("warp", 0);

  /* "bullet/bullet.pyx":1332
 *         """
 *         cdef btKinematicCharacterController *controller
 *         controller = <btKinematicCharacterController*>self.thisptr             # <<<<<<<<<<<<<<
 *         controller.warp(btVector3(origin.x, origin.y, origin.z))
 * 
 */
  __pyx_v_controller = ((btKinematicCharacterController *)__pyx_v_self->__pyx_base.__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1333
 *         cdef btKinematicCharacterController *controller
 *         controller = <btKinematicCharacterController*>self.thisptr
 *         controller.warp(btVector3(origin.x, origin.y, origin.z))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_controller->warp(btVector3(__pyx_v_origin->x, __pyx_v_origin->y, __pyx_v_origin->z));

  /* "bullet/bullet.pyx":1326
 * 
 * 
 *     def warp(self, Vector3 origin not None):             # <<<<<<<<<<<<<<
 *         """
 *         Change the location of this object to the given point without traversing
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1336
 * 
 * 
 *     def getGravity(self):             # <<<<<<<<<<<<<<
 *         """
 *         Retrieve the gravity which affects this character.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_28KinematicCharacterController_5getGravity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_28KinematicCharacterController_4getGravity[] = "\n        Retrieve the gravity which affects this character.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_28KinematicCharacterController_5getGravity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getGravity (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_28KinematicCharacterController_4getGravity(((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_28KinematicCharacterController_4getGravity(struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *__pyx_v_self) {
  btKinematicCharacterController *__pyx_v_controller;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getGravity", 0);

  /* "bullet/bullet.pyx":1341
 *         """
 *         cdef btKinematicCharacterController *controller
 *         controller = <btKinematicCharacterController*>self.thisptr             # <<<<<<<<<<<<<<
 *         return Vector3.frombtVector3(controller.getGravity())
 * 
 */
  __pyx_v_controller = ((btKinematicCharacterController *)__pyx_v_self->__pyx_base.__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1342
 *         cdef btKinematicCharacterController *controller
 *         controller = <btKinematicCharacterController*>self.thisptr
 *         return Vector3.frombtVector3(controller.getGravity())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_6bullet_6bullet_7Vector3_frombtVector3(__pyx_v_controller->getGravity()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1342, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":1336
 * 
 * 
 *     def getGravity(self):             # <<<<<<<<<<<<<<
 *         """
 *         Retrieve the gravity which affects this character.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.KinematicCharacterController.getGravity", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1345
 * 
 * 
 *     def setGravity(self, Vector3 gravity):             # <<<<<<<<<<<<<<
 *         """
 *         Specify the gravity which affects this character.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_28KinematicCharacterController_7setGravity(PyObject *__pyx_v_self, PyObject *__pyx_v_gravity); /*proto*/
static char __pyx_doc_6bullet_6bullet_28KinematicCharacterController_6setGravity[] = "\n        Specify the gravity which affects this character.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_28KinematicCharacterController_7setGravity(PyObject *__pyx_v_self, PyObject *__pyx_v_gravity) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setGravity (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_gravity), __pyx_ptype_6bullet_6bullet_Vector3, 1, "gravity", 0))) __PYX_ERR(1, 1345, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_28KinematicCharacterController_6setGravity(((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_gravity));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_28KinematicCharacterController_6setGravity(struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_gravity) {
  btKinematicCharacterController *__pyx_v_controller;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setGravity", 0);

  /* "bullet/bullet.pyx":1350
 *         """
 *         cdef btKinematicCharacterController *controller
 *         controller = <btKinematicCharacterController*>self.thisptr             # <<<<<<<<<<<<<<
 *         controller.setGravity(gravity.tobtVector3())
 * 
 */
  __pyx_v_controller = ((btKinematicCharacterController *)__pyx_v_self->__pyx_base.__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1351
 *         cdef btKinematicCharacterController *controller
 *         controller = <btKinematicCharacterController*>self.thisptr
 *         controller.setGravity(gravity.tobtVector3())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_controller->setGravity(((struct __pyx_vtabstruct_6bullet_6bullet_Vector3 *)__pyx_v_gravity->__pyx_vtab)->tobtVector3(__pyx_v_gravity));

  /* "bullet/bullet.pyx":1345
 * 
 * 
 *     def setGravity(self, Vector3 gravity):             # <<<<<<<<<<<<<<
 *         """
 *         Specify the gravity which affects this character.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1316
 *     cdef object __weakref__
 * 
 *     cdef readonly PairCachingGhostObject ghost             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, PairCachingGhostObject ghost not None, float stepHeight, Vector3 upAxis):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_28KinematicCharacterController_5ghost_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_28KinematicCharacterController_5ghost_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_28KinematicCharacterController_5ghost___get__(((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_28KinematicCharacterController_5ghost___get__(struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->ghost));
  __pyx_r = ((PyObject *)__pyx_v_self->ghost);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_28KinematicCharacterController_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_28KinematicCharacterController_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_28KinematicCharacterController_8__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_28KinematicCharacterController_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__55, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.KinematicCharacterController.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_28KinematicCharacterController_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_28KinematicCharacterController_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_28KinematicCharacterController_10__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_28KinematicCharacterController_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__56, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.KinematicCharacterController.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1371
 *     cdef btDispatcher *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         # XXX btDefaultCollisionConfiguration leaks I suppose.
 *         self.config = new btDefaultCollisionConfiguration()
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_19CollisionDispatcher_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_19CollisionDispatcher_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6bullet_6bullet_19CollisionDispatcher___cinit__(((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_19CollisionDispatcher___cinit__(struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  btDefaultCollisionConfiguration *__pyx_t_1;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bullet/bullet.pyx":1373
 *     def __cinit__(self):
 *         # XXX btDefaultCollisionConfiguration leaks I suppose.
 *         self.config = new btDefaultCollisionConfiguration()             # <<<<<<<<<<<<<<
 *         self.thisptr = new btCollisionDispatcher(self.config)
 * 
 */
  try {
    __pyx_t_1 = new btDefaultCollisionConfiguration();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 1373, __pyx_L1_error)
  }
  __pyx_v_self->config = __pyx_t_1;

  /* "bullet/bullet.pyx":1374
 *         # XXX btDefaultCollisionConfiguration leaks I suppose.
 *         self.config = new btDefaultCollisionConfiguration()
 *         self.thisptr = new btCollisionDispatcher(self.config)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr = new btCollisionDispatcher(__pyx_v_self->config);

  /* "bullet/bullet.pyx":1371
 *     cdef btDispatcher *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         # XXX btDefaultCollisionConfiguration leaks I suppose.
 *         self.config = new btDefaultCollisionConfiguration()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionDispatcher.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1377
 * 
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *         del self.config
 */

/* Python wrapper */
static void __pyx_pw_6bullet_6bullet_19CollisionDispatcher_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6bullet_6bullet_19CollisionDispatcher_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6bullet_6bullet_19CollisionDispatcher_2__dealloc__(((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6bullet_6bullet_19CollisionDispatcher_2__dealloc__(struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "bullet/bullet.pyx":1378
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 *         del self.config
 * 
 */
  delete __pyx_v_self->thisptr;

  /* "bullet/bullet.pyx":1379
 *     def __dealloc__(self):
 *         del self.thisptr
 *         del self.config             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete __pyx_v_self->config;

  /* "bullet/bullet.pyx":1377
 * 
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *         del self.config
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_19CollisionDispatcher_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_19CollisionDispatcher_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_19CollisionDispatcher_4__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_19CollisionDispatcher_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__57, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionDispatcher.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_19CollisionDispatcher_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_19CollisionDispatcher_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_19CollisionDispatcher_6__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_19CollisionDispatcher_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__58, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionDispatcher.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1394
 *     cdef btOverlappingPairCache *thisptr
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_6bullet_6bullet_20OverlappingPairCache_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6bullet_6bullet_20OverlappingPairCache_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6bullet_6bullet_20OverlappingPairCache___dealloc__(((struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6bullet_6bullet_20OverlappingPairCache___dealloc__(struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "bullet/bullet.pyx":1395
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete __pyx_v_self->thisptr;

  /* "bullet/bullet.pyx":1394
 *     cdef btOverlappingPairCache *thisptr
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "bullet/bullet.pyx":1398
 * 
 * 
 *     def setInternalGhostPairCallback(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set the internal ghost pair callback to a new btGhostPairCallback.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_20OverlappingPairCache_3setInternalGhostPairCallback(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_20OverlappingPairCache_2setInternalGhostPairCallback[] = "\n        Set the internal ghost pair callback to a new btGhostPairCallback.\n\n        The corresponding C++ API accepts the callback as a parameter.  This API\n        can do that when I learn why you would ever pass something other than a\n        new btGhostPairCallback.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_20OverlappingPairCache_3setInternalGhostPairCallback(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setInternalGhostPairCallback (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_20OverlappingPairCache_2setInternalGhostPairCallback(((struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_20OverlappingPairCache_2setInternalGhostPairCallback(struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  btGhostPairCallback *__pyx_t_1;
  __Pyx_RefNannySetupContext("setInternalGhostPairCallback", 0);

  /* "bullet/bullet.pyx":1406
 *         new btGhostPairCallback.
 *         """
 *         self.thisptr.setInternalGhostPairCallback(new btGhostPairCallback())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  try {
    __pyx_t_1 = new btGhostPairCallback();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 1406, __pyx_L1_error)
  }
  __pyx_v_self->thisptr->setInternalGhostPairCallback(__pyx_t_1);

  /* "bullet/bullet.pyx":1398
 * 
 * 
 *     def setInternalGhostPairCallback(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set the internal ghost pair callback to a new btGhostPairCallback.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.OverlappingPairCache.setInternalGhostPairCallback", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_20OverlappingPairCache_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_20OverlappingPairCache_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_20OverlappingPairCache_4__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_20OverlappingPairCache_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__59, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.OverlappingPairCache.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_20OverlappingPairCache_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_20OverlappingPairCache_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_20OverlappingPairCache_6__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_20OverlappingPairCache_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__60, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.OverlappingPairCache.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1417
 *     This class is a wrapper around btHashedOverlappingPairCache.
 *     """
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btHashedOverlappingPairCache()
 * 
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_26HashedOverlappingPairCache_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_26HashedOverlappingPairCache_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6bullet_6bullet_26HashedOverlappingPairCache___cinit__(((struct __pyx_obj_6bullet_6bullet_HashedOverlappingPairCache *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_26HashedOverlappingPairCache___cinit__(struct __pyx_obj_6bullet_6bullet_HashedOverlappingPairCache *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  btHashedOverlappingPairCache *__pyx_t_1;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bullet/bullet.pyx":1418
 *     """
 *     def __cinit__(self):
 *         self.thisptr = new btHashedOverlappingPairCache()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  try {
    __pyx_t_1 = new btHashedOverlappingPairCache();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 1418, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.thisptr = __pyx_t_1;

  /* "bullet/bullet.pyx":1417
 *     This class is a wrapper around btHashedOverlappingPairCache.
 *     """
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btHashedOverlappingPairCache()
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.HashedOverlappingPairCache.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_26HashedOverlappingPairCache_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_26HashedOverlappingPairCache_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_26HashedOverlappingPairCache_2__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_HashedOverlappingPairCache *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_26HashedOverlappingPairCache_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_HashedOverlappingPairCache *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__61, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.HashedOverlappingPairCache.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_26HashedOverlappingPairCache_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_26HashedOverlappingPairCache_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_26HashedOverlappingPairCache_4__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_HashedOverlappingPairCache *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_26HashedOverlappingPairCache_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_HashedOverlappingPairCache *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__62, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.HashedOverlappingPairCache.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1436
 *     cdef readonly OverlappingPairCache _paircache
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_6bullet_6bullet_19BroadphaseInterface_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6bullet_6bullet_19BroadphaseInterface_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6bullet_6bullet_19BroadphaseInterface___dealloc__(((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6bullet_6bullet_19BroadphaseInterface___dealloc__(struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "bullet/bullet.pyx":1437
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete __pyx_v_self->thisptr;

  /* "bullet/bullet.pyx":1436
 *     cdef readonly OverlappingPairCache _paircache
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "bullet/bullet.pyx":1440
 * 
 * 
 *     def getOverlappingPairCache(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the OverlappingPairCache used by this BroadphaseInterface.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_19BroadphaseInterface_3getOverlappingPairCache(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_19BroadphaseInterface_2getOverlappingPairCache[] = "\n        Return the OverlappingPairCache used by this BroadphaseInterface.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_19BroadphaseInterface_3getOverlappingPairCache(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getOverlappingPairCache (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_19BroadphaseInterface_2getOverlappingPairCache(((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_19BroadphaseInterface_2getOverlappingPairCache(struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getOverlappingPairCache", 0);

  /* "bullet/bullet.pyx":1445
 *         """
 *         # Subclasses must take care to set this during their initialization.
 *         return self._paircache             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->_paircache));
  __pyx_r = ((PyObject *)__pyx_v_self->_paircache);
  goto __pyx_L0;

  /* "bullet/bullet.pyx":1440
 * 
 * 
 *     def getOverlappingPairCache(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the OverlappingPairCache used by this BroadphaseInterface.
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1434
 *     """
 *     cdef btBroadphaseInterface *thisptr
 *     cdef readonly OverlappingPairCache _paircache             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_19BroadphaseInterface_10_paircache_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_19BroadphaseInterface_10_paircache_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_19BroadphaseInterface_10_paircache___get__(((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_19BroadphaseInterface_10_paircache___get__(struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->_paircache));
  __pyx_r = ((PyObject *)__pyx_v_self->_paircache);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_19BroadphaseInterface_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_19BroadphaseInterface_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_19BroadphaseInterface_4__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_19BroadphaseInterface_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__63, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.BroadphaseInterface.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_19BroadphaseInterface_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_19BroadphaseInterface_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_19BroadphaseInterface_6__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_19BroadphaseInterface_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__64, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.BroadphaseInterface.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1458
 *     This class is a wrapper around btAxisSweep3.
 *     """
 *     def __cinit__(self, Vector3 lower, Vector3 upper):             # <<<<<<<<<<<<<<
 *         # XXX Will ~btAxisSweep3 segfault when it runs after
 *         # ~btHashedOverlappingPairCache?
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_10AxisSweep3_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_10AxisSweep3_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_lower = 0;
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_upper = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_lower,&__pyx_n_s_upper,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_lower)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_upper)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); __PYX_ERR(1, 1458, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(1, 1458, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_lower = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
    __pyx_v_upper = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1458, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.AxisSweep3.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_lower), __pyx_ptype_6bullet_6bullet_Vector3, 1, "lower", 0))) __PYX_ERR(1, 1458, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_upper), __pyx_ptype_6bullet_6bullet_Vector3, 1, "upper", 0))) __PYX_ERR(1, 1458, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_10AxisSweep3___cinit__(((struct __pyx_obj_6bullet_6bullet_AxisSweep3 *)__pyx_v_self), __pyx_v_lower, __pyx_v_upper);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_10AxisSweep3___cinit__(struct __pyx_obj_6bullet_6bullet_AxisSweep3 *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_lower, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_upper) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bullet/bullet.pyx":1461
 *         # XXX Will ~btAxisSweep3 segfault when it runs after
 *         # ~btHashedOverlappingPairCache?
 *         self._paircache = HashedOverlappingPairCache()             # <<<<<<<<<<<<<<
 *         self.thisptr = new btAxisSweep3(
 *             btVector3(lower.x, lower.y, lower.z),
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_HashedOverlappingPairCache), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1461, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->__pyx_base._paircache);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->__pyx_base._paircache));
  __pyx_v_self->__pyx_base._paircache = ((struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":1462
 *         # ~btHashedOverlappingPairCache?
 *         self._paircache = HashedOverlappingPairCache()
 *         self.thisptr = new btAxisSweep3(             # <<<<<<<<<<<<<<
 *             btVector3(lower.x, lower.y, lower.z),
 *             btVector3(upper.x, upper.y, upper.z),
 */
  __pyx_v_self->__pyx_base.thisptr = new btAxisSweep3(btVector3(__pyx_v_lower->x, __pyx_v_lower->y, __pyx_v_lower->z), btVector3(__pyx_v_upper->x, __pyx_v_upper->y, __pyx_v_upper->z), 0x4000, __pyx_v_self->__pyx_base._paircache->thisptr, 0);

  /* "bullet/bullet.pyx":1458
 *     This class is a wrapper around btAxisSweep3.
 *     """
 *     def __cinit__(self, Vector3 lower, Vector3 upper):             # <<<<<<<<<<<<<<
 *         # XXX Will ~btAxisSweep3 segfault when it runs after
 *         # ~btHashedOverlappingPairCache?
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.AxisSweep3.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_10AxisSweep3_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_10AxisSweep3_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_10AxisSweep3_2__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_AxisSweep3 *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_10AxisSweep3_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_AxisSweep3 *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__65, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.AxisSweep3.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_10AxisSweep3_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_10AxisSweep3_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_10AxisSweep3_4__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_AxisSweep3 *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_10AxisSweep3_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_AxisSweep3 *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__66, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.AxisSweep3.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1479
 *     cdef btConstraintSolver *thisptr
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_6bullet_6bullet_16ConstraintSolver_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6bullet_6bullet_16ConstraintSolver_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6bullet_6bullet_16ConstraintSolver___dealloc__(((struct __pyx_obj_6bullet_6bullet_ConstraintSolver *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6bullet_6bullet_16ConstraintSolver___dealloc__(struct __pyx_obj_6bullet_6bullet_ConstraintSolver *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "bullet/bullet.pyx":1480
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete __pyx_v_self->thisptr;

  /* "bullet/bullet.pyx":1479
 *     cdef btConstraintSolver *thisptr
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_16ConstraintSolver_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_16ConstraintSolver_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_16ConstraintSolver_2__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_ConstraintSolver *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_16ConstraintSolver_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_ConstraintSolver *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__67, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.ConstraintSolver.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_16ConstraintSolver_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_16ConstraintSolver_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_16ConstraintSolver_4__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_ConstraintSolver *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_16ConstraintSolver_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_ConstraintSolver *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__68, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.ConstraintSolver.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1495
 *     This class is a wrapper around btSequentialImpulseConstraintSolver.
 *     """
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btSequentialImpulseConstraintSolver()
 * 
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_33SequentialImpulseConstraintSolver_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_33SequentialImpulseConstraintSolver_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6bullet_6bullet_33SequentialImpulseConstraintSolver___cinit__(((struct __pyx_obj_6bullet_6bullet_SequentialImpulseConstraintSolver *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_33SequentialImpulseConstraintSolver___cinit__(struct __pyx_obj_6bullet_6bullet_SequentialImpulseConstraintSolver *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bullet/bullet.pyx":1496
 *     """
 *     def __cinit__(self):
 *         self.thisptr = new btSequentialImpulseConstraintSolver()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->__pyx_base.thisptr = new btSequentialImpulseConstraintSolver();

  /* "bullet/bullet.pyx":1495
 *     This class is a wrapper around btSequentialImpulseConstraintSolver.
 *     """
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btSequentialImpulseConstraintSolver()
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_33SequentialImpulseConstraintSolver_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_33SequentialImpulseConstraintSolver_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_33SequentialImpulseConstraintSolver_2__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_SequentialImpulseConstraintSolver *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_33SequentialImpulseConstraintSolver_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_SequentialImpulseConstraintSolver *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__69, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.SequentialImpulseConstraintSolver.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_33SequentialImpulseConstraintSolver_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_33SequentialImpulseConstraintSolver_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_33SequentialImpulseConstraintSolver_4__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_SequentialImpulseConstraintSolver *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_33SequentialImpulseConstraintSolver_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_SequentialImpulseConstraintSolver *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__70, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.SequentialImpulseConstraintSolver.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1515
 *     cdef _object *broadphase
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None):
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_14CollisionWorld_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_14CollisionWorld_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *__pyx_v_dispatcher = 0;
  struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *__pyx_v_broadphase = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dispatcher,&__pyx_n_s_broadphase,0};
    PyObject* values[2] = {0,0};

    /* "bullet/bullet.pyx":1516
 * 
 *     def __init__(self,
 *                  CollisionDispatcher dispatcher = None,             # <<<<<<<<<<<<<<
 *                  BroadphaseInterface broadphase = None):
 *         if dispatcher is None:
 */
    values[0] = (PyObject *)((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)Py_None);

    /* "bullet/bullet.pyx":1517
 *     def __init__(self,
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None):             # <<<<<<<<<<<<<<
 *         if dispatcher is None:
 *             dispatcher = CollisionDispatcher()
 */
    values[1] = (PyObject *)((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dispatcher);
          if (value) { values[0] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_broadphase);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(1, 1515, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_dispatcher = ((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)values[0]);
    __pyx_v_broadphase = ((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1515, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionWorld.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_dispatcher), __pyx_ptype_6bullet_6bullet_CollisionDispatcher, 1, "dispatcher", 0))) __PYX_ERR(1, 1516, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_broadphase), __pyx_ptype_6bullet_6bullet_BroadphaseInterface, 1, "broadphase", 0))) __PYX_ERR(1, 1517, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_14CollisionWorld___init__(((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self), __pyx_v_dispatcher, __pyx_v_broadphase);

  /* "bullet/bullet.pyx":1515
 *     cdef _object *broadphase
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None):
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_14CollisionWorld___init__(struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *__pyx_v_dispatcher, struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *__pyx_v_broadphase) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_dispatcher);
  __Pyx_INCREF((PyObject *)__pyx_v_broadphase);

  /* "bullet/bullet.pyx":1518
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None):
 *         if dispatcher is None:             # <<<<<<<<<<<<<<
 *             dispatcher = CollisionDispatcher()
 *         if broadphase is None:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_dispatcher) == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "bullet/bullet.pyx":1519
 *                  BroadphaseInterface broadphase = None):
 *         if dispatcher is None:
 *             dispatcher = CollisionDispatcher()             # <<<<<<<<<<<<<<
 *         if broadphase is None:
 *             broadphase = AxisSweep3(Vector3(0, 0, 0), Vector3(10, 10, 10))
 */
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_CollisionDispatcher), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1519, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_dispatcher, ((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "bullet/bullet.pyx":1518
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None):
 *         if dispatcher is None:             # <<<<<<<<<<<<<<
 *             dispatcher = CollisionDispatcher()
 *         if broadphase is None:
 */
  }

  /* "bullet/bullet.pyx":1520
 *         if dispatcher is None:
 *             dispatcher = CollisionDispatcher()
 *         if broadphase is None:             # <<<<<<<<<<<<<<
 *             broadphase = AxisSweep3(Vector3(0, 0, 0), Vector3(10, 10, 10))
 * 
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_broadphase) == Py_None);
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "bullet/bullet.pyx":1521
 *             dispatcher = CollisionDispatcher()
 *         if broadphase is None:
 *             broadphase = AxisSweep3(Vector3(0, 0, 0), Vector3(10, 10, 10))             # <<<<<<<<<<<<<<
 * 
 *         Py_INCREF(dispatcher)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Vector3), __pyx_tuple__71, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1521, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Vector3), __pyx_tuple__72, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1521, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1521, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_AxisSweep3), __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1521, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_broadphase, ((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "bullet/bullet.pyx":1520
 *         if dispatcher is None:
 *             dispatcher = CollisionDispatcher()
 *         if broadphase is None:             # <<<<<<<<<<<<<<
 *             broadphase = AxisSweep3(Vector3(0, 0, 0), Vector3(10, 10, 10))
 * 
 */
  }

  /* "bullet/bullet.pyx":1523
 *             broadphase = AxisSweep3(Vector3(0, 0, 0), Vector3(10, 10, 10))
 * 
 *         Py_INCREF(dispatcher)             # <<<<<<<<<<<<<<
 *         self.dispatcher = <_object*>dispatcher
 * 
 */
  Py_INCREF(((PyObject *)__pyx_v_dispatcher));

  /* "bullet/bullet.pyx":1524
 * 
 *         Py_INCREF(dispatcher)
 *         self.dispatcher = <_object*>dispatcher             # <<<<<<<<<<<<<<
 * 
 *         Py_INCREF(broadphase)
 */
  __pyx_v_self->dispatcher = ((struct _object *)__pyx_v_dispatcher);

  /* "bullet/bullet.pyx":1526
 *         self.dispatcher = <_object*>dispatcher
 * 
 *         Py_INCREF(broadphase)             # <<<<<<<<<<<<<<
 *         self.broadphase = <_object*>broadphase
 * 
 */
  Py_INCREF(((PyObject *)__pyx_v_broadphase));

  /* "bullet/bullet.pyx":1527
 * 
 *         Py_INCREF(broadphase)
 *         self.broadphase = <_object*>broadphase             # <<<<<<<<<<<<<<
 * 
 *         # Allow subclasses to initialize this differently.
 */
  __pyx_v_self->broadphase = ((struct _object *)__pyx_v_broadphase);

  /* "bullet/bullet.pyx":1530
 * 
 *         # Allow subclasses to initialize this differently.
 *         if self.thisptr == NULL:             # <<<<<<<<<<<<<<
 *             self.thisptr = new btCollisionWorld(
 *                 dispatcher.thisptr, broadphase.thisptr, dispatcher.config)
 */
  __pyx_t_1 = ((__pyx_v_self->thisptr == NULL) != 0);
  if (__pyx_t_1) {

    /* "bullet/bullet.pyx":1531
 *         # Allow subclasses to initialize this differently.
 *         if self.thisptr == NULL:
 *             self.thisptr = new btCollisionWorld(             # <<<<<<<<<<<<<<
 *                 dispatcher.thisptr, broadphase.thisptr, dispatcher.config)
 * 
 */
    __pyx_v_self->thisptr = new btCollisionWorld(__pyx_v_dispatcher->thisptr, __pyx_v_broadphase->thisptr, __pyx_v_dispatcher->config);

    /* "bullet/bullet.pyx":1530
 * 
 *         # Allow subclasses to initialize this differently.
 *         if self.thisptr == NULL:             # <<<<<<<<<<<<<<
 *             self.thisptr = new btCollisionWorld(
 *                 dispatcher.thisptr, broadphase.thisptr, dispatcher.config)
 */
  }

  /* "bullet/bullet.pyx":1515
 *     cdef _object *broadphase
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None):
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("bullet.bullet.CollisionWorld.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_dispatcher);
  __Pyx_XDECREF((PyObject *)__pyx_v_broadphase);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1535
 * 
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         cdef btCollisionObject *obj
 * 
 */

/* Python wrapper */
static void __pyx_pw_6bullet_6bullet_14CollisionWorld_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6bullet_6bullet_14CollisionWorld_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6bullet_6bullet_14CollisionWorld_2__dealloc__(((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6bullet_6bullet_14CollisionWorld_2__dealloc__(struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self) {
  btCollisionObject *__pyx_v_obj;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  void *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "bullet/bullet.pyx":1540
 *         # XXX Re-call getCollisionObjectArray() every time because Cython
 *         # support for local variables of reference type is broken.
 *         while self.thisptr.getCollisionObjectArray().size():             # <<<<<<<<<<<<<<
 *             # XXX Would be trivially faster to remove from the end instead, I
 *             # imagine.
 */
  while (1) {
    __pyx_t_1 = (__pyx_v_self->thisptr->getCollisionObjectArray().size() != 0);
    if (!__pyx_t_1) break;

    /* "bullet/bullet.pyx":1543
 *             # XXX Would be trivially faster to remove from the end instead, I
 *             # imagine.
 *             obj = self.thisptr.getCollisionObjectArray().at(0)             # <<<<<<<<<<<<<<
 *             self.thisptr.removeCollisionObject(obj)
 *             if NULL != obj.getUserPointer():
 */
    __pyx_v_obj = __pyx_v_self->thisptr->getCollisionObjectArray().at(0);

    /* "bullet/bullet.pyx":1544
 *             # imagine.
 *             obj = self.thisptr.getCollisionObjectArray().at(0)
 *             self.thisptr.removeCollisionObject(obj)             # <<<<<<<<<<<<<<
 *             if NULL != obj.getUserPointer():
 *                 Py_DECREF(<object>obj.getUserPointer())
 */
    __pyx_v_self->thisptr->removeCollisionObject(__pyx_v_obj);

    /* "bullet/bullet.pyx":1545
 *             obj = self.thisptr.getCollisionObjectArray().at(0)
 *             self.thisptr.removeCollisionObject(obj)
 *             if NULL != obj.getUserPointer():             # <<<<<<<<<<<<<<
 *                 Py_DECREF(<object>obj.getUserPointer())
 * 
 */
    __pyx_t_1 = ((NULL != __pyx_v_obj->getUserPointer()) != 0);
    if (__pyx_t_1) {

      /* "bullet/bullet.pyx":1546
 *             self.thisptr.removeCollisionObject(obj)
 *             if NULL != obj.getUserPointer():
 *                 Py_DECREF(<object>obj.getUserPointer())             # <<<<<<<<<<<<<<
 * 
 *         del self.thisptr
 */
      __pyx_t_2 = __pyx_v_obj->getUserPointer();
      Py_DECREF(((PyObject *)__pyx_t_2));

      /* "bullet/bullet.pyx":1545
 *             obj = self.thisptr.getCollisionObjectArray().at(0)
 *             self.thisptr.removeCollisionObject(obj)
 *             if NULL != obj.getUserPointer():             # <<<<<<<<<<<<<<
 *                 Py_DECREF(<object>obj.getUserPointer())
 * 
 */
    }
  }

  /* "bullet/bullet.pyx":1548
 *                 Py_DECREF(<object>obj.getUserPointer())
 * 
 *         del self.thisptr             # <<<<<<<<<<<<<<
 *         Py_DECREF(<object>self.dispatcher)
 *         Py_DECREF(<object>self.broadphase)
 */
  delete __pyx_v_self->thisptr;

  /* "bullet/bullet.pyx":1549
 * 
 *         del self.thisptr
 *         Py_DECREF(<object>self.dispatcher)             # <<<<<<<<<<<<<<
 *         Py_DECREF(<object>self.broadphase)
 * 
 */
  __pyx_t_3 = ((PyObject *)__pyx_v_self->dispatcher);
  __Pyx_INCREF(__pyx_t_3);
  Py_DECREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "bullet/bullet.pyx":1550
 *         del self.thisptr
 *         Py_DECREF(<object>self.dispatcher)
 *         Py_DECREF(<object>self.broadphase)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = ((PyObject *)__pyx_v_self->broadphase);
  __Pyx_INCREF(__pyx_t_3);
  Py_DECREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "bullet/bullet.pyx":1535
 * 
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         cdef btCollisionObject *obj
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "bullet/bullet.pyx":1553
 * 
 * 
 *     def setDebugDrawer(self, debugDrawer):             # <<<<<<<<<<<<<<
 *         """
 *         Specify a debug drawer object to use for L{debugDrawWorld} calls.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionWorld_5setDebugDrawer(PyObject *__pyx_v_self, PyObject *__pyx_v_debugDrawer); /*proto*/
static char __pyx_doc_6bullet_6bullet_14CollisionWorld_4setDebugDrawer[] = "\n        Specify a debug drawer object to use for L{debugDrawWorld} calls.\n\n        The debug drawer must have all of the required drawing callback methods.\n        TODO Document them.  See the debugdraw.py demo for now.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionWorld_5setDebugDrawer(PyObject *__pyx_v_self, PyObject *__pyx_v_debugDrawer) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDebugDrawer (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_14CollisionWorld_4setDebugDrawer(((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self), ((PyObject *)__pyx_v_debugDrawer));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_4setDebugDrawer(struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self, PyObject *__pyx_v_debugDrawer) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setDebugDrawer", 0);

  /* "bullet/bullet.pyx":1560
 *         TODO Document them.  See the debugdraw.py demo for now.
 *         """
 *         self.debugDraw = new PythonDebugDraw(<PyObject*>debugDrawer);             # <<<<<<<<<<<<<<
 *         self.thisptr.setDebugDrawer(self.debugDraw)
 * 
 */
  __pyx_v_self->debugDraw = new PythonDebugDraw(((PyObject *)__pyx_v_debugDrawer));

  /* "bullet/bullet.pyx":1561
 *         """
 *         self.debugDraw = new PythonDebugDraw(<PyObject*>debugDrawer);
 *         self.thisptr.setDebugDrawer(self.debugDraw)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->setDebugDrawer(__pyx_v_self->debugDraw);

  /* "bullet/bullet.pyx":1553
 * 
 * 
 *     def setDebugDrawer(self, debugDrawer):             # <<<<<<<<<<<<<<
 *         """
 *         Specify a debug drawer object to use for L{debugDrawWorld} calls.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1564
 * 
 * 
 *     def debugDrawWorld(self):             # <<<<<<<<<<<<<<
 *         """
 *         Draw the current state of the world using the debug drawer provided by a
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionWorld_7debugDrawWorld(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_14CollisionWorld_6debugDrawWorld[] = "\n        Draw the current state of the world using the debug drawer provided by a\n        previous call to L{setDebugDrawer}.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionWorld_7debugDrawWorld(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("debugDrawWorld (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_14CollisionWorld_6debugDrawWorld(((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_6debugDrawWorld(struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("debugDrawWorld", 0);

  /* "bullet/bullet.pyx":1569
 *         previous call to L{setDebugDrawer}.
 *         """
 *         self.thisptr.debugDrawWorld()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->thisptr->debugDrawWorld();

  /* "bullet/bullet.pyx":1564
 * 
 * 
 *     def debugDrawWorld(self):             # <<<<<<<<<<<<<<
 *         """
 *         Draw the current state of the world using the debug drawer provided by a
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1572
 * 
 * 
 *     def getNumCollisionObjects(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return a count of the number of CollisionObjects which are part of this
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionWorld_9getNumCollisionObjects(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_14CollisionWorld_8getNumCollisionObjects[] = "\n        Return a count of the number of CollisionObjects which are part of this\n        CollisionWorld.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionWorld_9getNumCollisionObjects(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getNumCollisionObjects (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_14CollisionWorld_8getNumCollisionObjects(((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_8getNumCollisionObjects(struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getNumCollisionObjects", 0);

  /* "bullet/bullet.pyx":1577
 *         CollisionWorld.
 *         """
 *         return self.thisptr.getNumCollisionObjects()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->thisptr->getNumCollisionObjects()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":1572
 * 
 * 
 *     def getNumCollisionObjects(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return a count of the number of CollisionObjects which are part of this
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionWorld.getNumCollisionObjects", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1580
 * 
 * 
 *     def addCollisionObject(self, CollisionObject collisionObject,             # <<<<<<<<<<<<<<
 *                            short int collisionFilterGroup=BroadphaseProxy.DefaultFilter,
 *                            short int collisionFilterMask=BroadphaseProxy.AllFilter):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionWorld_11addCollisionObject(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_14CollisionWorld_10addCollisionObject[] = "\n        Add a new CollisionObject to this CollisionWorld.\n\n        If you have a RigidBody to add, you should add it using\n        DynamicsWorld.addRigidBody instead.\n\n        @param collisionObject: The L{CollisionObject} instance to add.  This\n            object will now be be checked for collision with other collision\n            objects which have been added.\n\n        @param collisionFilterGroup: A bitmask giving the collision groups this\n            collision object belongs to.\n        @type collisionFilterGroup: short int (C{-1 <= int < 2 ** 15})\n\n        @param collisionFilterMask: A bitmask giving the collision groups this\n            collision object may collide with.  If another collision object is\n            not part of one of the groups set in this mask, this collision\n            object will not collide with it.\n        @type collisionFilterMask: short int (C{-1 <= int < 2 ** 15})\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionWorld_11addCollisionObject(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_collisionObject = 0;
  short __pyx_v_collisionFilterGroup;
  short __pyx_v_collisionFilterMask;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addCollisionObject (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_collisionObject,&__pyx_n_s_collisionFilterGroup,&__pyx_n_s_collisionFilterMask,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_collisionObject)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_collisionFilterGroup);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_collisionFilterMask);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "addCollisionObject") < 0)) __PYX_ERR(1, 1580, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_collisionObject = ((struct __pyx_obj_6bullet_6bullet_CollisionObject *)values[0]);
    if (values[1]) {
      __pyx_v_collisionFilterGroup = __Pyx_PyInt_As_short(values[1]); if (unlikely((__pyx_v_collisionFilterGroup == (short)-1) && PyErr_Occurred())) __PYX_ERR(1, 1581, __pyx_L3_error)
    } else {
      __pyx_v_collisionFilterGroup = __pyx_k__73;
    }
    if (values[2]) {
      __pyx_v_collisionFilterMask = __Pyx_PyInt_As_short(values[2]); if (unlikely((__pyx_v_collisionFilterMask == (short)-1) && PyErr_Occurred())) __PYX_ERR(1, 1582, __pyx_L3_error)
    } else {
      __pyx_v_collisionFilterMask = __pyx_k__74;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("addCollisionObject", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1580, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionWorld.addCollisionObject", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_collisionObject), __pyx_ptype_6bullet_6bullet_CollisionObject, 1, "collisionObject", 0))) __PYX_ERR(1, 1580, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_14CollisionWorld_10addCollisionObject(((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self), __pyx_v_collisionObject, __pyx_v_collisionFilterGroup, __pyx_v_collisionFilterMask);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_10addCollisionObject(struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_collisionObject, short __pyx_v_collisionFilterGroup, short __pyx_v_collisionFilterMask) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("addCollisionObject", 0);

  /* "bullet/bullet.pyx":1603
 *         @type collisionFilterMask: short int (C{-1 <= int < 2 ** 15})
 *         """
 *         if collisionObject.thisptr.getCollisionShape() == NULL:             # <<<<<<<<<<<<<<
 *             raise ValueError(
 *                 "Cannot add CollisionObject without a CollisionShape")
 */
  __pyx_t_1 = ((__pyx_v_collisionObject->thisptr->getCollisionShape() == NULL) != 0);
  if (__pyx_t_1) {

    /* "bullet/bullet.pyx":1604
 *         """
 *         if collisionObject.thisptr.getCollisionShape() == NULL:
 *             raise ValueError(             # <<<<<<<<<<<<<<
 *                 "Cannot add CollisionObject without a CollisionShape")
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__75, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1604, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(1, 1604, __pyx_L1_error)

    /* "bullet/bullet.pyx":1603
 *         @type collisionFilterMask: short int (C{-1 <= int < 2 ** 15})
 *         """
 *         if collisionObject.thisptr.getCollisionShape() == NULL:             # <<<<<<<<<<<<<<
 *             raise ValueError(
 *                 "Cannot add CollisionObject without a CollisionShape")
 */
  }

  /* "bullet/bullet.pyx":1611
 *         # didn't add a corresponding Py_DECREF somewhere.  We'll do that in
 *         # removeCollisionObject.
 *         Py_INCREF(collisionObject)             # <<<<<<<<<<<<<<
 * 
 *         # Beyond that, we may also need to Py_DECREF in __dealloc__ - for any
 */
  Py_INCREF(((PyObject *)__pyx_v_collisionObject));

  /* "bullet/bullet.pyx":1620
 *         # state we keep on this object, so keep it in the user pointer field of
 *         # btCollisionObject instead.
 *         collisionObject.thisptr.setUserPointer(<void*>collisionObject)             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr.addCollisionObject(
 */
  __pyx_v_collisionObject->thisptr->setUserPointer(((void *)__pyx_v_collisionObject));

  /* "bullet/bullet.pyx":1622
 *         collisionObject.thisptr.setUserPointer(<void*>collisionObject)
 * 
 *         self.thisptr.addCollisionObject(             # <<<<<<<<<<<<<<
 *             collisionObject.thisptr, collisionFilterGroup, collisionFilterMask)
 * 
 */
  __pyx_v_self->thisptr->addCollisionObject(__pyx_v_collisionObject->thisptr, __pyx_v_collisionFilterGroup, __pyx_v_collisionFilterMask);

  /* "bullet/bullet.pyx":1580
 * 
 * 
 *     def addCollisionObject(self, CollisionObject collisionObject,             # <<<<<<<<<<<<<<
 *                            short int collisionFilterGroup=BroadphaseProxy.DefaultFilter,
 *                            short int collisionFilterMask=BroadphaseProxy.AllFilter):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bullet.bullet.CollisionWorld.addCollisionObject", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1626
 * 
 * 
 *     def removeCollisionObject(self, CollisionObject collisionObject):             # <<<<<<<<<<<<<<
 *         """
 *         Remove a CollisionObject from this CollisionWorld.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionWorld_13removeCollisionObject(PyObject *__pyx_v_self, PyObject *__pyx_v_collisionObject); /*proto*/
static char __pyx_doc_6bullet_6bullet_14CollisionWorld_12removeCollisionObject[] = "\n        Remove a CollisionObject from this CollisionWorld.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionWorld_13removeCollisionObject(PyObject *__pyx_v_self, PyObject *__pyx_v_collisionObject) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("removeCollisionObject (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_collisionObject), __pyx_ptype_6bullet_6bullet_CollisionObject, 1, "collisionObject", 0))) __PYX_ERR(1, 1626, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_14CollisionWorld_12removeCollisionObject(((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_collisionObject));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_12removeCollisionObject(struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_CollisionObject *__pyx_v_collisionObject) {
  int __pyx_v_before;
  int __pyx_v_after;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("removeCollisionObject", 0);

  /* "bullet/bullet.pyx":1630
 *         Remove a CollisionObject from this CollisionWorld.
 *         """
 *         cdef int before = self.thisptr.getNumCollisionObjects()             # <<<<<<<<<<<<<<
 *         cdef int after
 *         self.thisptr.removeCollisionObject(collisionObject.thisptr)
 */
  __pyx_v_before = __pyx_v_self->thisptr->getNumCollisionObjects();

  /* "bullet/bullet.pyx":1632
 *         cdef int before = self.thisptr.getNumCollisionObjects()
 *         cdef int after
 *         self.thisptr.removeCollisionObject(collisionObject.thisptr)             # <<<<<<<<<<<<<<
 *         after = self.thisptr.getNumCollisionObjects()
 * 
 */
  __pyx_v_self->thisptr->removeCollisionObject(__pyx_v_collisionObject->thisptr);

  /* "bullet/bullet.pyx":1633
 *         cdef int after
 *         self.thisptr.removeCollisionObject(collisionObject.thisptr)
 *         after = self.thisptr.getNumCollisionObjects()             # <<<<<<<<<<<<<<
 * 
 *         if after < before:
 */
  __pyx_v_after = __pyx_v_self->thisptr->getNumCollisionObjects();

  /* "bullet/bullet.pyx":1635
 *         after = self.thisptr.getNumCollisionObjects()
 * 
 *         if after < before:             # <<<<<<<<<<<<<<
 *             # Just for the sake of sanity, we'll reset the user data pointer to
 *             # NULL here, since we're not going to use it in this case.
 */
  __pyx_t_1 = ((__pyx_v_after < __pyx_v_before) != 0);
  if (__pyx_t_1) {

    /* "bullet/bullet.pyx":1638
 *             # Just for the sake of sanity, we'll reset the user data pointer to
 *             # NULL here, since we're not going to use it in this case.
 *             collisionObject.thisptr.setUserPointer(NULL)             # <<<<<<<<<<<<<<
 * 
 *             # The collision object had been previously added to this
 */
    __pyx_v_collisionObject->thisptr->setUserPointer(NULL);

    /* "bullet/bullet.pyx":1643
 *             # CollisionWorld.  That means we Py_INCREFed it, so we need to
 *             # Py_DECREF it here to avoid leaking it.
 *             Py_DECREF(collisionObject)             # <<<<<<<<<<<<<<
 * 
 *     def getCollisionObjectArray(self):
 */
    Py_DECREF(((PyObject *)__pyx_v_collisionObject));

    /* "bullet/bullet.pyx":1635
 *         after = self.thisptr.getNumCollisionObjects()
 * 
 *         if after < before:             # <<<<<<<<<<<<<<
 *             # Just for the sake of sanity, we'll reset the user data pointer to
 *             # NULL here, since we're not going to use it in this case.
 */
  }

  /* "bullet/bullet.pyx":1626
 * 
 * 
 *     def removeCollisionObject(self, CollisionObject collisionObject):             # <<<<<<<<<<<<<<
 *         """
 *         Remove a CollisionObject from this CollisionWorld.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1645
 *             Py_DECREF(collisionObject)
 * 
 *     def getCollisionObjectArray(self):             # <<<<<<<<<<<<<<
 *         collisionObjectArray = []
 *         # cdef btAlignedObjectArray[btCollisionObjectP]& btarr = self.thisptr.getCollisionObjectArray()
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionWorld_15getCollisionObjectArray(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionWorld_15getCollisionObjectArray(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getCollisionObjectArray (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_14CollisionWorld_14getCollisionObjectArray(((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_14getCollisionObjectArray(struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self) {
  PyObject *__pyx_v_collisionObjectArray = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_obj = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  int __pyx_t_6;
  void *__pyx_t_7;
  int __pyx_t_8;
  __Pyx_RefNannySetupContext("getCollisionObjectArray", 0);

  /* "bullet/bullet.pyx":1646
 * 
 *     def getCollisionObjectArray(self):
 *         collisionObjectArray = []             # <<<<<<<<<<<<<<
 *         # cdef btAlignedObjectArray[btCollisionObjectP]& btarr = self.thisptr.getCollisionObjectArray()
 *         for i in range(self.getNumCollisionObjects()):
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1646, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_collisionObjectArray = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":1648
 *         collisionObjectArray = []
 *         # cdef btAlignedObjectArray[btCollisionObjectP]& btarr = self.thisptr.getCollisionObjectArray()
 *         for i in range(self.getNumCollisionObjects()):             # <<<<<<<<<<<<<<
 *             obj = <object>self.thisptr.getCollisionObjectArray().at(i).getUserPointer()
 *             collisionObjectArray.append(obj)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getNumCollisionObjects); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1648, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1648, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1648, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1648, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1648, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_4 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_4 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1648, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1648, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_5)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(1, 1648, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1648, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(1, 1648, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1648, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_5(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 1648, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "bullet/bullet.pyx":1649
 *         # cdef btAlignedObjectArray[btCollisionObjectP]& btarr = self.thisptr.getCollisionObjectArray()
 *         for i in range(self.getNumCollisionObjects()):
 *             obj = <object>self.thisptr.getCollisionObjectArray().at(i).getUserPointer()             # <<<<<<<<<<<<<<
 *             collisionObjectArray.append(obj)
 *         return collisionObjectArray
 */
    __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_v_i); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 1649, __pyx_L1_error)
    __pyx_t_7 = __pyx_v_self->thisptr->getCollisionObjectArray().at(__pyx_t_6)->getUserPointer();
    __pyx_t_1 = ((PyObject *)__pyx_t_7);
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_obj, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "bullet/bullet.pyx":1650
 *         for i in range(self.getNumCollisionObjects()):
 *             obj = <object>self.thisptr.getCollisionObjectArray().at(i).getUserPointer()
 *             collisionObjectArray.append(obj)             # <<<<<<<<<<<<<<
 *         return collisionObjectArray
 * 
 */
    __pyx_t_8 = __Pyx_PyList_Append(__pyx_v_collisionObjectArray, __pyx_v_obj); if (unlikely(__pyx_t_8 == ((int)-1))) __PYX_ERR(1, 1650, __pyx_L1_error)

    /* "bullet/bullet.pyx":1648
 *         collisionObjectArray = []
 *         # cdef btAlignedObjectArray[btCollisionObjectP]& btarr = self.thisptr.getCollisionObjectArray()
 *         for i in range(self.getNumCollisionObjects()):             # <<<<<<<<<<<<<<
 *             obj = <object>self.thisptr.getCollisionObjectArray().at(i).getUserPointer()
 *             collisionObjectArray.append(obj)
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "bullet/bullet.pyx":1651
 *             obj = <object>self.thisptr.getCollisionObjectArray().at(i).getUserPointer()
 *             collisionObjectArray.append(obj)
 *         return collisionObjectArray             # <<<<<<<<<<<<<<
 * 
 *     def rayTestClosest(self, Vector3 rayFromWorld, Vector3 rayToWorld):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_collisionObjectArray);
  __pyx_r = __pyx_v_collisionObjectArray;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":1645
 *             Py_DECREF(collisionObject)
 * 
 *     def getCollisionObjectArray(self):             # <<<<<<<<<<<<<<
 *         collisionObjectArray = []
 *         # cdef btAlignedObjectArray[btCollisionObjectP]& btarr = self.thisptr.getCollisionObjectArray()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("bullet.bullet.CollisionWorld.getCollisionObjectArray", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_collisionObjectArray);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1653
 *         return collisionObjectArray
 * 
 *     def rayTestClosest(self, Vector3 rayFromWorld, Vector3 rayToWorld):             # <<<<<<<<<<<<<<
 *         cdef btVector3 fromVec = btVector3(rayFromWorld.x, rayFromWorld.y, rayFromWorld.z)
 *         cdef btVector3 toVec = btVector3(rayToWorld.x, rayToWorld.y, rayToWorld.z)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionWorld_17rayTestClosest(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionWorld_17rayTestClosest(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_rayFromWorld = 0;
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_rayToWorld = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rayTestClosest (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_rayFromWorld,&__pyx_n_s_rayToWorld,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rayFromWorld)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_rayToWorld)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("rayTestClosest", 1, 2, 2, 1); __PYX_ERR(1, 1653, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "rayTestClosest") < 0)) __PYX_ERR(1, 1653, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_rayFromWorld = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
    __pyx_v_rayToWorld = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rayTestClosest", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1653, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionWorld.rayTestClosest", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rayFromWorld), __pyx_ptype_6bullet_6bullet_Vector3, 1, "rayFromWorld", 0))) __PYX_ERR(1, 1653, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rayToWorld), __pyx_ptype_6bullet_6bullet_Vector3, 1, "rayToWorld", 0))) __PYX_ERR(1, 1653, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_14CollisionWorld_16rayTestClosest(((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self), __pyx_v_rayFromWorld, __pyx_v_rayToWorld);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_16rayTestClosest(struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_rayFromWorld, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_rayToWorld) {
  btVector3 __pyx_v_fromVec;
  btVector3 __pyx_v_toVec;
  __pyx_t_6bullet_6bullet_ClosestRayResultCallback __pyx_v_btRes;
  struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_rayResult = NULL;
  PyObject *__pyx_v_ex = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  btScalar __pyx_t_6;
  void *__pyx_t_7;
  int __pyx_t_8;
  short __pyx_t_9;
  unsigned int __pyx_t_10;
  int __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  __Pyx_RefNannySetupContext("rayTestClosest", 0);

  /* "bullet/bullet.pyx":1654
 * 
 *     def rayTestClosest(self, Vector3 rayFromWorld, Vector3 rayToWorld):
 *         cdef btVector3 fromVec = btVector3(rayFromWorld.x, rayFromWorld.y, rayFromWorld.z)             # <<<<<<<<<<<<<<
 *         cdef btVector3 toVec = btVector3(rayToWorld.x, rayToWorld.y, rayToWorld.z)
 *         cdef ClosestRayResultCallback btRes = ClosestRayResultCallback()
 */
  __pyx_v_fromVec = btVector3(__pyx_v_rayFromWorld->x, __pyx_v_rayFromWorld->y, __pyx_v_rayFromWorld->z);

  /* "bullet/bullet.pyx":1655
 *     def rayTestClosest(self, Vector3 rayFromWorld, Vector3 rayToWorld):
 *         cdef btVector3 fromVec = btVector3(rayFromWorld.x, rayFromWorld.y, rayFromWorld.z)
 *         cdef btVector3 toVec = btVector3(rayToWorld.x, rayToWorld.y, rayToWorld.z)             # <<<<<<<<<<<<<<
 *         cdef ClosestRayResultCallback btRes = ClosestRayResultCallback()
 *         btRes.build(fromVec, toVec)
 */
  __pyx_v_toVec = btVector3(__pyx_v_rayToWorld->x, __pyx_v_rayToWorld->y, __pyx_v_rayToWorld->z);

  /* "bullet/bullet.pyx":1656
 *         cdef btVector3 fromVec = btVector3(rayFromWorld.x, rayFromWorld.y, rayFromWorld.z)
 *         cdef btVector3 toVec = btVector3(rayToWorld.x, rayToWorld.y, rayToWorld.z)
 *         cdef ClosestRayResultCallback btRes = ClosestRayResultCallback()             # <<<<<<<<<<<<<<
 *         btRes.build(fromVec, toVec)
 *         self.thisptr.rayTest(fromVec, toVec, btRes)
 */
  __pyx_v_btRes = __pyx_t_6bullet_6bullet_ClosestRayResultCallback();

  /* "bullet/bullet.pyx":1657
 *         cdef btVector3 toVec = btVector3(rayToWorld.x, rayToWorld.y, rayToWorld.z)
 *         cdef ClosestRayResultCallback btRes = ClosestRayResultCallback()
 *         btRes.build(fromVec, toVec)             # <<<<<<<<<<<<<<
 *         self.thisptr.rayTest(fromVec, toVec, btRes)
 *         try:
 */
  __pyx_v_btRes.build(__pyx_v_fromVec, __pyx_v_toVec);

  /* "bullet/bullet.pyx":1658
 *         cdef ClosestRayResultCallback btRes = ClosestRayResultCallback()
 *         btRes.build(fromVec, toVec)
 *         self.thisptr.rayTest(fromVec, toVec, btRes)             # <<<<<<<<<<<<<<
 *         try:
 *             if btRes.hasHit():
 */
  __pyx_v_self->thisptr->rayTest(__pyx_v_fromVec, __pyx_v_toVec, __pyx_v_btRes);

  /* "bullet/bullet.pyx":1659
 *         btRes.build(fromVec, toVec)
 *         self.thisptr.rayTest(fromVec, toVec, btRes)
 *         try:             # <<<<<<<<<<<<<<
 *             if btRes.hasHit():
 *                 rayResult = RayResult()
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "bullet/bullet.pyx":1660
 *         self.thisptr.rayTest(fromVec, toVec, btRes)
 *         try:
 *             if btRes.hasHit():             # <<<<<<<<<<<<<<
 *                 rayResult = RayResult()
 *                 rayResult.closestHitFraction = btRes.m_closestHitFraction
 */
      __pyx_t_4 = (__pyx_v_btRes.hasHit() != 0);
      if (__pyx_t_4) {

        /* "bullet/bullet.pyx":1661
 *         try:
 *             if btRes.hasHit():
 *                 rayResult = RayResult()             # <<<<<<<<<<<<<<
 *                 rayResult.closestHitFraction = btRes.m_closestHitFraction
 *                 rayResult.collisionObject = <object>btRes.m_collisionObject.getUserPointer()
 */
        __pyx_t_5 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_RayResult), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1661, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_v_rayResult = ((struct __pyx_obj_6bullet_6bullet_RayResult *)__pyx_t_5);
        __pyx_t_5 = 0;

        /* "bullet/bullet.pyx":1662
 *             if btRes.hasHit():
 *                 rayResult = RayResult()
 *                 rayResult.closestHitFraction = btRes.m_closestHitFraction             # <<<<<<<<<<<<<<
 *                 rayResult.collisionObject = <object>btRes.m_collisionObject.getUserPointer()
 *                 if rayResult.collisionObject is None:
 */
        __pyx_t_6 = __pyx_v_btRes.m_closestHitFraction;
        __pyx_v_rayResult->closestHitFraction = __pyx_t_6;

        /* "bullet/bullet.pyx":1663
 *                 rayResult = RayResult()
 *                 rayResult.closestHitFraction = btRes.m_closestHitFraction
 *                 rayResult.collisionObject = <object>btRes.m_collisionObject.getUserPointer()             # <<<<<<<<<<<<<<
 *                 if rayResult.collisionObject is None:
 *                     raise RuntimeError('Collision object not found in world.')
 */
        __pyx_t_7 = __pyx_v_btRes.m_collisionObject->getUserPointer();
        if (!(likely(((((PyObject *)__pyx_t_7)) == Py_None) || likely(__Pyx_TypeTest(((PyObject *)__pyx_t_7), __pyx_ptype_6bullet_6bullet_CollisionObject))))) __PYX_ERR(1, 1663, __pyx_L3_error)
        __pyx_t_5 = ((PyObject *)__pyx_t_7);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_5);
        __Pyx_GOTREF(__pyx_v_rayResult->collisionObject);
        __Pyx_DECREF(((PyObject *)__pyx_v_rayResult->collisionObject));
        __pyx_v_rayResult->collisionObject = ((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_t_5);
        __pyx_t_5 = 0;

        /* "bullet/bullet.pyx":1664
 *                 rayResult.closestHitFraction = btRes.m_closestHitFraction
 *                 rayResult.collisionObject = <object>btRes.m_collisionObject.getUserPointer()
 *                 if rayResult.collisionObject is None:             # <<<<<<<<<<<<<<
 *                     raise RuntimeError('Collision object not found in world.')
 *                 rayResult.collisionFilterGroup = btRes.m_collisionFilterGroup
 */
        __pyx_t_4 = (((PyObject *)__pyx_v_rayResult->collisionObject) == Py_None);
        __pyx_t_8 = (__pyx_t_4 != 0);
        if (__pyx_t_8) {

          /* "bullet/bullet.pyx":1665
 *                 rayResult.collisionObject = <object>btRes.m_collisionObject.getUserPointer()
 *                 if rayResult.collisionObject is None:
 *                     raise RuntimeError('Collision object not found in world.')             # <<<<<<<<<<<<<<
 *                 rayResult.collisionFilterGroup = btRes.m_collisionFilterGroup
 *                 rayResult.collisionFilterMask = btRes.m_collisionFilterMask
 */
          __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__76, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1665, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_Raise(__pyx_t_5, 0, 0, 0);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __PYX_ERR(1, 1665, __pyx_L3_error)

          /* "bullet/bullet.pyx":1664
 *                 rayResult.closestHitFraction = btRes.m_closestHitFraction
 *                 rayResult.collisionObject = <object>btRes.m_collisionObject.getUserPointer()
 *                 if rayResult.collisionObject is None:             # <<<<<<<<<<<<<<
 *                     raise RuntimeError('Collision object not found in world.')
 *                 rayResult.collisionFilterGroup = btRes.m_collisionFilterGroup
 */
        }

        /* "bullet/bullet.pyx":1666
 *                 if rayResult.collisionObject is None:
 *                     raise RuntimeError('Collision object not found in world.')
 *                 rayResult.collisionFilterGroup = btRes.m_collisionFilterGroup             # <<<<<<<<<<<<<<
 *                 rayResult.collisionFilterMask = btRes.m_collisionFilterMask
 *                 rayResult.flags = btRes.m_flags
 */
        __pyx_t_9 = __pyx_v_btRes.m_collisionFilterGroup;
        __pyx_v_rayResult->collisionFilterGroup = __pyx_t_9;

        /* "bullet/bullet.pyx":1667
 *                     raise RuntimeError('Collision object not found in world.')
 *                 rayResult.collisionFilterGroup = btRes.m_collisionFilterGroup
 *                 rayResult.collisionFilterMask = btRes.m_collisionFilterMask             # <<<<<<<<<<<<<<
 *                 rayResult.flags = btRes.m_flags
 * 
 */
        __pyx_t_9 = __pyx_v_btRes.m_collisionFilterMask;
        __pyx_v_rayResult->collisionFilterMask = __pyx_t_9;

        /* "bullet/bullet.pyx":1668
 *                 rayResult.collisionFilterGroup = btRes.m_collisionFilterGroup
 *                 rayResult.collisionFilterMask = btRes.m_collisionFilterMask
 *                 rayResult.flags = btRes.m_flags             # <<<<<<<<<<<<<<
 * 
 *                 rayResult.rayFromWorld = Vector3.frombtVector3(btRes.m_rayFromWorld)
 */
        __pyx_t_10 = __pyx_v_btRes.m_flags;
        __pyx_v_rayResult->flags = __pyx_t_10;

        /* "bullet/bullet.pyx":1670
 *                 rayResult.flags = btRes.m_flags
 * 
 *                 rayResult.rayFromWorld = Vector3.frombtVector3(btRes.m_rayFromWorld)             # <<<<<<<<<<<<<<
 *                 rayResult.rayToWorld = Vector3.frombtVector3(btRes.m_rayToWorld)
 *                 rayResult.hitNormalWorld = Vector3.frombtVector3(btRes.m_hitNormalWorld)
 */
        __pyx_t_5 = __pyx_f_6bullet_6bullet_7Vector3_frombtVector3(__pyx_v_btRes.m_rayFromWorld); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1670, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_6bullet_6bullet_Vector3))))) __PYX_ERR(1, 1670, __pyx_L3_error)
        __Pyx_GIVEREF(__pyx_t_5);
        __Pyx_GOTREF(__pyx_v_rayResult->rayFromWorld);
        __Pyx_DECREF(((PyObject *)__pyx_v_rayResult->rayFromWorld));
        __pyx_v_rayResult->rayFromWorld = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_t_5);
        __pyx_t_5 = 0;

        /* "bullet/bullet.pyx":1671
 * 
 *                 rayResult.rayFromWorld = Vector3.frombtVector3(btRes.m_rayFromWorld)
 *                 rayResult.rayToWorld = Vector3.frombtVector3(btRes.m_rayToWorld)             # <<<<<<<<<<<<<<
 *                 rayResult.hitNormalWorld = Vector3.frombtVector3(btRes.m_hitNormalWorld)
 *                 rayResult.hitPointWorld  = Vector3.frombtVector3(btRes.m_hitPointWorld)
 */
        __pyx_t_5 = __pyx_f_6bullet_6bullet_7Vector3_frombtVector3(__pyx_v_btRes.m_rayToWorld); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1671, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_6bullet_6bullet_Vector3))))) __PYX_ERR(1, 1671, __pyx_L3_error)
        __Pyx_GIVEREF(__pyx_t_5);
        __Pyx_GOTREF(__pyx_v_rayResult->rayToWorld);
        __Pyx_DECREF(((PyObject *)__pyx_v_rayResult->rayToWorld));
        __pyx_v_rayResult->rayToWorld = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_t_5);
        __pyx_t_5 = 0;

        /* "bullet/bullet.pyx":1672
 *                 rayResult.rayFromWorld = Vector3.frombtVector3(btRes.m_rayFromWorld)
 *                 rayResult.rayToWorld = Vector3.frombtVector3(btRes.m_rayToWorld)
 *                 rayResult.hitNormalWorld = Vector3.frombtVector3(btRes.m_hitNormalWorld)             # <<<<<<<<<<<<<<
 *                 rayResult.hitPointWorld  = Vector3.frombtVector3(btRes.m_hitPointWorld)
 *                 return rayResult
 */
        __pyx_t_5 = __pyx_f_6bullet_6bullet_7Vector3_frombtVector3(__pyx_v_btRes.m_hitNormalWorld); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1672, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_6bullet_6bullet_Vector3))))) __PYX_ERR(1, 1672, __pyx_L3_error)
        __Pyx_GIVEREF(__pyx_t_5);
        __Pyx_GOTREF(__pyx_v_rayResult->hitNormalWorld);
        __Pyx_DECREF(((PyObject *)__pyx_v_rayResult->hitNormalWorld));
        __pyx_v_rayResult->hitNormalWorld = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_t_5);
        __pyx_t_5 = 0;

        /* "bullet/bullet.pyx":1673
 *                 rayResult.rayToWorld = Vector3.frombtVector3(btRes.m_rayToWorld)
 *                 rayResult.hitNormalWorld = Vector3.frombtVector3(btRes.m_hitNormalWorld)
 *                 rayResult.hitPointWorld  = Vector3.frombtVector3(btRes.m_hitPointWorld)             # <<<<<<<<<<<<<<
 *                 return rayResult
 *             else:
 */
        __pyx_t_5 = __pyx_f_6bullet_6bullet_7Vector3_frombtVector3(__pyx_v_btRes.m_hitPointWorld); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1673, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_6bullet_6bullet_Vector3))))) __PYX_ERR(1, 1673, __pyx_L3_error)
        __Pyx_GIVEREF(__pyx_t_5);
        __Pyx_GOTREF(__pyx_v_rayResult->hitPointWorld);
        __Pyx_DECREF(((PyObject *)__pyx_v_rayResult->hitPointWorld));
        __pyx_v_rayResult->hitPointWorld = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_t_5);
        __pyx_t_5 = 0;

        /* "bullet/bullet.pyx":1674
 *                 rayResult.hitNormalWorld = Vector3.frombtVector3(btRes.m_hitNormalWorld)
 *                 rayResult.hitPointWorld  = Vector3.frombtVector3(btRes.m_hitPointWorld)
 *                 return rayResult             # <<<<<<<<<<<<<<
 *             else:
 *                 return None
 */
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(((PyObject *)__pyx_v_rayResult));
        __pyx_r = ((PyObject *)__pyx_v_rayResult);
        goto __pyx_L7_try_return;

        /* "bullet/bullet.pyx":1660
 *         self.thisptr.rayTest(fromVec, toVec, btRes)
 *         try:
 *             if btRes.hasHit():             # <<<<<<<<<<<<<<
 *                 rayResult = RayResult()
 *                 rayResult.closestHitFraction = btRes.m_closestHitFraction
 */
      }

      /* "bullet/bullet.pyx":1676
 *                 return rayResult
 *             else:
 *                 return None             # <<<<<<<<<<<<<<
 *         except Exception as ex:
 *             print('Error in cyBullet/rayTestClosest: ' + ex.message)
 */
      /*else*/ {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(Py_None);
        __pyx_r = Py_None;
        goto __pyx_L7_try_return;
      }

      /* "bullet/bullet.pyx":1659
 *         btRes.build(fromVec, toVec)
 *         self.thisptr.rayTest(fromVec, toVec, btRes)
 *         try:             # <<<<<<<<<<<<<<
 *             if btRes.hasHit():
 *                 rayResult = RayResult()
 */
    }
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "bullet/bullet.pyx":1677
 *             else:
 *                 return None
 *         except Exception as ex:             # <<<<<<<<<<<<<<
 *             print('Error in cyBullet/rayTestClosest: ' + ex.message)
 * 
 */
    __pyx_t_11 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_11) {
      __Pyx_AddTraceback("bullet.bullet.CollisionWorld.rayTestClosest", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_12, &__pyx_t_13) < 0) __PYX_ERR(1, 1677, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_INCREF(__pyx_t_12);
      __pyx_v_ex = __pyx_t_12;

      /* "bullet/bullet.pyx":1678
 *                 return None
 *         except Exception as ex:
 *             print('Error in cyBullet/rayTestClosest: ' + ex.message)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_ex, __pyx_n_s_message); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 1678, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_15 = PyNumber_Add(__pyx_kp_s_Error_in_cyBullet_rayTestClosest, __pyx_t_14); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 1678, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_15);
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      if (__Pyx_PrintOne(0, __pyx_t_15) < 0) __PYX_ERR(1, 1678, __pyx_L5_except_error)
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "bullet/bullet.pyx":1659
 *         btRes.build(fromVec, toVec)
 *         self.thisptr.rayTest(fromVec, toVec, btRes)
 *         try:             # <<<<<<<<<<<<<<
 *             if btRes.hasHit():
 *                 rayResult = RayResult()
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
  }

  /* "bullet/bullet.pyx":1653
 *         return collisionObjectArray
 * 
 *     def rayTestClosest(self, Vector3 rayFromWorld, Vector3 rayToWorld):             # <<<<<<<<<<<<<<
 *         cdef btVector3 fromVec = btVector3(rayFromWorld.x, rayFromWorld.y, rayFromWorld.z)
 *         cdef btVector3 toVec = btVector3(rayToWorld.x, rayToWorld.y, rayToWorld.z)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_AddTraceback("bullet.bullet.CollisionWorld.rayTestClosest", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_rayResult);
  __Pyx_XDECREF(__pyx_v_ex);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionWorld_19__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionWorld_19__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_14CollisionWorld_18__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_18__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__77, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionWorld.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionWorld_21__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_14CollisionWorld_21__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_14CollisionWorld_20__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_20__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__78, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionWorld.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1717
 *     #     return self.btRayCallback.needsCollision(proxy0.thisptr[0])
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         pass
 *         # self.closestHitFraction = None
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_9RayResult_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_9RayResult_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6bullet_6bullet_9RayResult___cinit__(((struct __pyx_obj_6bullet_6bullet_RayResult *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_9RayResult___cinit__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1703
 * 
 * cdef class RayResult:
 *     cdef readonly float closestHitFraction             # <<<<<<<<<<<<<<
 *     cdef readonly CollisionObject collisionObject
 *     cdef readonly int collisionFilterGroup
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_18closestHitFraction_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_18closestHitFraction_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RayResult_18closestHitFraction___get__(((struct __pyx_obj_6bullet_6bullet_RayResult *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_18closestHitFraction___get__(struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->closestHitFraction); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1703, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RayResult.closestHitFraction.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1704
 * cdef class RayResult:
 *     cdef readonly float closestHitFraction
 *     cdef readonly CollisionObject collisionObject             # <<<<<<<<<<<<<<
 *     cdef readonly int collisionFilterGroup
 *     cdef readonly int collisionFilterMask
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_15collisionObject_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_15collisionObject_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RayResult_15collisionObject___get__(((struct __pyx_obj_6bullet_6bullet_RayResult *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_15collisionObject___get__(struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->collisionObject));
  __pyx_r = ((PyObject *)__pyx_v_self->collisionObject);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1705
 *     cdef readonly float closestHitFraction
 *     cdef readonly CollisionObject collisionObject
 *     cdef readonly int collisionFilterGroup             # <<<<<<<<<<<<<<
 *     cdef readonly int collisionFilterMask
 *     cdef readonly int flags
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_20collisionFilterGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_20collisionFilterGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RayResult_20collisionFilterGroup___get__(((struct __pyx_obj_6bullet_6bullet_RayResult *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_20collisionFilterGroup___get__(struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->collisionFilterGroup); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RayResult.collisionFilterGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1706
 *     cdef readonly CollisionObject collisionObject
 *     cdef readonly int collisionFilterGroup
 *     cdef readonly int collisionFilterMask             # <<<<<<<<<<<<<<
 *     cdef readonly int flags
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_19collisionFilterMask_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_19collisionFilterMask_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RayResult_19collisionFilterMask___get__(((struct __pyx_obj_6bullet_6bullet_RayResult *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_19collisionFilterMask___get__(struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->collisionFilterMask); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1706, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RayResult.collisionFilterMask.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1707
 *     cdef readonly int collisionFilterGroup
 *     cdef readonly int collisionFilterMask
 *     cdef readonly int flags             # <<<<<<<<<<<<<<
 * 
 *     cdef readonly Vector3 rayFromWorld
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_5flags_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_5flags_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RayResult_5flags___get__(((struct __pyx_obj_6bullet_6bullet_RayResult *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_5flags___get__(struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->flags); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1707, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RayResult.flags.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1709
 *     cdef readonly int flags
 * 
 *     cdef readonly Vector3 rayFromWorld             # <<<<<<<<<<<<<<
 *     cdef readonly Vector3 rayToWorld
 *     cdef readonly Vector3 hitNormalWorld
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_12rayFromWorld_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_12rayFromWorld_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RayResult_12rayFromWorld___get__(((struct __pyx_obj_6bullet_6bullet_RayResult *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_12rayFromWorld___get__(struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->rayFromWorld));
  __pyx_r = ((PyObject *)__pyx_v_self->rayFromWorld);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1710
 * 
 *     cdef readonly Vector3 rayFromWorld
 *     cdef readonly Vector3 rayToWorld             # <<<<<<<<<<<<<<
 *     cdef readonly Vector3 hitNormalWorld
 *     cdef readonly Vector3 hitPointWorld
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_10rayToWorld_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_10rayToWorld_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RayResult_10rayToWorld___get__(((struct __pyx_obj_6bullet_6bullet_RayResult *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_10rayToWorld___get__(struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->rayToWorld));
  __pyx_r = ((PyObject *)__pyx_v_self->rayToWorld);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1711
 *     cdef readonly Vector3 rayFromWorld
 *     cdef readonly Vector3 rayToWorld
 *     cdef readonly Vector3 hitNormalWorld             # <<<<<<<<<<<<<<
 *     cdef readonly Vector3 hitPointWorld
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_14hitNormalWorld_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_14hitNormalWorld_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RayResult_14hitNormalWorld___get__(((struct __pyx_obj_6bullet_6bullet_RayResult *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_14hitNormalWorld___get__(struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hitNormalWorld));
  __pyx_r = ((PyObject *)__pyx_v_self->hitNormalWorld);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1712
 *     cdef readonly Vector3 rayToWorld
 *     cdef readonly Vector3 hitNormalWorld
 *     cdef readonly Vector3 hitPointWorld             # <<<<<<<<<<<<<<
 * 
 *     # def needsCollision(self, BroadphaseProxy proxy0):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_13hitPointWorld_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_13hitPointWorld_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RayResult_13hitPointWorld___get__(((struct __pyx_obj_6bullet_6bullet_RayResult *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_13hitPointWorld___get__(struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->hitPointWorld));
  __pyx_r = ((PyObject *)__pyx_v_self->hitPointWorld);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RayResult_2__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_RayResult *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__79, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RayResult.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_9RayResult_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_9RayResult_4__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_RayResult *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_9RayResult_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_RayResult *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__80, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RayResult.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1737
 *     btVector3 m_hitPointWorld
 * 
 *     ClosestRayResultCallback():             # <<<<<<<<<<<<<<
 *         pass
 * 
 */

void __pyx_t_6bullet_6bullet_ClosestRayResultCallback::__pyx_f___init__ClosestRayResultCallback(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("<init>", 0);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "bullet/bullet.pyx":1740
 *         pass
 * 
 *     void build(const btVector3 &fromVec, const btVector3 &toVec):             # <<<<<<<<<<<<<<
 *         this.m_rayFromWorld = fromVec
 *         this.m_rayToWorld = toVec
 */

void __pyx_t_6bullet_6bullet_ClosestRayResultCallback::build(btVector3 const &__pyx_v_fromVec, btVector3 const &__pyx_v_toVec) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("build", 0);

  /* "bullet/bullet.pyx":1741
 * 
 *     void build(const btVector3 &fromVec, const btVector3 &toVec):
 *         this.m_rayFromWorld = fromVec             # <<<<<<<<<<<<<<
 *         this.m_rayToWorld = toVec
 * 
 */
  this->m_rayFromWorld = __pyx_v_fromVec;

  /* "bullet/bullet.pyx":1742
 *     void build(const btVector3 &fromVec, const btVector3 &toVec):
 *         this.m_rayFromWorld = fromVec
 *         this.m_rayToWorld = toVec             # <<<<<<<<<<<<<<
 * 
 *     btScalar addSingleResult(LocalRayResult& rayResult, bool normalInWorldSpace):
 */
  this->m_rayToWorld = __pyx_v_toVec;

  /* "bullet/bullet.pyx":1740
 *         pass
 * 
 *     void build(const btVector3 &fromVec, const btVector3 &toVec):             # <<<<<<<<<<<<<<
 *         this.m_rayFromWorld = fromVec
 *         this.m_rayToWorld = toVec
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "bullet/bullet.pyx":1744
 *         this.m_rayToWorld = toVec
 * 
 *     btScalar addSingleResult(LocalRayResult& rayResult, bool normalInWorldSpace):             # <<<<<<<<<<<<<<
 *         # caller already does the filter on the m_closestHitFraction
 *         assert(rayResult.m_hitFraction <= this.m_closestHitFraction)
 */

btScalar __pyx_t_6bullet_6bullet_ClosestRayResultCallback::addSingleResult(btCollisionWorld::LocalRayResult &__pyx_v_rayResult, bool __pyx_v_normalInWorldSpace) {
  btScalar __pyx_r;
  __Pyx_RefNannyDeclarations
  btScalar __pyx_t_1;
  btCollisionObject const *__pyx_t_2;
  int __pyx_t_3;
  btVector3 __pyx_t_4;
  __Pyx_RefNannySetupContext("addSingleResult", 0);

  /* "bullet/bullet.pyx":1746
 *     btScalar addSingleResult(LocalRayResult& rayResult, bool normalInWorldSpace):
 *         # caller already does the filter on the m_closestHitFraction
 *         assert(rayResult.m_hitFraction <= this.m_closestHitFraction)             # <<<<<<<<<<<<<<
 *         this.m_closestHitFraction = rayResult.m_hitFraction
 *         this.m_collisionObject = rayResult.m_collisionObject
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__pyx_v_rayResult.m_hitFraction <= this->m_closestHitFraction) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(1, 1746, __pyx_L1_error)
    }
  }
  #endif

  /* "bullet/bullet.pyx":1747
 *         # caller already does the filter on the m_closestHitFraction
 *         assert(rayResult.m_hitFraction <= this.m_closestHitFraction)
 *         this.m_closestHitFraction = rayResult.m_hitFraction             # <<<<<<<<<<<<<<
 *         this.m_collisionObject = rayResult.m_collisionObject
 *         if normalInWorldSpace:
 */
  __pyx_t_1 = __pyx_v_rayResult.m_hitFraction;
  this->m_closestHitFraction = __pyx_t_1;

  /* "bullet/bullet.pyx":1748
 *         assert(rayResult.m_hitFraction <= this.m_closestHitFraction)
 *         this.m_closestHitFraction = rayResult.m_hitFraction
 *         this.m_collisionObject = rayResult.m_collisionObject             # <<<<<<<<<<<<<<
 *         if normalInWorldSpace:
 *             this.m_hitNormalWorld = rayResult.m_hitNormalLocal
 */
  __pyx_t_2 = __pyx_v_rayResult.m_collisionObject;
  this->m_collisionObject = __pyx_t_2;

  /* "bullet/bullet.pyx":1749
 *         this.m_closestHitFraction = rayResult.m_hitFraction
 *         this.m_collisionObject = rayResult.m_collisionObject
 *         if normalInWorldSpace:             # <<<<<<<<<<<<<<
 *             this.m_hitNormalWorld = rayResult.m_hitNormalLocal
 *         else:
 */
  __pyx_t_3 = (__pyx_v_normalInWorldSpace != 0);
  if (__pyx_t_3) {

    /* "bullet/bullet.pyx":1750
 *         this.m_collisionObject = rayResult.m_collisionObject
 *         if normalInWorldSpace:
 *             this.m_hitNormalWorld = rayResult.m_hitNormalLocal             # <<<<<<<<<<<<<<
 *         else:
 *             this.m_hitNormalWorld = m_collisionObject.getWorldTransform().getBasis() * rayResult.m_hitNormalLocal
 */
    __pyx_t_4 = __pyx_v_rayResult.m_hitNormalLocal;
    this->m_hitNormalWorld = __pyx_t_4;

    /* "bullet/bullet.pyx":1749
 *         this.m_closestHitFraction = rayResult.m_hitFraction
 *         this.m_collisionObject = rayResult.m_collisionObject
 *         if normalInWorldSpace:             # <<<<<<<<<<<<<<
 *             this.m_hitNormalWorld = rayResult.m_hitNormalLocal
 *         else:
 */
    goto __pyx_L3;
  }

  /* "bullet/bullet.pyx":1752
 *             this.m_hitNormalWorld = rayResult.m_hitNormalLocal
 *         else:
 *             this.m_hitNormalWorld = m_collisionObject.getWorldTransform().getBasis() * rayResult.m_hitNormalLocal             # <<<<<<<<<<<<<<
 * 
 *         this.m_hitPointWorld.setInterpolate3(this.m_rayFromWorld, this.m_rayToWorld, rayResult.m_hitFraction)
 */
  /*else*/ {
    this->m_hitNormalWorld = (m_collisionObject->getWorldTransform().getBasis() * __pyx_v_rayResult.m_hitNormalLocal);
  }
  __pyx_L3:;

  /* "bullet/bullet.pyx":1754
 *             this.m_hitNormalWorld = m_collisionObject.getWorldTransform().getBasis() * rayResult.m_hitNormalLocal
 * 
 *         this.m_hitPointWorld.setInterpolate3(this.m_rayFromWorld, this.m_rayToWorld, rayResult.m_hitFraction)             # <<<<<<<<<<<<<<
 *         return rayResult.m_hitFraction
 * 
 */
  this->m_hitPointWorld.setInterpolate3(this->m_rayFromWorld, this->m_rayToWorld, __pyx_v_rayResult.m_hitFraction);

  /* "bullet/bullet.pyx":1755
 * 
 *         this.m_hitPointWorld.setInterpolate3(this.m_rayFromWorld, this.m_rayToWorld, rayResult.m_hitFraction)
 *         return rayResult.m_hitFraction             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_rayResult.m_hitFraction;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":1744
 *         this.m_rayToWorld = toVec
 * 
 *     btScalar addSingleResult(LocalRayResult& rayResult, bool normalInWorldSpace):             # <<<<<<<<<<<<<<
 *         # caller already does the filter on the m_closestHitFraction
 *         assert(rayResult.m_hitFraction <= this.m_closestHitFraction)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("ClosestRayResultCallback.addSingleResult", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1771
 *     don't instantiate this class!
 *     """
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         cdef btActionInterface *action
 */

/* Python wrapper */
static void __pyx_pw_6bullet_6bullet_13DynamicsWorld_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6bullet_6bullet_13DynamicsWorld_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6bullet_6bullet_13DynamicsWorld___dealloc__(((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6bullet_6bullet_13DynamicsWorld___dealloc__(struct __pyx_obj_6bullet_6bullet_DynamicsWorld *__pyx_v_self) {
  btDynamicsWorld *__pyx_v_world;
  btActionInterface *__pyx_v_action;
  uintptr_t __pyx_v_worldPointer;
  uintptr_t __pyx_v_actionPointer;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *(*__pyx_t_8)(PyObject *);
  uintptr_t __pyx_t_9;
  uintptr_t __pyx_t_10;
  int __pyx_t_11;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "bullet/bullet.pyx":1772
 *     """
 *     def __dealloc__(self):
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr             # <<<<<<<<<<<<<<
 *         cdef btActionInterface *action
 *         cdef uintptr_t worldPointer, actionPointer
 */
  __pyx_v_world = ((btDynamicsWorld *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1776
 *         cdef uintptr_t worldPointer, actionPointer
 * 
 *         for (worldPointer, actionPointer) in _actions.keys():             # <<<<<<<<<<<<<<
 *             # If the action was added to this world...
 *             if worldPointer == <uintptr_t>self.thisptr:
 */
  if (unlikely(__pyx_v_6bullet_6bullet__actions == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "keys");
    __PYX_ERR(1, 1776, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyDict_Keys(__pyx_v_6bullet_6bullet__actions); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1776, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1776, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1776, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(1, 1776, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1776, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_1); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(1, 1776, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1776, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(1, 1776, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
      PyObject* sequence = __pyx_t_1;
      #if !CYTHON_COMPILING_IN_PYPY
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(1, 1776, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_5 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_5 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      #else
      __pyx_t_5 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1776, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 1776, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_7 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 1776, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_8 = Py_TYPE(__pyx_t_7)->tp_iternext;
      index = 0; __pyx_t_5 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_5)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_5);
      index = 1; __pyx_t_6 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_6)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7), 2) < 0) __PYX_ERR(1, 1776, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L6_unpacking_done;
      __pyx_L5_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(1, 1776, __pyx_L1_error)
      __pyx_L6_unpacking_done:;
    }
    __pyx_t_9 = __Pyx_PyInt_As_size_t(__pyx_t_5); if (unlikely((__pyx_t_9 == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 1776, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_t_6); if (unlikely((__pyx_t_10 == ((uintptr_t)-1)) && PyErr_Occurred())) __PYX_ERR(1, 1776, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_worldPointer = __pyx_t_9;
    __pyx_v_actionPointer = __pyx_t_10;

    /* "bullet/bullet.pyx":1778
 *         for (worldPointer, actionPointer) in _actions.keys():
 *             # If the action was added to this world...
 *             if worldPointer == <uintptr_t>self.thisptr:             # <<<<<<<<<<<<<<
 *                 action = <btActionInterface*>actionPointer
 *                 # remove it from this world
 */
    __pyx_t_11 = ((__pyx_v_worldPointer == ((uintptr_t)__pyx_v_self->__pyx_base.thisptr)) != 0);
    if (__pyx_t_11) {

      /* "bullet/bullet.pyx":1779
 *             # If the action was added to this world...
 *             if worldPointer == <uintptr_t>self.thisptr:
 *                 action = <btActionInterface*>actionPointer             # <<<<<<<<<<<<<<
 *                 # remove it from this world
 *                 world.removeAction(action)
 */
      __pyx_v_action = ((btActionInterface *)__pyx_v_actionPointer);

      /* "bullet/bullet.pyx":1781
 *                 action = <btActionInterface*>actionPointer
 *                 # remove it from this world
 *                 world.removeAction(action)             # <<<<<<<<<<<<<<
 *                 # and remove it from the global actions dictionary.
 *                 del _actions[worldPointer, actionPointer]
 */
      __pyx_v_world->removeAction(__pyx_v_action);

      /* "bullet/bullet.pyx":1783
 *                 world.removeAction(action)
 *                 # and remove it from the global actions dictionary.
 *                 del _actions[worldPointer, actionPointer]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      if (unlikely(__pyx_v_6bullet_6bullet__actions == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(1, 1783, __pyx_L1_error)
      }
      __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_worldPointer); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1783, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_6 = __Pyx_PyInt_FromSize_t(__pyx_v_actionPointer); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 1783, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1783, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
      __pyx_t_1 = 0;
      __pyx_t_6 = 0;
      if (unlikely(PyDict_DelItem(__pyx_v_6bullet_6bullet__actions, __pyx_t_5) < 0)) __PYX_ERR(1, 1783, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "bullet/bullet.pyx":1778
 *         for (worldPointer, actionPointer) in _actions.keys():
 *             # If the action was added to this world...
 *             if worldPointer == <uintptr_t>self.thisptr:             # <<<<<<<<<<<<<<
 *                 action = <btActionInterface*>actionPointer
 *                 # remove it from this world
 */
    }

    /* "bullet/bullet.pyx":1776
 *         cdef uintptr_t worldPointer, actionPointer
 * 
 *         for (worldPointer, actionPointer) in _actions.keys():             # <<<<<<<<<<<<<<
 *             # If the action was added to this world...
 *             if worldPointer == <uintptr_t>self.thisptr:
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "bullet/bullet.pyx":1771
 *     don't instantiate this class!
 *     """
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         cdef btActionInterface *action
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_WriteUnraisable("bullet.bullet.DynamicsWorld.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "bullet/bullet.pyx":1786
 * 
 * 
 *     def removeRigidBody(self, RigidBody body not None):             # <<<<<<<<<<<<<<
 *         """
 *         Remove a RigidBody from this DynamicsWorld.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_13DynamicsWorld_3removeRigidBody(PyObject *__pyx_v_self, PyObject *__pyx_v_body); /*proto*/
static char __pyx_doc_6bullet_6bullet_13DynamicsWorld_2removeRigidBody[] = "\n        Remove a RigidBody from this DynamicsWorld.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_13DynamicsWorld_3removeRigidBody(PyObject *__pyx_v_self, PyObject *__pyx_v_body) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("removeRigidBody (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_body), __pyx_ptype_6bullet_6bullet_RigidBody, 0, "body", 0))) __PYX_ERR(1, 1786, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_13DynamicsWorld_2removeRigidBody(((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_body));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_13DynamicsWorld_2removeRigidBody(struct __pyx_obj_6bullet_6bullet_DynamicsWorld *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_body) {
  btDynamicsWorld *__pyx_v_world;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("removeRigidBody", 0);

  /* "bullet/bullet.pyx":1790
 *         Remove a RigidBody from this DynamicsWorld.
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr             # <<<<<<<<<<<<<<
 *         world.removeRigidBody(<btRigidBody*>body.thisptr)
 * 
 */
  __pyx_v_world = ((btDynamicsWorld *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1791
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         world.removeRigidBody(<btRigidBody*>body.thisptr)             # <<<<<<<<<<<<<<
 * 
 *         body.thisptr.setUserPointer(NULL)
 */
  __pyx_v_world->removeRigidBody(((btRigidBody *)__pyx_v_body->__pyx_base.thisptr));

  /* "bullet/bullet.pyx":1793
 *         world.removeRigidBody(<btRigidBody*>body.thisptr)
 * 
 *         body.thisptr.setUserPointer(NULL)             # <<<<<<<<<<<<<<
 *         Py_DECREF(body)
 * 
 */
  __pyx_v_body->__pyx_base.thisptr->setUserPointer(NULL);

  /* "bullet/bullet.pyx":1794
 * 
 *         body.thisptr.setUserPointer(NULL)
 *         Py_DECREF(body)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  Py_DECREF(((PyObject *)__pyx_v_body));

  /* "bullet/bullet.pyx":1786
 * 
 * 
 *     def removeRigidBody(self, RigidBody body not None):             # <<<<<<<<<<<<<<
 *         """
 *         Remove a RigidBody from this DynamicsWorld.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1797
 * 
 * 
 *     def addAction(self, ActionInterface action not None):             # <<<<<<<<<<<<<<
 *         """
 *         Add a new ActionInterface to this DynamicsWorld.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_13DynamicsWorld_5addAction(PyObject *__pyx_v_self, PyObject *__pyx_v_action); /*proto*/
static char __pyx_doc_6bullet_6bullet_13DynamicsWorld_4addAction[] = "\n        Add a new ActionInterface to this DynamicsWorld.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_13DynamicsWorld_5addAction(PyObject *__pyx_v_self, PyObject *__pyx_v_action) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addAction (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_action), __pyx_ptype_6bullet_6bullet_ActionInterface, 0, "action", 0))) __PYX_ERR(1, 1797, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_13DynamicsWorld_4addAction(((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_ActionInterface *)__pyx_v_action));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_13DynamicsWorld_4addAction(struct __pyx_obj_6bullet_6bullet_DynamicsWorld *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_ActionInterface *__pyx_v_action) {
  btDynamicsWorld *__pyx_v_world;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("addAction", 0);

  /* "bullet/bullet.pyx":1801
 *         Add a new ActionInterface to this DynamicsWorld.
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr             # <<<<<<<<<<<<<<
 *         world.addAction(<btActionInterface*>action.thisptr)
 *         key = (<uintptr_t>self.thisptr, <uintptr_t>action.thisptr)
 */
  __pyx_v_world = ((btDynamicsWorld *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1802
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         world.addAction(<btActionInterface*>action.thisptr)             # <<<<<<<<<<<<<<
 *         key = (<uintptr_t>self.thisptr, <uintptr_t>action.thisptr)
 *         _actions[key] = action
 */
  __pyx_v_world->addAction(((btActionInterface *)__pyx_v_action->thisptr));

  /* "bullet/bullet.pyx":1803
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         world.addAction(<btActionInterface*>action.thisptr)
 *         key = (<uintptr_t>self.thisptr, <uintptr_t>action.thisptr)             # <<<<<<<<<<<<<<
 *         _actions[key] = action
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->__pyx_base.thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1803, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_action->thisptr)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1803, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1803, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_v_key = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "bullet/bullet.pyx":1804
 *         world.addAction(<btActionInterface*>action.thisptr)
 *         key = (<uintptr_t>self.thisptr, <uintptr_t>action.thisptr)
 *         _actions[key] = action             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if (unlikely(__pyx_v_6bullet_6bullet__actions == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 1804, __pyx_L1_error)
  }
  if (unlikely(PyDict_SetItem(__pyx_v_6bullet_6bullet__actions, __pyx_v_key, ((PyObject *)__pyx_v_action)) < 0)) __PYX_ERR(1, 1804, __pyx_L1_error)

  /* "bullet/bullet.pyx":1797
 * 
 * 
 *     def addAction(self, ActionInterface action not None):             # <<<<<<<<<<<<<<
 *         """
 *         Add a new ActionInterface to this DynamicsWorld.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("bullet.bullet.DynamicsWorld.addAction", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1807
 * 
 * 
 *     def removeAction(self, ActionInterface action not None):             # <<<<<<<<<<<<<<
 *         """
 *         Remove an ActionInterface which was previously added to this
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_13DynamicsWorld_7removeAction(PyObject *__pyx_v_self, PyObject *__pyx_v_action); /*proto*/
static char __pyx_doc_6bullet_6bullet_13DynamicsWorld_6removeAction[] = "\n        Remove an ActionInterface which was previously added to this\n        DynamicsWorld.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_13DynamicsWorld_7removeAction(PyObject *__pyx_v_self, PyObject *__pyx_v_action) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("removeAction (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_action), __pyx_ptype_6bullet_6bullet_ActionInterface, 0, "action", 0))) __PYX_ERR(1, 1807, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_13DynamicsWorld_6removeAction(((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_ActionInterface *)__pyx_v_action));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_13DynamicsWorld_6removeAction(struct __pyx_obj_6bullet_6bullet_DynamicsWorld *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_ActionInterface *__pyx_v_action) {
  btDynamicsWorld *__pyx_v_world;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("removeAction", 0);

  /* "bullet/bullet.pyx":1812
 *         DynamicsWorld.
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr             # <<<<<<<<<<<<<<
 *         world.removeAction(<btActionInterface*>action.thisptr)
 *         key = (<uintptr_t>self.thisptr, <uintptr_t>action.thisptr)
 */
  __pyx_v_world = ((btDynamicsWorld *)__pyx_v_self->__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1813
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         world.removeAction(<btActionInterface*>action.thisptr)             # <<<<<<<<<<<<<<
 *         key = (<uintptr_t>self.thisptr, <uintptr_t>action.thisptr)
 *         del _actions[key]
 */
  __pyx_v_world->removeAction(((btActionInterface *)__pyx_v_action->thisptr));

  /* "bullet/bullet.pyx":1814
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         world.removeAction(<btActionInterface*>action.thisptr)
 *         key = (<uintptr_t>self.thisptr, <uintptr_t>action.thisptr)             # <<<<<<<<<<<<<<
 *         del _actions[key]
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_self->__pyx_base.thisptr)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1814, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_FromSize_t(((uintptr_t)__pyx_v_action->thisptr)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1814, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1814, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_v_key = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "bullet/bullet.pyx":1815
 *         world.removeAction(<btActionInterface*>action.thisptr)
 *         key = (<uintptr_t>self.thisptr, <uintptr_t>action.thisptr)
 *         del _actions[key]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if (unlikely(__pyx_v_6bullet_6bullet__actions == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 1815, __pyx_L1_error)
  }
  if (unlikely(PyDict_DelItem(__pyx_v_6bullet_6bullet__actions, __pyx_v_key) < 0)) __PYX_ERR(1, 1815, __pyx_L1_error)

  /* "bullet/bullet.pyx":1807
 * 
 * 
 *     def removeAction(self, ActionInterface action not None):             # <<<<<<<<<<<<<<
 *         """
 *         Remove an ActionInterface which was previously added to this
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("bullet.bullet.DynamicsWorld.removeAction", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_13DynamicsWorld_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_13DynamicsWorld_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_13DynamicsWorld_8__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_13DynamicsWorld_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_DynamicsWorld *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__81, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.DynamicsWorld.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_13DynamicsWorld_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_13DynamicsWorld_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_13DynamicsWorld_10__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_13DynamicsWorld_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_DynamicsWorld *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__82, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.DynamicsWorld.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1828
 *     cdef ConstraintSolver solver
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None,
 */

/* Python wrapper */
static int __pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *__pyx_v_dispatcher = 0;
  struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *__pyx_v_broadphase = 0;
  struct __pyx_obj_6bullet_6bullet_ConstraintSolver *__pyx_v_solver = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dispatcher,&__pyx_n_s_broadphase,&__pyx_n_s_solver,0};
    PyObject* values[3] = {0,0,0};

    /* "bullet/bullet.pyx":1829
 * 
 *     def __init__(self,
 *                  CollisionDispatcher dispatcher = None,             # <<<<<<<<<<<<<<
 *                  BroadphaseInterface broadphase = None,
 *                  ConstraintSolver solver = None):
 */
    values[0] = (PyObject *)((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)Py_None);

    /* "bullet/bullet.pyx":1830
 *     def __init__(self,
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None,             # <<<<<<<<<<<<<<
 *                  ConstraintSolver solver = None):
 * 
 */
    values[1] = (PyObject *)((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)Py_None);

    /* "bullet/bullet.pyx":1831
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None,
 *                  ConstraintSolver solver = None):             # <<<<<<<<<<<<<<
 * 
 *         if dispatcher is None:
 */
    values[2] = (PyObject *)((struct __pyx_obj_6bullet_6bullet_ConstraintSolver *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_dispatcher);
          if (value) { values[0] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_broadphase);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_solver);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(1, 1828, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_dispatcher = ((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)values[0]);
    __pyx_v_broadphase = ((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)values[1]);
    __pyx_v_solver = ((struct __pyx_obj_6bullet_6bullet_ConstraintSolver *)values[2]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1828, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.DiscreteDynamicsWorld.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_dispatcher), __pyx_ptype_6bullet_6bullet_CollisionDispatcher, 1, "dispatcher", 0))) __PYX_ERR(1, 1829, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_broadphase), __pyx_ptype_6bullet_6bullet_BroadphaseInterface, 1, "broadphase", 0))) __PYX_ERR(1, 1830, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_solver), __pyx_ptype_6bullet_6bullet_ConstraintSolver, 1, "solver", 0))) __PYX_ERR(1, 1831, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld___init__(((struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)__pyx_v_self), __pyx_v_dispatcher, __pyx_v_broadphase, __pyx_v_solver);

  /* "bullet/bullet.pyx":1828
 *     cdef ConstraintSolver solver
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None,
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld___init__(struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *__pyx_v_dispatcher, struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *__pyx_v_broadphase, struct __pyx_obj_6bullet_6bullet_ConstraintSolver *__pyx_v_solver) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_RefNannySetupContext("__init__", 0);
  __Pyx_INCREF((PyObject *)__pyx_v_dispatcher);
  __Pyx_INCREF((PyObject *)__pyx_v_broadphase);
  __Pyx_INCREF((PyObject *)__pyx_v_solver);

  /* "bullet/bullet.pyx":1833
 *                  ConstraintSolver solver = None):
 * 
 *         if dispatcher is None:             # <<<<<<<<<<<<<<
 *             dispatcher = CollisionDispatcher()
 *         if solver is None:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_dispatcher) == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "bullet/bullet.pyx":1834
 * 
 *         if dispatcher is None:
 *             dispatcher = CollisionDispatcher()             # <<<<<<<<<<<<<<
 *         if solver is None:
 *             solver = SequentialImpulseConstraintSolver()
 */
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_CollisionDispatcher), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1834, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_dispatcher, ((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "bullet/bullet.pyx":1833
 *                  ConstraintSolver solver = None):
 * 
 *         if dispatcher is None:             # <<<<<<<<<<<<<<
 *             dispatcher = CollisionDispatcher()
 *         if solver is None:
 */
  }

  /* "bullet/bullet.pyx":1835
 *         if dispatcher is None:
 *             dispatcher = CollisionDispatcher()
 *         if solver is None:             # <<<<<<<<<<<<<<
 *             solver = SequentialImpulseConstraintSolver()
 *         if broadphase is None:
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_solver) == Py_None);
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "bullet/bullet.pyx":1836
 *             dispatcher = CollisionDispatcher()
 *         if solver is None:
 *             solver = SequentialImpulseConstraintSolver()             # <<<<<<<<<<<<<<
 *         if broadphase is None:
 *             broadphase = AxisSweep3(Vector3(-100, -100, -100), Vector3(100, 100, 100))
 */
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_SequentialImpulseConstraintSolver), __pyx_empty_tuple, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1836, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_solver, ((struct __pyx_obj_6bullet_6bullet_ConstraintSolver *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "bullet/bullet.pyx":1835
 *         if dispatcher is None:
 *             dispatcher = CollisionDispatcher()
 *         if solver is None:             # <<<<<<<<<<<<<<
 *             solver = SequentialImpulseConstraintSolver()
 *         if broadphase is None:
 */
  }

  /* "bullet/bullet.pyx":1837
 *         if solver is None:
 *             solver = SequentialImpulseConstraintSolver()
 *         if broadphase is None:             # <<<<<<<<<<<<<<
 *             broadphase = AxisSweep3(Vector3(-100, -100, -100), Vector3(100, 100, 100))
 * 
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_broadphase) == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "bullet/bullet.pyx":1838
 *             solver = SequentialImpulseConstraintSolver()
 *         if broadphase is None:
 *             broadphase = AxisSweep3(Vector3(-100, -100, -100), Vector3(100, 100, 100))             # <<<<<<<<<<<<<<
 * 
 *         self.solver = solver
 */
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Vector3), __pyx_tuple__83, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1838, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Vector3), __pyx_tuple__84, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1838, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1838, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_AxisSweep3), __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1838, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_broadphase, ((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "bullet/bullet.pyx":1837
 *         if solver is None:
 *             solver = SequentialImpulseConstraintSolver()
 *         if broadphase is None:             # <<<<<<<<<<<<<<
 *             broadphase = AxisSweep3(Vector3(-100, -100, -100), Vector3(100, 100, 100))
 * 
 */
  }

  /* "bullet/bullet.pyx":1840
 *             broadphase = AxisSweep3(Vector3(-100, -100, -100), Vector3(100, 100, 100))
 * 
 *         self.solver = solver             # <<<<<<<<<<<<<<
 *         self.thisptr = <btCollisionWorld*>new btDiscreteDynamicsWorld(
 *             dispatcher.thisptr, broadphase.thisptr,
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_solver));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_solver));
  __Pyx_GOTREF(__pyx_v_self->solver);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->solver));
  __pyx_v_self->solver = __pyx_v_solver;

  /* "bullet/bullet.pyx":1841
 * 
 *         self.solver = solver
 *         self.thisptr = <btCollisionWorld*>new btDiscreteDynamicsWorld(             # <<<<<<<<<<<<<<
 *             dispatcher.thisptr, broadphase.thisptr,
 *             solver.thisptr, dispatcher.config)
 */
  __pyx_v_self->__pyx_base.__pyx_base.thisptr = ((btCollisionWorld *)new btDiscreteDynamicsWorld(__pyx_v_dispatcher->thisptr, __pyx_v_broadphase->thisptr, __pyx_v_solver->thisptr, __pyx_v_dispatcher->config));

  /* "bullet/bullet.pyx":1845
 *             solver.thisptr, dispatcher.config)
 * 
 *         DynamicsWorld.__init__(self, dispatcher, broadphase)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_6bullet_6bullet_DynamicsWorld), __pyx_n_s_init); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1845, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_6 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_5)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, ((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_dispatcher), ((PyObject *)__pyx_v_broadphase)};
    __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_6, 3+__pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1845, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_4);
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, ((PyObject *)__pyx_v_self), ((PyObject *)__pyx_v_dispatcher), ((PyObject *)__pyx_v_broadphase)};
    __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_6, 3+__pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1845, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_4);
  } else
  #endif
  {
    __pyx_t_7 = PyTuple_New(3+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 1845, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, ((PyObject *)__pyx_v_self));
    __Pyx_INCREF(((PyObject *)__pyx_v_dispatcher));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_dispatcher));
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, ((PyObject *)__pyx_v_dispatcher));
    __Pyx_INCREF(((PyObject *)__pyx_v_broadphase));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_broadphase));
    PyTuple_SET_ITEM(__pyx_t_7, 2+__pyx_t_6, ((PyObject *)__pyx_v_broadphase));
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1845, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "bullet/bullet.pyx":1828
 *     cdef ConstraintSolver solver
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("bullet.bullet.DiscreteDynamicsWorld.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_dispatcher);
  __Pyx_XDECREF((PyObject *)__pyx_v_broadphase);
  __Pyx_XDECREF((PyObject *)__pyx_v_solver);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1848
 * 
 * 
 *     def addRigidBody(self, RigidBody body not None, group=None, mask=None):             # <<<<<<<<<<<<<<
 *         """
 *         Add a new RigidBody to this DynamicsWorld.  Optionally give it a
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_3addRigidBody(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_21DiscreteDynamicsWorld_2addRigidBody[] = "\n        Add a new RigidBody to this DynamicsWorld.  Optionally give it a\n        customized collision filter group and mask.\n\n        This always calls the three-argument version of\n        btDiscreteDynamicsWorld::addRigidBody, never the one argument version\n        inherited from btCollisionWorld.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_3addRigidBody(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_body = 0;
  PyObject *__pyx_v_group = 0;
  PyObject *__pyx_v_mask = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("addRigidBody (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_body,&__pyx_n_s_group,&__pyx_n_s_mask,0};
    PyObject* values[3] = {0,0,0};
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_body)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_group);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_mask);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "addRigidBody") < 0)) __PYX_ERR(1, 1848, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_body = ((struct __pyx_obj_6bullet_6bullet_RigidBody *)values[0]);
    __pyx_v_group = values[1];
    __pyx_v_mask = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("addRigidBody", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1848, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.DiscreteDynamicsWorld.addRigidBody", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_body), __pyx_ptype_6bullet_6bullet_RigidBody, 0, "body", 0))) __PYX_ERR(1, 1848, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_2addRigidBody(((struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)__pyx_v_self), __pyx_v_body, __pyx_v_group, __pyx_v_mask);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_2addRigidBody(struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_body, PyObject *__pyx_v_group, PyObject *__pyx_v_mask) {
  btDiscreteDynamicsWorld *__pyx_v_world;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  short __pyx_t_4;
  short __pyx_t_5;
  __Pyx_RefNannySetupContext("addRigidBody", 0);
  __Pyx_INCREF(__pyx_v_group);
  __Pyx_INCREF(__pyx_v_mask);

  /* "bullet/bullet.pyx":1857
 *         inherited from btCollisionWorld.
 *         """
 *         cdef btDiscreteDynamicsWorld *world = <btDiscreteDynamicsWorld*>self.thisptr             # <<<<<<<<<<<<<<
 *         # Supply a default for one or the other if either is not given
 *         if group is None:
 */
  __pyx_v_world = ((btDiscreteDynamicsWorld *)__pyx_v_self->__pyx_base.__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1859
 *         cdef btDiscreteDynamicsWorld *world = <btDiscreteDynamicsWorld*>self.thisptr
 *         # Supply a default for one or the other if either is not given
 *         if group is None:             # <<<<<<<<<<<<<<
 *             group = BroadphaseProxy.DefaultFilter
 *         if mask is None:
 */
  __pyx_t_1 = (__pyx_v_group == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "bullet/bullet.pyx":1860
 *         # Supply a default for one or the other if either is not given
 *         if group is None:
 *             group = BroadphaseProxy.DefaultFilter             # <<<<<<<<<<<<<<
 *         if mask is None:
 *             mask = BroadphaseProxy.AllFilter
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_6bullet_6bullet_BroadphaseProxy), __pyx_n_s_DefaultFilter); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1860, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_group, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "bullet/bullet.pyx":1859
 *         cdef btDiscreteDynamicsWorld *world = <btDiscreteDynamicsWorld*>self.thisptr
 *         # Supply a default for one or the other if either is not given
 *         if group is None:             # <<<<<<<<<<<<<<
 *             group = BroadphaseProxy.DefaultFilter
 *         if mask is None:
 */
  }

  /* "bullet/bullet.pyx":1861
 *         if group is None:
 *             group = BroadphaseProxy.DefaultFilter
 *         if mask is None:             # <<<<<<<<<<<<<<
 *             mask = BroadphaseProxy.AllFilter
 * 
 */
  __pyx_t_2 = (__pyx_v_mask == Py_None);
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "bullet/bullet.pyx":1862
 *             group = BroadphaseProxy.DefaultFilter
 *         if mask is None:
 *             mask = BroadphaseProxy.AllFilter             # <<<<<<<<<<<<<<
 * 
 *         # See comments in CollisionWorld.addCollisionBody for an explanation of
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_6bullet_6bullet_BroadphaseProxy), __pyx_n_s_AllFilter); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1862, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_mask, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "bullet/bullet.pyx":1861
 *         if group is None:
 *             group = BroadphaseProxy.DefaultFilter
 *         if mask is None:             # <<<<<<<<<<<<<<
 *             mask = BroadphaseProxy.AllFilter
 * 
 */
  }

  /* "bullet/bullet.pyx":1866
 *         # See comments in CollisionWorld.addCollisionBody for an explanation of
 *         # these two lines.
 *         Py_INCREF(body)             # <<<<<<<<<<<<<<
 *         body.thisptr.setUserPointer(<void*>body)
 * 
 */
  Py_INCREF(((PyObject *)__pyx_v_body));

  /* "bullet/bullet.pyx":1867
 *         # these two lines.
 *         Py_INCREF(body)
 *         body.thisptr.setUserPointer(<void*>body)             # <<<<<<<<<<<<<<
 * 
 *         world.addRigidBody(<btRigidBody*>body.thisptr, group, mask)
 */
  __pyx_v_body->__pyx_base.thisptr->setUserPointer(((void *)__pyx_v_body));

  /* "bullet/bullet.pyx":1869
 *         body.thisptr.setUserPointer(<void*>body)
 * 
 *         world.addRigidBody(<btRigidBody*>body.thisptr, group, mask)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_4 = __Pyx_PyInt_As_short(__pyx_v_group); if (unlikely((__pyx_t_4 == (short)-1) && PyErr_Occurred())) __PYX_ERR(1, 1869, __pyx_L1_error)
  __pyx_t_5 = __Pyx_PyInt_As_short(__pyx_v_mask); if (unlikely((__pyx_t_5 == (short)-1) && PyErr_Occurred())) __PYX_ERR(1, 1869, __pyx_L1_error)
  __pyx_v_world->addRigidBody(((btRigidBody *)__pyx_v_body->__pyx_base.thisptr), __pyx_t_4, __pyx_t_5);

  /* "bullet/bullet.pyx":1848
 * 
 * 
 *     def addRigidBody(self, RigidBody body not None, group=None, mask=None):             # <<<<<<<<<<<<<<
 *         """
 *         Add a new RigidBody to this DynamicsWorld.  Optionally give it a
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("bullet.bullet.DiscreteDynamicsWorld.addRigidBody", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_group);
  __Pyx_XDECREF(__pyx_v_mask);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1872
 * 
 * 
 *     def setGravity(self, Vector3 gravity):             # <<<<<<<<<<<<<<
 *         """
 *         Set the gravity in this world.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_5setGravity(PyObject *__pyx_v_self, PyObject *__pyx_v_gravity); /*proto*/
static char __pyx_doc_6bullet_6bullet_21DiscreteDynamicsWorld_4setGravity[] = "\n        Set the gravity in this world.\n        XXX This belongs on DynamicsWorld.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_5setGravity(PyObject *__pyx_v_self, PyObject *__pyx_v_gravity) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setGravity (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_gravity), __pyx_ptype_6bullet_6bullet_Vector3, 1, "gravity", 0))) __PYX_ERR(1, 1872, __pyx_L1_error)
  __pyx_r = __pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_4setGravity(((struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)__pyx_v_self), ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_gravity));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_4setGravity(struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *__pyx_v_self, struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_gravity) {
  btDynamicsWorld *__pyx_v_world;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setGravity", 0);

  /* "bullet/bullet.pyx":1877
 *         XXX This belongs on DynamicsWorld.
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr             # <<<<<<<<<<<<<<
 *         world.setGravity(btVector3(gravity.x, gravity.y, gravity.z))
 * 
 */
  __pyx_v_world = ((btDynamicsWorld *)__pyx_v_self->__pyx_base.__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1878
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         world.setGravity(btVector3(gravity.x, gravity.y, gravity.z))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_world->setGravity(btVector3(__pyx_v_gravity->x, __pyx_v_gravity->y, __pyx_v_gravity->z));

  /* "bullet/bullet.pyx":1872
 * 
 * 
 *     def setGravity(self, Vector3 gravity):             # <<<<<<<<<<<<<<
 *         """
 *         Set the gravity in this world.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1881
 * 
 * 
 *     def getGravity(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the gravity in this world.
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_7getGravity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_21DiscreteDynamicsWorld_6getGravity[] = "\n        Get the gravity in this world.\n        XXX This belongs on DynamicsWorld.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_7getGravity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getGravity (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_6getGravity(((struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_6getGravity(struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *__pyx_v_self) {
  btDynamicsWorld *__pyx_v_world;
  btVector3 __pyx_v_gravity;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("getGravity", 0);

  /* "bullet/bullet.pyx":1886
 *         XXX This belongs on DynamicsWorld.
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr             # <<<<<<<<<<<<<<
 *         cdef btVector3 gravity = world.getGravity()
 *         return Vector3(gravity.getX(), gravity.getY(), gravity.getZ())
 */
  __pyx_v_world = ((btDynamicsWorld *)__pyx_v_self->__pyx_base.__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1887
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         cdef btVector3 gravity = world.getGravity()             # <<<<<<<<<<<<<<
 *         return Vector3(gravity.getX(), gravity.getY(), gravity.getZ())
 * 
 */
  __pyx_v_gravity = __pyx_v_world->getGravity();

  /* "bullet/bullet.pyx":1888
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         cdef btVector3 gravity = world.getGravity()
 *         return Vector3(gravity.getX(), gravity.getY(), gravity.getZ())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_gravity.getX()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1888, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_gravity.getY()); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1888, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_gravity.getZ()); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1888, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 1888, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_6bullet_6bullet_Vector3), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1888, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":1881
 * 
 * 
 *     def getGravity(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the gravity in this world.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.DiscreteDynamicsWorld.getGravity", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bullet/bullet.pyx":1891
 * 
 * 
 *     def stepSimulation(self,             # <<<<<<<<<<<<<<
 *                        btScalar timeStep,
 *                        int maxSubSteps = 1,
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_9stepSimulation(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_21DiscreteDynamicsWorld_8stepSimulation[] = "\n        Advance time in the simulation.\n\n        timeStep specifies the amount of simulation time which will pass during\n        this call.\n\n        maxSubSteps specifies the maximum number of simulation steps which will\n        be taken trying to reach the point in the future specified by timeStep.\n\n        fixedTimeStep specifies the size of each simulation step.  Bullet works\n        best if this value is always the same.\n\n        Observe that if fixedTimeStep * maxSubSteps < timeStep, simulation time\n        is lost and the simulation will not advance as far as you intended it\n        to.\n\n        The number of simulation steps taken is returned.\n        ";
static PyObject *__pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_9stepSimulation(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  btScalar __pyx_v_timeStep;
  int __pyx_v_maxSubSteps;
  btScalar __pyx_v_fixedTimeStep;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("stepSimulation (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_timeStep,&__pyx_n_s_maxSubSteps,&__pyx_n_s_fixedTimeStep,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_timeStep)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_maxSubSteps);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_fixedTimeStep);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "stepSimulation") < 0)) __PYX_ERR(1, 1891, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_timeStep = __pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_timeStep == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 1892, __pyx_L3_error)
    if (values[1]) {
      __pyx_v_maxSubSteps = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_maxSubSteps == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 1893, __pyx_L3_error)
    } else {
      __pyx_v_maxSubSteps = ((int)1);
    }
    if (values[2]) {
      __pyx_v_fixedTimeStep = __pyx_PyFloat_AsFloat(values[2]); if (unlikely((__pyx_v_fixedTimeStep == ((btScalar)-1)) && PyErr_Occurred())) __PYX_ERR(1, 1894, __pyx_L3_error)
    } else {
      __pyx_v_fixedTimeStep = __pyx_k__85;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("stepSimulation", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1891, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.DiscreteDynamicsWorld.stepSimulation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_8stepSimulation(((struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)__pyx_v_self), __pyx_v_timeStep, __pyx_v_maxSubSteps, __pyx_v_fixedTimeStep);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_8stepSimulation(struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *__pyx_v_self, btScalar __pyx_v_timeStep, int __pyx_v_maxSubSteps, btScalar __pyx_v_fixedTimeStep) {
  btDynamicsWorld *__pyx_v_world;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("stepSimulation", 0);

  /* "bullet/bullet.pyx":1913
 *         The number of simulation steps taken is returned.
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr             # <<<<<<<<<<<<<<
 *         return world.stepSimulation(timeStep, maxSubSteps, fixedTimeStep)
 */
  __pyx_v_world = ((btDynamicsWorld *)__pyx_v_self->__pyx_base.__pyx_base.thisptr);

  /* "bullet/bullet.pyx":1914
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         return world.stepSimulation(timeStep, maxSubSteps, fixedTimeStep)             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_world->stepSimulation(__pyx_v_timeStep, __pyx_v_maxSubSteps, __pyx_v_fixedTimeStep)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 1914, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bullet/bullet.pyx":1891
 * 
 * 
 *     def stepSimulation(self,             # <<<<<<<<<<<<<<
 *                        btScalar timeStep,
 *                        int maxSubSteps = 1,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.DiscreteDynamicsWorld.stepSimulation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_10__reduce_cython__(((struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__86, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.DiscreteDynamicsWorld.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_12__setstate_cython__(((struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__87, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.DiscreteDynamicsWorld.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_BroadphaseProxy(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     if __pyx_checksum != 0x497a8da:
 *         from pickle import PickleError as __pyx_PickleError
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bullet_6bullet_1__pyx_unpickle_BroadphaseProxy(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_6bullet_6bullet_1__pyx_unpickle_BroadphaseProxy = {"__pyx_unpickle_BroadphaseProxy", (PyCFunction)__pyx_pw_6bullet_6bullet_1__pyx_unpickle_BroadphaseProxy, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_6bullet_6bullet_1__pyx_unpickle_BroadphaseProxy(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_BroadphaseProxy (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_BroadphaseProxy", 1, 3, 3, 1); __PYX_ERR(0, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_BroadphaseProxy", 1, 3, 3, 2); __PYX_ERR(0, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_BroadphaseProxy") < 0)) __PYX_ERR(0, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_BroadphaseProxy", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.__pyx_unpickle_BroadphaseProxy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6bullet_6bullet___pyx_unpickle_BroadphaseProxy(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bullet_6bullet___pyx_unpickle_BroadphaseProxy(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = NULL;
  PyObject *__pyx_v___pyx_result = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  __Pyx_RefNannySetupContext("__pyx_unpickle_BroadphaseProxy", 0);

  /* "(tree fragment)":2
 * def __pyx_unpickle_BroadphaseProxy(__pyx_type, long __pyx_checksum, __pyx_state):
 *     if __pyx_checksum != 0x497a8da:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x497a8da = (collisionFilterGroup, collisionFilterMask))" % __pyx_checksum)
 */
  __pyx_t_1 = ((__pyx_v___pyx_checksum != 0x497a8da) != 0);
  if (__pyx_t_1) {

    /* "(tree fragment)":3
 * def __pyx_unpickle_BroadphaseProxy(__pyx_type, long __pyx_checksum, __pyx_state):
 *     if __pyx_checksum != 0x497a8da:
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x497a8da = (collisionFilterGroup, collisionFilterMask))" % __pyx_checksum)
 *     __pyx_result = BroadphaseProxy.__new__(__pyx_type)
 */
    __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_PickleError);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_2, -1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_v___pyx_PickleError = __pyx_t_2;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":4
 *     if __pyx_checksum != 0x497a8da:
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x497a8da = (collisionFilterGroup, collisionFilterMask))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = BroadphaseProxy.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_2 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_s_vs_0x49, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_2 = __pyx_v___pyx_PickleError; __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_2)) {
        PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
        PyObject *__pyx_temp[2] = {__pyx_t_5, __pyx_t_4};
        __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else
      #endif
      {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __pyx_t_5 = NULL;
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 4, __pyx_L1_error)

    /* "(tree fragment)":2
 * def __pyx_unpickle_BroadphaseProxy(__pyx_type, long __pyx_checksum, __pyx_state):
 *     if __pyx_checksum != 0x497a8da:             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x497a8da = (collisionFilterGroup, collisionFilterMask))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":5
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x497a8da = (collisionFilterGroup, collisionFilterMask))" % __pyx_checksum)
 *     __pyx_result = BroadphaseProxy.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_BroadphaseProxy__set_state(<BroadphaseProxy> __pyx_result, __pyx_state)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_6bullet_6bullet_BroadphaseProxy), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (!__pyx_t_6) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v___pyx_type); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
  } else {
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_6, __pyx_v___pyx_type};
      __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[2] = {__pyx_t_6, __pyx_v___pyx_type};
      __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else
    #endif
    {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 5, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6); __pyx_t_6 = NULL;
      __Pyx_INCREF(__pyx_v___pyx_type);
      __Pyx_GIVEREF(__pyx_v___pyx_type);
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_v___pyx_type);
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v___pyx_result = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "(tree fragment)":6
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x497a8da = (collisionFilterGroup, collisionFilterMask))" % __pyx_checksum)
 *     __pyx_result = BroadphaseProxy.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_BroadphaseProxy__set_state(<BroadphaseProxy> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_1 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_7 = (__pyx_t_1 != 0);
  if (__pyx_t_7) {

    /* "(tree fragment)":7
 *     __pyx_result = BroadphaseProxy.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_BroadphaseProxy__set_state(<BroadphaseProxy> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_BroadphaseProxy__set_state(BroadphaseProxy __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(0, 7, __pyx_L1_error)
    __pyx_t_3 = __pyx_f_6bullet_6bullet___pyx_unpickle_BroadphaseProxy__set_state(((struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 7, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *         raise __pyx_PickleError("Incompatible checksums (%s vs 0x497a8da = (collisionFilterGroup, collisionFilterMask))" % __pyx_checksum)
 *     __pyx_result = BroadphaseProxy.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_BroadphaseProxy__set_state(<BroadphaseProxy> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":8
 *     if __pyx_state is not None:
 *         __pyx_unpickle_BroadphaseProxy__set_state(<BroadphaseProxy> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_BroadphaseProxy__set_state(BroadphaseProxy __pyx_result, tuple __pyx_state):
 *     __pyx_result.collisionFilterGroup = __pyx_state[0]; __pyx_result.collisionFilterMask = __pyx_state[1]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_BroadphaseProxy(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     if __pyx_checksum != 0x497a8da:
 *         from pickle import PickleError as __pyx_PickleError
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("bullet.bullet.__pyx_unpickle_BroadphaseProxy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":9
 *         __pyx_unpickle_BroadphaseProxy__set_state(<BroadphaseProxy> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_BroadphaseProxy__set_state(BroadphaseProxy __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.collisionFilterGroup = __pyx_state[0]; __pyx_result.collisionFilterMask = __pyx_state[1]
 *     if len(__pyx_state) > 2 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_6bullet_6bullet___pyx_unpickle_BroadphaseProxy__set_state(struct __pyx_obj_6bullet_6bullet_BroadphaseProxy *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  short __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  __Pyx_RefNannySetupContext("__pyx_unpickle_BroadphaseProxy__set_state", 0);

  /* "(tree fragment)":10
 *     return __pyx_result
 * cdef __pyx_unpickle_BroadphaseProxy__set_state(BroadphaseProxy __pyx_result, tuple __pyx_state):
 *     __pyx_result.collisionFilterGroup = __pyx_state[0]; __pyx_result.collisionFilterMask = __pyx_state[1]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 2 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[2])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 10, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_short(__pyx_t_1); if (unlikely((__pyx_t_2 == (short)-1) && PyErr_Occurred())) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->collisionFilterGroup = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 10, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_short(__pyx_t_1); if (unlikely((__pyx_t_2 == (short)-1) && PyErr_Occurred())) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->collisionFilterMask = __pyx_t_2;

  /* "(tree fragment)":11
 * cdef __pyx_unpickle_BroadphaseProxy__set_state(BroadphaseProxy __pyx_result, tuple __pyx_state):
 *     __pyx_result.collisionFilterGroup = __pyx_state[0]; __pyx_result.collisionFilterMask = __pyx_state[1]
 *     if len(__pyx_state) > 2 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[2])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 11, __pyx_L1_error)
  }
  __pyx_t_4 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(0, 11, __pyx_L1_error)
  __pyx_t_5 = ((__pyx_t_4 > 2) != 0);
  if (__pyx_t_5) {
  } else {
    __pyx_t_3 = __pyx_t_5;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_5 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 11, __pyx_L1_error)
  __pyx_t_6 = (__pyx_t_5 != 0);
  __pyx_t_3 = __pyx_t_6;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_3) {

    /* "(tree fragment)":12
 *     __pyx_result.collisionFilterGroup = __pyx_state[0]; __pyx_result.collisionFilterMask = __pyx_state[1]
 *     if len(__pyx_state) > 2 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[2])             # <<<<<<<<<<<<<<
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 12, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_update); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 12, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 12, __pyx_L1_error)
    }
    __pyx_t_7 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 12, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    if (!__pyx_t_9) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 12, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_7};
        __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_8, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 12, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_8)) {
        PyObject *__pyx_temp[2] = {__pyx_t_9, __pyx_t_7};
        __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_8, __pyx_temp+1-1, 1+1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 12, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      } else
      #endif
      {
        __pyx_t_10 = PyTuple_New(1+1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 12, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_9); __pyx_t_9 = NULL;
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_10, 0+1, __pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_10, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 12, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      }
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":11
 * cdef __pyx_unpickle_BroadphaseProxy__set_state(BroadphaseProxy __pyx_result, tuple __pyx_state):
 *     __pyx_result.collisionFilterGroup = __pyx_state[0]; __pyx_result.collisionFilterMask = __pyx_state[1]
 *     if len(__pyx_state) > 2 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[2])
 */
  }

  /* "(tree fragment)":9
 *         __pyx_unpickle_BroadphaseProxy__set_state(<BroadphaseProxy> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_BroadphaseProxy__set_state(BroadphaseProxy __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.collisionFilterGroup = __pyx_state[0]; __pyx_result.collisionFilterMask = __pyx_state[1]
 *     if len(__pyx_state) > 2 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("bullet.bullet.__pyx_unpickle_BroadphaseProxy__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":214
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

/* Python wrapper */
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5numpy_7ndarray___getbuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_copy_shape;
  int __pyx_v_i;
  int __pyx_v_ndim;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  int __pyx_v_t;
  char *__pyx_v_f;
  PyArray_Descr *__pyx_v_descr = 0;
  int __pyx_v_offset;
  int __pyx_v_hasfields;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  char *__pyx_t_7;
  __Pyx_RefNannySetupContext("__getbuffer__", 0);
  if (__pyx_v_info != NULL) {
    __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(__pyx_v_info->obj);
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":220
 *             # of flags
 * 
 *             if info == NULL: return             # <<<<<<<<<<<<<<
 * 
 *             cdef int copy_shape, i, ndim
 */
  __pyx_t_1 = ((__pyx_v_info == NULL) != 0);
  if (__pyx_t_1) {
    __pyx_r = 0;
    goto __pyx_L0;
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":223
 * 
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 */
  __pyx_v_endian_detector = 1;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":224
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 * 
 *             ndim = PyArray_NDIM(self)
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":226
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_v_ndim = PyArray_NDIM(__pyx_v_self);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":228
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":229
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 copy_shape = 1             # <<<<<<<<<<<<<<
 *             else:
 *                 copy_shape = 0
 */
    __pyx_v_copy_shape = 1;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":228
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
    goto __pyx_L4;
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":231
 *                 copy_shape = 1
 *             else:
 *                 copy_shape = 0             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 */
  /*else*/ {
    __pyx_v_copy_shape = 0;
  }
  __pyx_L4:;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":233
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L6_bool_binop_done;
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":234
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_C_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L6_bool_binop_done:;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":233
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  if (__pyx_t_1) {

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":235
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__88, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 235, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(2, 235, __pyx_L1_error)

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":233
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":237
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L9_bool_binop_done;
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":238
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_F_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L9_bool_binop_done:;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":237
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  if (__pyx_t_1) {

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":239
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__89, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 239, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(2, 239, __pyx_L1_error)

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":237
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":241
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
 *             info.ndim = ndim
 *             if copy_shape:
 */
  __pyx_v_info->buf = PyArray_DATA(__pyx_v_self);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":242
 * 
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim             # <<<<<<<<<<<<<<
 *             if copy_shape:
 *                 # Allocate new buffer for strides and shape info.
 */
  __pyx_v_info->ndim = __pyx_v_ndim;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":243
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
  __pyx_t_1 = (__pyx_v_copy_shape != 0);
  if (__pyx_t_1) {

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":246
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>PyObject_Malloc(sizeof(Py_ssize_t) * 2 * <size_t>ndim)             # <<<<<<<<<<<<<<
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 */
    __pyx_v_info->strides = ((Py_ssize_t *)PyObject_Malloc((((sizeof(Py_ssize_t)) * 2) * ((size_t)__pyx_v_ndim))));

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":247
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>PyObject_Malloc(sizeof(Py_ssize_t) * 2 * <size_t>ndim)
 *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 */
    __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":248
 *                 info.strides = <Py_ssize_t*>PyObject_Malloc(sizeof(Py_ssize_t) * 2 * <size_t>ndim)
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):             # <<<<<<<<<<<<<<
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 */
    __pyx_t_4 = __pyx_v_ndim;
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":249
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 */
      (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(__pyx_v_self)[__pyx_v_i]);

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":250
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 */
      (__pyx_v_info->shape[__pyx_v_i]) = (PyArray_DIMS(__pyx_v_self)[__pyx_v_i]);
    }

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":243
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
    goto __pyx_L11;
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":252
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 */
  /*else*/ {
    __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(__pyx_v_self));

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":253
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 */
    __pyx_v_info->shape = ((Py_ssize_t *)PyArray_DIMS(__pyx_v_self));
  }
  __pyx_L11:;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":254
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 */
  __pyx_v_info->suboffsets = NULL;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":255
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 * 
 */
  __pyx_v_info->itemsize = PyArray_ITEMSIZE(__pyx_v_self);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":256
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
 * 
 *             cdef int t
 */
  __pyx_v_info->readonly = (!(PyArray_ISWRITEABLE(__pyx_v_self) != 0));

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":259
 * 
 *             cdef int t
 *             cdef char* f = NULL             # <<<<<<<<<<<<<<
 *             cdef dtype descr = self.descr
 *             cdef int offset
 */
  __pyx_v_f = NULL;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":260
 *             cdef int t
 *             cdef char* f = NULL
 *             cdef dtype descr = self.descr             # <<<<<<<<<<<<<<
 *             cdef int offset
 * 
 */
  __pyx_t_3 = ((PyObject *)__pyx_v_self->descr);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_v_descr = ((PyArray_Descr *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":263
 *             cdef int offset
 * 
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields and not copy_shape:
 */
  __pyx_v_hasfields = PyDataType_HASFIELDS(__pyx_v_descr);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":265
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
  __pyx_t_2 = ((!(__pyx_v_hasfields != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L15_bool_binop_done;
  }
  __pyx_t_2 = ((!(__pyx_v_copy_shape != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L15_bool_binop_done:;
  if (__pyx_t_1) {

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":267
 *             if not hasfields and not copy_shape:
 *                 # do not call releasebuffer
 *                 info.obj = None             # <<<<<<<<<<<<<<
 *             else:
 *                 # need to call releasebuffer
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = Py_None;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":265
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
    goto __pyx_L14;
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":270
 *             else:
 *                 # need to call releasebuffer
 *                 info.obj = self             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields:
 */
  /*else*/ {
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = ((PyObject *)__pyx_v_self);
  }
  __pyx_L14:;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":272
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  __pyx_t_1 = ((!(__pyx_v_hasfields != 0)) != 0);
  if (__pyx_t_1) {

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":273
 * 
 *             if not hasfields:
 *                 t = descr.type_num             # <<<<<<<<<<<<<<
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 */
    __pyx_t_4 = __pyx_v_descr->type_num;
    __pyx_v_t = __pyx_t_4;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":274
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '>') != 0);
    if (!__pyx_t_2) {
      goto __pyx_L20_next_or;
    } else {
    }
    __pyx_t_2 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L19_bool_binop_done;
    }
    __pyx_L20_next_or:;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":275
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '<') != 0);
    if (__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L19_bool_binop_done;
    }
    __pyx_t_2 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_1 = __pyx_t_2;
    __pyx_L19_bool_binop_done:;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":274
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    if (__pyx_t_1) {

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":276
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__90, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 276, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(2, 276, __pyx_L1_error)

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":274
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    }

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":277
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 */
    switch (__pyx_v_t) {
      case NPY_BYTE:
      __pyx_v_f = ((char *)"b");
      break;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":278
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 */
      case NPY_UBYTE:
      __pyx_v_f = ((char *)"B");
      break;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":279
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 */
      case NPY_SHORT:
      __pyx_v_f = ((char *)"h");
      break;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":280
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 */
      case NPY_USHORT:
      __pyx_v_f = ((char *)"H");
      break;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":281
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 */
      case NPY_INT:
      __pyx_v_f = ((char *)"i");
      break;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":282
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 */
      case NPY_UINT:
      __pyx_v_f = ((char *)"I");
      break;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":283
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 */
      case NPY_LONG:
      __pyx_v_f = ((char *)"l");
      break;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":284
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 */
      case NPY_ULONG:
      __pyx_v_f = ((char *)"L");
      break;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":285
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 */
      case NPY_LONGLONG:
      __pyx_v_f = ((char *)"q");
      break;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":286
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 */
      case NPY_ULONGLONG:
      __pyx_v_f = ((char *)"Q");
      break;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":287
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 */
      case NPY_FLOAT:
      __pyx_v_f = ((char *)"f");
      break;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":288
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 */
      case NPY_DOUBLE:
      __pyx_v_f = ((char *)"d");
      break;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":289
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 */
      case NPY_LONGDOUBLE:
      __pyx_v_f = ((char *)"g");
      break;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":290
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 */
      case NPY_CFLOAT:
      __pyx_v_f = ((char *)"Zf");
      break;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":291
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"
 */
      case NPY_CDOUBLE:
      __pyx_v_f = ((char *)"Zd");
      break;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":292
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 */
      case NPY_CLONGDOUBLE:
      __pyx_v_f = ((char *)"Zg");
      break;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":293
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      case NPY_OBJECT:
      __pyx_v_f = ((char *)"O");
      break;
      default:

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":295
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *                 info.format = f
 *                 return
 */
      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_t); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 295, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 295, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 295, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 295, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __PYX_ERR(2, 295, __pyx_L1_error)
      break;
    }

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":296
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f             # <<<<<<<<<<<<<<
 *                 return
 *             else:
 */
    __pyx_v_info->format = __pyx_v_f;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":297
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f
 *                 return             # <<<<<<<<<<<<<<
 *             else:
 *                 info.format = <char*>PyObject_Malloc(_buffer_format_string_len)
 */
    __pyx_r = 0;
    goto __pyx_L0;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":272
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":299
 *                 return
 *             else:
 *                 info.format = <char*>PyObject_Malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 */
  /*else*/ {
    __pyx_v_info->format = ((char *)PyObject_Malloc(0xFF));

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":300
 *             else:
 *                 info.format = <char*>PyObject_Malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,
 */
    (__pyx_v_info->format[0]) = '^';

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":301
 *                 info.format = <char*>PyObject_Malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0             # <<<<<<<<<<<<<<
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 */
    __pyx_v_offset = 0;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":302
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,             # <<<<<<<<<<<<<<
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 */
    __pyx_t_7 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 0xFF), (&__pyx_v_offset)); if (unlikely(__pyx_t_7 == ((char *)NULL))) __PYX_ERR(2, 302, __pyx_L1_error)
    __pyx_v_f = __pyx_t_7;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":305
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 *                 f[0] = c'\0' # Terminate format string             # <<<<<<<<<<<<<<
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 */
    (__pyx_v_f[0]) = '\x00';
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":214
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("numpy.ndarray.__getbuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  if (__pyx_v_info != NULL && __pyx_v_info->obj != NULL) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = NULL;
  }
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info != NULL && __pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(Py_None);
    __Pyx_DECREF(Py_None); __pyx_v_info->obj = NULL;
  }
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_descr);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":307
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 PyObject_Free(info.format)
 */

/* Python wrapper */
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__releasebuffer__ (wrapper)", 0);
  __pyx_pf_5numpy_7ndarray_2__releasebuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__releasebuffer__", 0);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":308
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 PyObject_Free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_t_1 = (PyArray_HASFIELDS(__pyx_v_self) != 0);
  if (__pyx_t_1) {

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":309
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):
 *                 PyObject_Free(info.format)             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 PyObject_Free(info.strides)
 */
    PyObject_Free(__pyx_v_info->format);

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":308
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 PyObject_Free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":310
 *             if PyArray_HASFIELDS(self):
 *                 PyObject_Free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 PyObject_Free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":311
 *                 PyObject_Free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 PyObject_Free(info.strides)             # <<<<<<<<<<<<<<
 *                 # info.shape was stored after info.strides in the same block
 * 
 */
    PyObject_Free(__pyx_v_info->strides);

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":310
 *             if PyArray_HASFIELDS(self):
 *                 PyObject_Free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 PyObject_Free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":307
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 PyObject_Free(info.format)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":788
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":789
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 789, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":788
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":791
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":792
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 792, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":791
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":794
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":795
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 795, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":794
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":797
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":798
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 798, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":797
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":800
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":801
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 801, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":800
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":803
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyDataType_SHAPE(PyArray_Descr *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("PyDataType_SHAPE", 0);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":804
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  __pyx_t_1 = (PyDataType_HASSUBARRAY(__pyx_v_d) != 0);
  if (__pyx_t_1) {

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":805
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape             # <<<<<<<<<<<<<<
 *     else:
 *         return ()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject*)__pyx_v_d->subarray->shape));
    __pyx_r = ((PyObject*)__pyx_v_d->subarray->shape);
    goto __pyx_L0;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":804
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":807
 *         return <tuple>d.subarray.shape
 *     else:
 *         return ()             # <<<<<<<<<<<<<<
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_empty_tuple);
    __pyx_r = __pyx_empty_tuple;
    goto __pyx_L0;
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":803
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":809
 *         return ()
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {
  PyArray_Descr *__pyx_v_child = 0;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  PyObject *__pyx_v_fields = 0;
  PyObject *__pyx_v_childname = NULL;
  PyObject *__pyx_v_new_offset = NULL;
  PyObject *__pyx_v_t = NULL;
  char *__pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  long __pyx_t_8;
  char *__pyx_t_9;
  __Pyx_RefNannySetupContext("_util_dtypestring", 0);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":814
 * 
 *     cdef dtype child
 *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 *     cdef tuple fields
 */
  __pyx_v_endian_detector = 1;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":815
 *     cdef dtype child
 *     cdef int endian_detector = 1
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 *     cdef tuple fields
 * 
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":818
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  if (unlikely(__pyx_v_descr->names == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(2, 818, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_descr->names; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(2, 818, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 818, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_childname, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":819
 * 
 *     for childname in descr.names:
 *         fields = descr.fields[childname]             # <<<<<<<<<<<<<<
 *         child, new_offset = fields
 * 
 */
    if (unlikely(__pyx_v_descr->fields == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(2, 819, __pyx_L1_error)
    }
    __pyx_t_3 = __Pyx_PyDict_GetItem(__pyx_v_descr->fields, __pyx_v_childname); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 819, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_3)->tp_name), 0))) __PYX_ERR(2, 819, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_fields, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":820
 *     for childname in descr.names:
 *         fields = descr.fields[childname]
 *         child, new_offset = fields             # <<<<<<<<<<<<<<
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 */
    if (likely(__pyx_v_fields != Py_None)) {
      PyObject* sequence = __pyx_v_fields;
      #if !CYTHON_COMPILING_IN_PYPY
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(2, 820, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 820, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 820, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      #endif
    } else {
      __Pyx_RaiseNoneNotIterableError(); __PYX_ERR(2, 820, __pyx_L1_error)
    }
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_dtype))))) __PYX_ERR(2, 820, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_child, ((PyArray_Descr *)__pyx_t_3));
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_new_offset, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":822
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    __pyx_t_4 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 822, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyNumber_Subtract(__pyx_v_new_offset, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 822, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(2, 822, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_6 = ((((__pyx_v_end - __pyx_v_f) - ((int)__pyx_t_5)) < 15) != 0);
    if (__pyx_t_6) {

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":823
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__91, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 823, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(2, 823, __pyx_L1_error)

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":822
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    }

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":825
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '>') != 0);
    if (!__pyx_t_7) {
      goto __pyx_L8_next_or;
    } else {
    }
    __pyx_t_7 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_L8_next_or:;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":826
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *             raise ValueError(u"Non-native byte order not supported")
 *             # One could encode it in the format string and have Cython
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '<') != 0);
    if (__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_t_7 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_6 = __pyx_t_7;
    __pyx_L7_bool_binop_done:;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":825
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    if (__pyx_t_6) {

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":827
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__92, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 827, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(2, 827, __pyx_L1_error)

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":825
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    }

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":837
 * 
 *         # Output padding bytes
 *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 */
    while (1) {
      __pyx_t_3 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 837, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_t_3, __pyx_v_new_offset, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 837, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 837, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (!__pyx_t_6) break;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":838
 *         # Output padding bytes
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
 *             f += 1
 *             offset[0] += 1
 */
      (__pyx_v_f[0]) = 0x78;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":839
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte
 *             f += 1             # <<<<<<<<<<<<<<
 *             offset[0] += 1
 * 
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":840
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 *             offset[0] += 1             # <<<<<<<<<<<<<<
 * 
 *         offset[0] += child.itemsize
 */
      __pyx_t_8 = 0;
      (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + 1);
    }

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":842
 *             offset[0] += 1
 * 
 *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not PyDataType_HASFIELDS(child):
 */
    __pyx_t_8 = 0;
    (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + __pyx_v_child->elsize);

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":844
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
    __pyx_t_6 = ((!(PyDataType_HASFIELDS(__pyx_v_child) != 0)) != 0);
    if (__pyx_t_6) {

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":845
 * 
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num             # <<<<<<<<<<<<<<
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")
 */
      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_child->type_num); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 845, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":846
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      __pyx_t_6 = (((__pyx_v_end - __pyx_v_f) < 5) != 0);
      if (__pyx_t_6) {

        /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":847
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__93, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 847, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __PYX_ERR(2, 847, __pyx_L1_error)

        /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":846
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      }

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":850
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_BYTE); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 850, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 850, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 850, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 98;
        goto __pyx_L15;
      }

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":851
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UBYTE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 851, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 851, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 851, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 66;
        goto __pyx_L15;
      }

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":852
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_SHORT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 852, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 852, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 852, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x68;
        goto __pyx_L15;
      }

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":853
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_USHORT); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 853, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 853, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 853, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 72;
        goto __pyx_L15;
      }

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":854
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_INT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 854, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 854, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 854, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x69;
        goto __pyx_L15;
      }

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":855
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_UINT); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 855, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 855, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 855, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 73;
        goto __pyx_L15;
      }

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":856
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONG); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 856, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 856, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 856, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x6C;
        goto __pyx_L15;
      }

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":857
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONG); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 857, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 857, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 857, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 76;
        goto __pyx_L15;
      }

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":858
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGLONG); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 858, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 858, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 858, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x71;
        goto __pyx_L15;
      }

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":859
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_ULONGLONG); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 859, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 859, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 859, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 81;
        goto __pyx_L15;
      }

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":860
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_FLOAT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 860, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 860, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 860, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x66;
        goto __pyx_L15;
      }

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":861
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_DOUBLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 861, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 861, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 861, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x64;
        goto __pyx_L15;
      }

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":862
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_LONGDOUBLE); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 862, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 862, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 862, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 0x67;
        goto __pyx_L15;
      }

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":863
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CFLOAT); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 863, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 863, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 863, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x66;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":864
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CDOUBLE); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 864, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 864, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 864, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x64;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":865
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 */
      __pyx_t_3 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_CLONGDOUBLE); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 865, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 865, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 865, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 0x67;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":866
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      __pyx_t_4 = __Pyx_PyInt_From_enum__NPY_TYPES(NPY_OBJECT); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 866, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 866, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(2, 866, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 79;
        goto __pyx_L15;
      }

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":868
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *             f += 1
 *         else:
 */
      /*else*/ {
        __pyx_t_3 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_v_t); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 868, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 868, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 868, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_Raise(__pyx_t_3, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __PYX_ERR(2, 868, __pyx_L1_error)
      }
      __pyx_L15:;

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":869
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *             f += 1             # <<<<<<<<<<<<<<
 *         else:
 *             # Cython ignores struct boundary information ("T{...}"),
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":844
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
      goto __pyx_L13;
    }

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":873
 *             # Cython ignores struct boundary information ("T{...}"),
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
 *     return f
 * 
 */
    /*else*/ {
      __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_child, __pyx_v_f, __pyx_v_end, __pyx_v_offset); if (unlikely(__pyx_t_9 == ((char *)NULL))) __PYX_ERR(2, 873, __pyx_L1_error)
      __pyx_v_f = __pyx_t_9;
    }
    __pyx_L13:;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":818
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":874
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)
 *     return f             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_f;
  goto __pyx_L0;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":809
 *         return ()
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("numpy._util_dtypestring", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_child);
  __Pyx_XDECREF(__pyx_v_fields);
  __Pyx_XDECREF(__pyx_v_childname);
  __Pyx_XDECREF(__pyx_v_new_offset);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":990
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  PyObject *__pyx_v_baseptr;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("set_array_base", 0);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":992
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
  __pyx_t_1 = (__pyx_v_base == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":993
 *      cdef PyObject* baseptr
 *      if base is None:
 *          baseptr = NULL             # <<<<<<<<<<<<<<
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 */
    __pyx_v_baseptr = NULL;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":992
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
    goto __pyx_L3;
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":995
 *          baseptr = NULL
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!             # <<<<<<<<<<<<<<
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 */
  /*else*/ {
    Py_INCREF(__pyx_v_base);

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":996
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base             # <<<<<<<<<<<<<<
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr
 */
    __pyx_v_baseptr = ((PyObject *)__pyx_v_base);
  }
  __pyx_L3:;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":997
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)             # <<<<<<<<<<<<<<
 *      arr.base = baseptr
 * 
 */
  Py_XDECREF(__pyx_v_arr->base);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":998
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  __pyx_v_arr->base = __pyx_v_baseptr;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":990
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1000
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base", 0);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1001
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  __pyx_t_1 = ((__pyx_v_arr->base == NULL) != 0);
  if (__pyx_t_1) {

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1002
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     else:
 *         return <object>arr.base
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1001
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1004
 *         return None
 *     else:
 *         return <object>arr.base             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_arr->base));
    __pyx_r = ((PyObject *)__pyx_v_arr->base);
    goto __pyx_L0;
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1000
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1009
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_array()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_array(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_array", 0);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1010
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1011
 * cdef inline int import_array() except -1:
 *     try:
 *         _import_array()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")
 */
      __pyx_t_4 = _import_array(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 1011, __pyx_L3_error)

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1010
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1012
 *     try:
 *         _import_array()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 1012, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1013
 *         _import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__94, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 1013, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 1013, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1010
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_array()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1009
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_array()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1015
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_umath(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_umath", 0);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1016
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1017
 * cdef inline int import_umath() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 1017, __pyx_L3_error)

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1016
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1018
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 1018, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1019
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__95, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 1019, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 1019, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1016
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1015
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1021
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_ufunc(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_ufunc", 0);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1022
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1023
 * cdef inline int import_ufunc() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 1023, __pyx_L3_error)

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1022
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1024
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 1024, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1025
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__96, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 1025, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 1025, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1022
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1021
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_6bullet_6bullet_CollisionObject(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_CollisionObject *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_CollisionObject *)o);
  p->_shape = ((struct __pyx_obj_6bullet_6bullet_CollisionShape *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_CollisionObject(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_CollisionObject *p = (struct __pyx_obj_6bullet_6bullet_CollisionObject *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6bullet_6bullet_15CollisionObject_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  if (p->__weakref__) PyObject_ClearWeakRefs(o);
  Py_CLEAR(p->_shape);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_6bullet_6bullet_CollisionObject(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_6bullet_6bullet_CollisionObject *p = (struct __pyx_obj_6bullet_6bullet_CollisionObject *)o;
  if (p->_shape) {
    e = (*v)(((PyObject *)p->_shape), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_6bullet_6bullet_CollisionObject(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_6bullet_6bullet_CollisionObject *p = (struct __pyx_obj_6bullet_6bullet_CollisionObject *)o;
  tmp = ((PyObject*)p->_shape);
  p->_shape = ((struct __pyx_obj_6bullet_6bullet_CollisionShape *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_CollisionObject[] = {
  {"getFriction", (PyCFunction)__pyx_pw_6bullet_6bullet_15CollisionObject_5getFriction, METH_NOARGS, __pyx_doc_6bullet_6bullet_15CollisionObject_4getFriction},
  {"setFriction", (PyCFunction)__pyx_pw_6bullet_6bullet_15CollisionObject_7setFriction, METH_O, __pyx_doc_6bullet_6bullet_15CollisionObject_6setFriction},
  {"setRestitution", (PyCFunction)__pyx_pw_6bullet_6bullet_15CollisionObject_9setRestitution, METH_O, __pyx_doc_6bullet_6bullet_15CollisionObject_8setRestitution},
  {"getRestitution", (PyCFunction)__pyx_pw_6bullet_6bullet_15CollisionObject_11getRestitution, METH_NOARGS, __pyx_doc_6bullet_6bullet_15CollisionObject_10getRestitution},
  {"getCollisionShape", (PyCFunction)__pyx_pw_6bullet_6bullet_15CollisionObject_13getCollisionShape, METH_NOARGS, __pyx_doc_6bullet_6bullet_15CollisionObject_12getCollisionShape},
  {"setCollisionShape", (PyCFunction)__pyx_pw_6bullet_6bullet_15CollisionObject_15setCollisionShape, METH_O, __pyx_doc_6bullet_6bullet_15CollisionObject_14setCollisionShape},
  {"getWorldTransform", (PyCFunction)__pyx_pw_6bullet_6bullet_15CollisionObject_17getWorldTransform, METH_NOARGS, __pyx_doc_6bullet_6bullet_15CollisionObject_16getWorldTransform},
  {"setWorldTransform", (PyCFunction)__pyx_pw_6bullet_6bullet_15CollisionObject_19setWorldTransform, METH_O, __pyx_doc_6bullet_6bullet_15CollisionObject_18setWorldTransform},
  {"getActivationState", (PyCFunction)__pyx_pw_6bullet_6bullet_15CollisionObject_21getActivationState, METH_NOARGS, __pyx_doc_6bullet_6bullet_15CollisionObject_20getActivationState},
  {"setActivationState", (PyCFunction)__pyx_pw_6bullet_6bullet_15CollisionObject_23setActivationState, METH_O, __pyx_doc_6bullet_6bullet_15CollisionObject_22setActivationState},
  {"getBroadphaseHandle", (PyCFunction)__pyx_pw_6bullet_6bullet_15CollisionObject_25getBroadphaseHandle, METH_NOARGS, __pyx_doc_6bullet_6bullet_15CollisionObject_24getBroadphaseHandle},
  {"forceActivationState", (PyCFunction)__pyx_pw_6bullet_6bullet_15CollisionObject_27forceActivationState, METH_O, 0},
  {"activate", (PyCFunction)__pyx_pw_6bullet_6bullet_15CollisionObject_29activate, METH_VARARGS|METH_KEYWORDS, 0},
  {"getCollisionFlags", (PyCFunction)__pyx_pw_6bullet_6bullet_15CollisionObject_31getCollisionFlags, METH_NOARGS, 0},
  {"setCollisionFlags", (PyCFunction)__pyx_pw_6bullet_6bullet_15CollisionObject_33setCollisionFlags, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_15CollisionObject_35__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_15CollisionObject_37__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_CollisionObject = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.CollisionObject", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_CollisionObject), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    A CollisionObject is something which can be collided with when added to a\n    CollisionWorld.  It has a position and orientation as well as a\n    CollisionShape.\n\n    This class is a wrapper around btCollisionObject.\n    ", /*tp_doc*/
  __pyx_tp_traverse_6bullet_6bullet_CollisionObject, /*tp_traverse*/
  __pyx_tp_clear_6bullet_6bullet_CollisionObject, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_CollisionObject, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_6bullet_6bullet_15CollisionObject_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_CollisionObject, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_6bullet_6bullet_Vector3 __pyx_vtable_6bullet_6bullet_Vector3;

static PyObject *__pyx_tp_new_6bullet_6bullet_Vector3(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)o);
  p->__pyx_vtab = __pyx_vtabptr_6bullet_6bullet_Vector3;
  if (unlikely(__pyx_pw_6bullet_6bullet_7Vector3_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_6bullet_6bullet_Vector3(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_6bullet_6bullet_7Vector3_x(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6bullet_6bullet_7Vector3_1x_1__get__(o);
}

static PyObject *__pyx_getprop_6bullet_6bullet_7Vector3_y(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6bullet_6bullet_7Vector3_1y_1__get__(o);
}

static PyObject *__pyx_getprop_6bullet_6bullet_7Vector3_z(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6bullet_6bullet_7Vector3_1z_1__get__(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_Vector3[] = {
  {"normalized", (PyCFunction)__pyx_pw_6bullet_6bullet_7Vector3_11normalized, METH_NOARGS, __pyx_doc_6bullet_6bullet_7Vector3_10normalized},
  {"cross", (PyCFunction)__pyx_pw_6bullet_6bullet_7Vector3_13cross, METH_O, __pyx_doc_6bullet_6bullet_7Vector3_12cross},
  {"dot", (PyCFunction)__pyx_pw_6bullet_6bullet_7Vector3_15dot, METH_O, __pyx_doc_6bullet_6bullet_7Vector3_14dot},
  {"length", (PyCFunction)__pyx_pw_6bullet_6bullet_7Vector3_17length, METH_NOARGS, __pyx_doc_6bullet_6bullet_7Vector3_16length},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_7Vector3_19__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_7Vector3_21__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bullet_6bullet_Vector3[] = {
  {(char *)"x", __pyx_getprop_6bullet_6bullet_7Vector3_x, 0, (char *)0, 0},
  {(char *)"y", __pyx_getprop_6bullet_6bullet_7Vector3_y, 0, (char *)0, 0},
  {(char *)"z", __pyx_getprop_6bullet_6bullet_7Vector3_z, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Vector3 = {
  __pyx_pw_6bullet_6bullet_7Vector3_7__add__, /*nb_add*/
  __pyx_pw_6bullet_6bullet_7Vector3_9__sub__, /*nb_subtract*/
  __pyx_pw_6bullet_6bullet_7Vector3_5__mul__, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || (CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03050000)
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || (CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03050000)
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || (CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03050000)
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || (CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03050000)
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || (CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03050000)
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PyTypeObject __pyx_type_6bullet_6bullet_Vector3 = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.Vector3", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_Vector3), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_Vector3, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_6bullet_6bullet_7Vector3_3__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Vector3, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A Vector3 represents a point or vector in three-dimensional space.\n\n    When dealing with most vector quantities such as velocity, position, and\n    force, bullet will use a Vector3.\n\n    This class is loosely a wrapper around btVector3.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_Vector3, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bullet_6bullet_Vector3, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_Vector3, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_6bullet_6bullet_Quaternion __pyx_vtable_6bullet_6bullet_Quaternion;

static PyObject *__pyx_tp_new_6bullet_6bullet_Quaternion(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_Quaternion *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_Quaternion *)o);
  p->__pyx_vtab = __pyx_vtabptr_6bullet_6bullet_Quaternion;
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_Quaternion(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6bullet_6bullet_10Quaternion_1__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_Quaternion[] = {
  {"fromScalars", (PyCFunction)__pyx_pw_6bullet_6bullet_10Quaternion_3fromScalars, METH_VARARGS|METH_KEYWORDS, __pyx_doc_6bullet_6bullet_10Quaternion_2fromScalars},
  {"fromAxisAngle", (PyCFunction)__pyx_pw_6bullet_6bullet_10Quaternion_5fromAxisAngle, METH_VARARGS|METH_KEYWORDS, __pyx_doc_6bullet_6bullet_10Quaternion_4fromAxisAngle},
  {"getX", (PyCFunction)__pyx_pw_6bullet_6bullet_10Quaternion_9getX, METH_NOARGS, __pyx_doc_6bullet_6bullet_10Quaternion_8getX},
  {"getY", (PyCFunction)__pyx_pw_6bullet_6bullet_10Quaternion_11getY, METH_NOARGS, __pyx_doc_6bullet_6bullet_10Quaternion_10getY},
  {"getZ", (PyCFunction)__pyx_pw_6bullet_6bullet_10Quaternion_13getZ, METH_NOARGS, __pyx_doc_6bullet_6bullet_10Quaternion_12getZ},
  {"getW", (PyCFunction)__pyx_pw_6bullet_6bullet_10Quaternion_15getW, METH_NOARGS, __pyx_doc_6bullet_6bullet_10Quaternion_14getW},
  {"getAxis", (PyCFunction)__pyx_pw_6bullet_6bullet_10Quaternion_17getAxis, METH_NOARGS, __pyx_doc_6bullet_6bullet_10Quaternion_16getAxis},
  {"getAngle", (PyCFunction)__pyx_pw_6bullet_6bullet_10Quaternion_19getAngle, METH_NOARGS, __pyx_doc_6bullet_6bullet_10Quaternion_18getAngle},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_10Quaternion_23__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_10Quaternion_25__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Quaternion = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  __pyx_pw_6bullet_6bullet_10Quaternion_7__mul__, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3 || (CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03050000)
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3 || (CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03050000)
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3 || (CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03050000)
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3 || (CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03050000)
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3 || (CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x03050000)
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  0, /*nb_index*/
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_matrix_multiply*/
  #endif
  #if PY_VERSION_HEX >= 0x03050000
  0, /*nb_inplace_matrix_multiply*/
  #endif
};

static PyTypeObject __pyx_type_6bullet_6bullet_Quaternion = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.Quaternion", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_Quaternion), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_Quaternion, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_6bullet_6bullet_10Quaternion_21__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Quaternion, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A Quaternion represents a point or vector in four-dimensional space.  It is\n    frequently also used to represent rotation and orientation in\n    three-dimensional space.\n\n    This class is a wrapper around btQuaternion.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_Quaternion, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_Quaternion, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_CollisionShape(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_CollisionShape(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6bullet_6bullet_14CollisionShape_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_CollisionShape[] = {
  {"calculateLocalInertia", (PyCFunction)__pyx_pw_6bullet_6bullet_14CollisionShape_1calculateLocalInertia, METH_VARARGS|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_14CollisionShape_5__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_14CollisionShape_7__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_CollisionShape = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.CollisionShape", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_CollisionShape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A CollisionShape defines the shape of an object in a CollisionWorld.  Shapes\n    are used for collision detection.\n\n    This class is a wrapper around btCollisionShape.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_CollisionShape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_CollisionShape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_ConvexShape(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CollisionShape(t, a, k);
  if (unlikely(!o)) return 0;
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_ConvexShape[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_11ConvexShape_1__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_11ConvexShape_3__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_ConvexShape = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.ConvexShape", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_ConvexShape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A ConvexShape is a shape that curves outwards only.  This is a base class\n    for many other types of shapes which are convex.\n\n    This class is loosely a wrapper around btConvexShape.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_ConvexShape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_ConvexShape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_Box2dShape(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_ConvexShape(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6bullet_6bullet_10Box2dShape_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_Box2dShape[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_10Box2dShape_3__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_10Box2dShape_5__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_Box2dShape = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.Box2dShape", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_Box2dShape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A Box2dShape is a box primitive around the origin, its sides axis aligned\n    with length specified by half extents, in local shape coordinates.  It has\n    size only in the X and Y dimensions.\n\n    This class is a wrapper around btBox2dShape.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_Box2dShape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_Box2dShape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_BoxShape(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_ConvexShape(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6bullet_6bullet_8BoxShape_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_BoxShape[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_8BoxShape_3__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_8BoxShape_5__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_BoxShape = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.BoxShape", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_BoxShape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A BoxShape is a box primitive around the origin, its sides axis aligned\n    with length specified by half extents, in local shape coordinates.  It has\n    size in the X, Y and Z dimensions.\n\n    This class is a wrapper around btBoxShape.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_BoxShape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_BoxShape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_SphereShape(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_ConvexShape(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6bullet_6bullet_11SphereShape_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_SphereShape[] = {
  {"getRadius", (PyCFunction)__pyx_pw_6bullet_6bullet_11SphereShape_3getRadius, METH_NOARGS, __pyx_doc_6bullet_6bullet_11SphereShape_2getRadius},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_11SphereShape_5__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_11SphereShape_7__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_SphereShape = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.SphereShape", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_SphereShape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A SphereShape is a sphere around the origin, with a specified radius.\n\n    This class is a wrapper around btSphereShape.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_SphereShape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_SphereShape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_CapsuleShape(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_ConvexShape(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6bullet_6bullet_12CapsuleShape_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_CapsuleShape[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_12CapsuleShape_3__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_12CapsuleShape_5__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_CapsuleShape = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.CapsuleShape", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_CapsuleShape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A CapsuleShape is a capsule around the Y axis.  A capsule is a cylinder with\n    a sphere on each end.\n\n    This class is a wrapper around btCapsuleShape.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_CapsuleShape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_CapsuleShape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_CylinderShape(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_ConvexShape(t, a, k);
  if (unlikely(!o)) return 0;
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_CylinderShape[] = {
  {"getRadius", (PyCFunction)__pyx_pw_6bullet_6bullet_13CylinderShape_3getRadius, METH_NOARGS, 0},
  {"getHalfExtentsWithoutMargin", (PyCFunction)__pyx_pw_6bullet_6bullet_13CylinderShape_5getHalfExtentsWithoutMargin, METH_NOARGS, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_13CylinderShape_7__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_13CylinderShape_9__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_CylinderShape = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.CylinderShape", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_CylinderShape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A CylinderShape is a cylinder with its central axis aligned with the Y axis.\n\n    This class is a wrapper around btCylinderShape.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_CylinderShape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_6bullet_6bullet_13CylinderShape_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_CylinderShape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_CylinderShapeX(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CylinderShape(t, a, k);
  if (unlikely(!o)) return 0;
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_CylinderShapeX[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_14CylinderShapeX_3__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_14CylinderShapeX_5__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_CylinderShapeX = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.CylinderShapeX", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_CylinderShapeX), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A CylinderShapeX is a cylinder with its central axis aligned with the X\n    axis.\n\n    This class is a wrapper around btCylinderShapeX.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_CylinderShapeX, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_6bullet_6bullet_14CylinderShapeX_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_CylinderShapeX, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_CylinderShapeZ(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CylinderShape(t, a, k);
  if (unlikely(!o)) return 0;
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_CylinderShapeZ[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_14CylinderShapeZ_3__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_14CylinderShapeZ_5__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_CylinderShapeZ = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.CylinderShapeZ", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_CylinderShapeZ), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A CylinderShapeZ is a cylinder with its central axis aligned with the Z\n    axis.\n\n    This class is a wrapper around btCylinderShapeZ.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_CylinderShapeZ, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_6bullet_6bullet_14CylinderShapeZ_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_CylinderShapeZ, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_StaticPlaneShape(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CollisionShape(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6bullet_6bullet_16StaticPlaneShape_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_StaticPlaneShape[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_16StaticPlaneShape_3__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_16StaticPlaneShape_5__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_StaticPlaneShape = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.StaticPlaneShape", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_StaticPlaneShape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A StaticPlaneShape is an immobile plane.\n\n    This class is a wrapper around btStaticPlaneShape.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_StaticPlaneShape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_StaticPlaneShape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_6bullet_6bullet_IndexedMesh __pyx_vtable_6bullet_6bullet_IndexedMesh;

static PyObject *__pyx_tp_new_6bullet_6bullet_IndexedMesh(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_IndexedMesh *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)o);
  p->__pyx_vtab = __pyx_vtabptr_6bullet_6bullet_IndexedMesh;
  if (unlikely(__pyx_pw_6bullet_6bullet_11IndexedMesh_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_6bullet_6bullet_IndexedMesh(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6bullet_6bullet_11IndexedMesh_7__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_IndexedMesh[] = {
  {"setIndices", (PyCFunction)__pyx_pw_6bullet_6bullet_11IndexedMesh_3setIndices, METH_VARARGS|METH_KEYWORDS, __pyx_doc_6bullet_6bullet_11IndexedMesh_2setIndices},
  {"setVertices", (PyCFunction)__pyx_pw_6bullet_6bullet_11IndexedMesh_5setVertices, METH_VARARGS|METH_KEYWORDS, __pyx_doc_6bullet_6bullet_11IndexedMesh_4setVertices},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_11IndexedMesh_9__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_11IndexedMesh_11__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_IndexedMesh = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.IndexedMesh", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_IndexedMesh), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_IndexedMesh, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    An IndexedMesh is a vertex array and an array of index data into that\n    vertex array.  It defines a mesh of triangles composed of triples of vertex\n    data given by sequential triples of indices from the index array.  For\n    example, an IndexedMesh defining two triangles would use an vertex array\n    like::\n\n        numpy.array([0, 0, 0,\n                     1, 0, 0,\n                     1, 0, 1,\n                     0, 0, 1], 'f')\n\n    and an index array like this::\n\n        numpy.array([0, 1, 2,\n                     2, 3, 0], 'i')\n\n    This class is a wrapper around btIndexedMesh.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_IndexedMesh, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_IndexedMesh, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_StridingMeshInterface(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_StridingMeshInterface(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6bullet_6bullet_21StridingMeshInterface_1__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_StridingMeshInterface[] = {
  {"getNumSubParts", (PyCFunction)__pyx_pw_6bullet_6bullet_21StridingMeshInterface_3getNumSubParts, METH_NOARGS, __pyx_doc_6bullet_6bullet_21StridingMeshInterface_2getNumSubParts},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_21StridingMeshInterface_5__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_21StridingMeshInterface_7__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_StridingMeshInterface = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.StridingMeshInterface", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_StridingMeshInterface), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_StridingMeshInterface, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A StridingMeshInterface is an object suitable for use in defining a triangle\n    mesh for BvhTriangleMeshShape.\n\n    This class is loosely a wrapper around btStridingMeshInterface.\n\n    XXX THIS WRAPPER MAY CAUSE SEGFAULTS.  Use TriangleIndexVertexArray instead.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_StridingMeshInterface, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_StridingMeshInterface, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_TriangleIndexVertexArray(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_StridingMeshInterface(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6bullet_6bullet_24TriangleIndexVertexArray_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_TriangleIndexVertexArray[] = {
  {"addIndexedMesh", (PyCFunction)__pyx_pw_6bullet_6bullet_24TriangleIndexVertexArray_3addIndexedMesh, METH_O, __pyx_doc_6bullet_6bullet_24TriangleIndexVertexArray_2addIndexedMesh},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_24TriangleIndexVertexArray_5__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_24TriangleIndexVertexArray_7__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_TriangleIndexVertexArray = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.TriangleIndexVertexArray", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_TriangleIndexVertexArray), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_StridingMeshInterface, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A TriangleIndexVertexArray is a striding mesh defined in terms of an array\n    of IndexedMesh instances.\n\n    Construct a TriangleIndexVertexArray and add one or more IndexedMesh\n    instances to it to define a triangle mesh for a BvhTriangleMeshShape.\n\n    This class is a wrapper around btTriangleIndexVertexArray.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_TriangleIndexVertexArray, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_TriangleIndexVertexArray, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_BvhTriangleMeshShape(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *p;
  PyObject *o = __pyx_tp_new_6bullet_6bullet_ConvexShape(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *)o);
  p->stride = ((struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_BvhTriangleMeshShape(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *p = (struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->stride);
  #if CYTHON_USE_TYPE_SLOTS
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape(o);
}

static int __pyx_tp_traverse_6bullet_6bullet_BvhTriangleMeshShape(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *p = (struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *)o;
  e = ((likely(__pyx_ptype_6bullet_6bullet_ConvexShape)) ? ((__pyx_ptype_6bullet_6bullet_ConvexShape->tp_traverse) ? __pyx_ptype_6bullet_6bullet_ConvexShape->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_6bullet_6bullet_BvhTriangleMeshShape)); if (e) return e;
  if (p->stride) {
    e = (*v)(((PyObject *)p->stride), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_6bullet_6bullet_BvhTriangleMeshShape(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *p = (struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *)o;
  if (likely(__pyx_ptype_6bullet_6bullet_ConvexShape)) { if (__pyx_ptype_6bullet_6bullet_ConvexShape->tp_clear) __pyx_ptype_6bullet_6bullet_ConvexShape->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_6bullet_6bullet_BvhTriangleMeshShape);
  tmp = ((PyObject*)p->stride);
  p->stride = ((struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_BvhTriangleMeshShape[] = {
  {"buildOptimizedBvh", (PyCFunction)__pyx_pw_6bullet_6bullet_20BvhTriangleMeshShape_3buildOptimizedBvh, METH_NOARGS, __pyx_doc_6bullet_6bullet_20BvhTriangleMeshShape_2buildOptimizedBvh},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_20BvhTriangleMeshShape_5__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_20BvhTriangleMeshShape_7__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_BvhTriangleMeshShape = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.BvhTriangleMeshShape", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_BvhTriangleMeshShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    A BvhTriangleMeshShape is a shape defined by an array of triangle vertex\n    data and an array of indices against those triangles.\n\n    This class is a wrapper around btBvhTriangleMeshShape.\n    ", /*tp_doc*/
  __pyx_tp_traverse_6bullet_6bullet_BvhTriangleMeshShape, /*tp_traverse*/
  __pyx_tp_clear_6bullet_6bullet_BvhTriangleMeshShape, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_BvhTriangleMeshShape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_6bullet_6bullet_20BvhTriangleMeshShape_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_BvhTriangleMeshShape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_Transform(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6bullet_6bullet_9Transform_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_6bullet_6bullet_Transform(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6bullet_6bullet_9Transform_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_Transform[] = {
  {"getOrigin", (PyCFunction)__pyx_pw_6bullet_6bullet_9Transform_5getOrigin, METH_NOARGS, __pyx_doc_6bullet_6bullet_9Transform_4getOrigin},
  {"setOrigin", (PyCFunction)__pyx_pw_6bullet_6bullet_9Transform_7setOrigin, METH_O, __pyx_doc_6bullet_6bullet_9Transform_6setOrigin},
  {"setRotation", (PyCFunction)__pyx_pw_6bullet_6bullet_9Transform_9setRotation, METH_O, __pyx_doc_6bullet_6bullet_9Transform_8setRotation},
  {"getRotation", (PyCFunction)__pyx_pw_6bullet_6bullet_9Transform_11getRotation, METH_NOARGS, __pyx_doc_6bullet_6bullet_9Transform_10getRotation},
  {"setIdentity", (PyCFunction)__pyx_pw_6bullet_6bullet_9Transform_13setIdentity, METH_NOARGS, __pyx_doc_6bullet_6bullet_9Transform_12setIdentity},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_9Transform_15__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_9Transform_17__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_Transform = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.Transform", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_Transform), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_Transform, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A Transform represents an a translation and rotation.\n\n    When dealing with the location and orientation of an object in a\n    CollisionWorld, Bullet will use a Transform instance.\n\n    This class is a wrapper around btTransform.  Unlike btTransform, a Transform\n    always starts off set to the identity.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_Transform, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_Transform, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_BroadphaseProxy(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_BroadphaseProxy(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_6bullet_6bullet_15BroadphaseProxy_collisionFilterGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6bullet_6bullet_15BroadphaseProxy_20collisionFilterGroup_1__get__(o);
}

static int __pyx_setprop_6bullet_6bullet_15BroadphaseProxy_collisionFilterGroup(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_6bullet_6bullet_15BroadphaseProxy_20collisionFilterGroup_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bullet_6bullet_15BroadphaseProxy_collisionFilterMask(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6bullet_6bullet_15BroadphaseProxy_19collisionFilterMask_1__get__(o);
}

static int __pyx_setprop_6bullet_6bullet_15BroadphaseProxy_collisionFilterMask(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_6bullet_6bullet_15BroadphaseProxy_19collisionFilterMask_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_6bullet_6bullet_BroadphaseProxy[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_15BroadphaseProxy_3__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_15BroadphaseProxy_5__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bullet_6bullet_BroadphaseProxy[] = {
  {(char *)"collisionFilterGroup", __pyx_getprop_6bullet_6bullet_15BroadphaseProxy_collisionFilterGroup, __pyx_setprop_6bullet_6bullet_15BroadphaseProxy_collisionFilterGroup, (char *)0, 0},
  {(char *)"collisionFilterMask", __pyx_getprop_6bullet_6bullet_15BroadphaseProxy_collisionFilterMask, __pyx_setprop_6bullet_6bullet_15BroadphaseProxy_collisionFilterMask, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_BroadphaseProxy = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.BroadphaseProxy", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_BroadphaseProxy), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_BroadphaseProxy, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A BroadphaseProxy wraps collision information about a collision object for\n    use by the Bullet broadphases.\n\n    This class is not a wrapper around btBroadphaseProxy due to the complexities\n    of memory management and object lifetimes.  Instead, it is a snapshot of all\n    of the state on a btBroadphaseProxy at the time the BroadphaseProxy is\n    constructed.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_BroadphaseProxy, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bullet_6bullet_BroadphaseProxy, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_6bullet_6bullet_15BroadphaseProxy_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_BroadphaseProxy, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_MotionState(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_MotionState(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6bullet_6bullet_11MotionState_1__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_MotionState[] = {
  {"getWorldTransform", (PyCFunction)__pyx_pw_6bullet_6bullet_11MotionState_3getWorldTransform, METH_NOARGS, __pyx_doc_6bullet_6bullet_11MotionState_2getWorldTransform},
  {"setWorldTransform", (PyCFunction)__pyx_pw_6bullet_6bullet_11MotionState_5setWorldTransform, METH_O, __pyx_doc_6bullet_6bullet_11MotionState_4setWorldTransform},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_11MotionState_7__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_11MotionState_9__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_MotionState = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.MotionState", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_MotionState), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_MotionState, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A MotionState is a primarily an object to provide callback methods to the\n    dynamics implementation.\n\n    A MotionState instance can be set on a RigidBody to receive world transform\n    updates for that object.  Bullet may call the setWorldTransform callback\n    only for objects which move to avoid the cost of doing so where no new\n    information will be provided.\n\n    This class is a wrapper around btMotionState.  This wrapping isn't entirely\n    sensible, so it may change in a future release.\n\n    XXX THIS WRAPPER MAY CAUSE SEGFAULTS.  Use DefaultMotionState instead.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_MotionState, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_MotionState, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_overridableMotionState(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_overridableMotionState *p;
  PyObject *o = __pyx_tp_new_6bullet_6bullet_MotionState(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_overridableMotionState *)o);
  p->_nTrans = ((struct __pyx_obj_6bullet_6bullet_Transform *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_6bullet_6bullet_22overridableMotionState_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_6bullet_6bullet_overridableMotionState(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_overridableMotionState *p = (struct __pyx_obj_6bullet_6bullet_overridableMotionState *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6bullet_6bullet_22overridableMotionState_7__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->_nTrans);
  #if CYTHON_USE_TYPE_SLOTS
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6bullet_6bullet_MotionState(o);
}

static int __pyx_tp_traverse_6bullet_6bullet_overridableMotionState(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_6bullet_6bullet_overridableMotionState *p = (struct __pyx_obj_6bullet_6bullet_overridableMotionState *)o;
  e = ((likely(__pyx_ptype_6bullet_6bullet_MotionState)) ? ((__pyx_ptype_6bullet_6bullet_MotionState->tp_traverse) ? __pyx_ptype_6bullet_6bullet_MotionState->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_6bullet_6bullet_overridableMotionState)); if (e) return e;
  if (p->_nTrans) {
    e = (*v)(((PyObject *)p->_nTrans), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_6bullet_6bullet_overridableMotionState(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_6bullet_6bullet_overridableMotionState *p = (struct __pyx_obj_6bullet_6bullet_overridableMotionState *)o;
  if (likely(__pyx_ptype_6bullet_6bullet_MotionState)) { if (__pyx_ptype_6bullet_6bullet_MotionState->tp_clear) __pyx_ptype_6bullet_6bullet_MotionState->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_6bullet_6bullet_overridableMotionState);
  tmp = ((PyObject*)p->_nTrans);
  p->_nTrans = ((struct __pyx_obj_6bullet_6bullet_Transform *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_6bullet_6bullet_22overridableMotionState_worldTrans(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6bullet_6bullet_22overridableMotionState_10worldTrans_1__get__(o);
}

static int __pyx_setprop_6bullet_6bullet_22overridableMotionState_worldTrans(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_6bullet_6bullet_22overridableMotionState_10worldTrans_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_6bullet_6bullet_overridableMotionState[] = {
  {"setWorldTransform", (PyCFunction)__pyx_pw_6bullet_6bullet_22overridableMotionState_3setWorldTransform, METH_O, 0},
  {"_stwL", (PyCFunction)__pyx_pw_6bullet_6bullet_22overridableMotionState_5_stwL, METH_NOARGS, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_22overridableMotionState_9__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_22overridableMotionState_11__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bullet_6bullet_overridableMotionState[] = {
  {(char *)"worldTrans", __pyx_getprop_6bullet_6bullet_22overridableMotionState_worldTrans, __pyx_setprop_6bullet_6bullet_22overridableMotionState_worldTrans, (char *)"Set this to change body's transformation.", 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_overridableMotionState = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.overridableMotionState", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_overridableMotionState), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_overridableMotionState, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6bullet_6bullet_overridableMotionState, /*tp_traverse*/
  __pyx_tp_clear_6bullet_6bullet_overridableMotionState, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_overridableMotionState, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bullet_6bullet_overridableMotionState, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_overridableMotionState, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_DefaultMotionState(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_MotionState(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6bullet_6bullet_18DefaultMotionState_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_DefaultMotionState[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_18DefaultMotionState_3__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_18DefaultMotionState_5__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_DefaultMotionState = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.DefaultMotionState", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_DefaultMotionState), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_MotionState, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A DefaultMotionState is a MotionState which keeps track of the last\n    transformation provided to it.\n\n    A DefaultMotionState can be used with each RigidBody so that the position\n    can be queried after a simulation step.\n\n    This class is a wrapper around btDefaultMotionState.  Like MotionState, this\n    wrapping doesn't really make sense and will probably be changed.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_DefaultMotionState, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_DefaultMotionState, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_RigidBody(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_RigidBody *p;
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CollisionObject(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_RigidBody *)o);
  p->motion = ((struct __pyx_obj_6bullet_6bullet_MotionState *)Py_None); Py_INCREF(Py_None);
  p->shape = ((struct __pyx_obj_6bullet_6bullet_CollisionShape *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_RigidBody(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_RigidBody *p = (struct __pyx_obj_6bullet_6bullet_RigidBody *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->motion);
  Py_CLEAR(p->shape);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6bullet_6bullet_CollisionObject(o);
}

static int __pyx_tp_traverse_6bullet_6bullet_RigidBody(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_6bullet_6bullet_RigidBody *p = (struct __pyx_obj_6bullet_6bullet_RigidBody *)o;
  e = __pyx_tp_traverse_6bullet_6bullet_CollisionObject(o, v, a); if (e) return e;
  if (p->motion) {
    e = (*v)(((PyObject *)p->motion), a); if (e) return e;
  }
  if (p->shape) {
    e = (*v)(((PyObject *)p->shape), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_6bullet_6bullet_RigidBody(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_6bullet_6bullet_RigidBody *p = (struct __pyx_obj_6bullet_6bullet_RigidBody *)o;
  __pyx_tp_clear_6bullet_6bullet_CollisionObject(o);
  tmp = ((PyObject*)p->motion);
  p->motion = ((struct __pyx_obj_6bullet_6bullet_MotionState *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->shape);
  p->shape = ((struct __pyx_obj_6bullet_6bullet_CollisionShape *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_6bullet_6bullet_9RigidBody_linearSleepingThreshold(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6bullet_6bullet_9RigidBody_23linearSleepingThreshold_1__get__(o);
}

static int __pyx_setprop_6bullet_6bullet_9RigidBody_linearSleepingThreshold(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_6bullet_6bullet_9RigidBody_23linearSleepingThreshold_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bullet_6bullet_9RigidBody_angularSleepingThreshold(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6bullet_6bullet_9RigidBody_24angularSleepingThreshold_1__get__(o);
}

static int __pyx_setprop_6bullet_6bullet_9RigidBody_angularSleepingThreshold(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_6bullet_6bullet_9RigidBody_24angularSleepingThreshold_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_6bullet_6bullet_RigidBody[] = {
  {"fromConstructionInfo", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_3fromConstructionInfo, METH_VARARGS|METH_KEYWORDS, __pyx_doc_6bullet_6bullet_9RigidBody_2fromConstructionInfo},
  {"isInWorld", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_5isInWorld, METH_NOARGS, __pyx_doc_6bullet_6bullet_9RigidBody_4isInWorld},
  {"getInvMass", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_7getInvMass, METH_NOARGS, __pyx_doc_6bullet_6bullet_9RigidBody_6getInvMass},
  {"getInvInertiaDiagLocal", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_9getInvInertiaDiagLocal, METH_NOARGS, __pyx_doc_6bullet_6bullet_9RigidBody_8getInvInertiaDiagLocal},
  {"getMotionState", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_11getMotionState, METH_NOARGS, __pyx_doc_6bullet_6bullet_9RigidBody_10getMotionState},
  {"setAngularFactor", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_13setAngularFactor, METH_O, __pyx_doc_6bullet_6bullet_9RigidBody_12setAngularFactor},
  {"setLinearVelocity", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_15setLinearVelocity, METH_O, __pyx_doc_6bullet_6bullet_9RigidBody_14setLinearVelocity},
  {"getLinearVelocity", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_17getLinearVelocity, METH_NOARGS, __pyx_doc_6bullet_6bullet_9RigidBody_16getLinearVelocity},
  {"getLinearDamping", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_19getLinearDamping, METH_NOARGS, __pyx_doc_6bullet_6bullet_9RigidBody_18getLinearDamping},
  {"getLinearSleepingThreshold", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_21getLinearSleepingThreshold, METH_NOARGS, __pyx_doc_6bullet_6bullet_9RigidBody_20getLinearSleepingThreshold},
  {"getAngularSleepingThreshold", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_23getAngularSleepingThreshold, METH_NOARGS, __pyx_doc_6bullet_6bullet_9RigidBody_22getAngularSleepingThreshold},
  {"getAngularDamping", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_25getAngularDamping, METH_NOARGS, __pyx_doc_6bullet_6bullet_9RigidBody_24getAngularDamping},
  {"applyCentralForce", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_27applyCentralForce, METH_O, __pyx_doc_6bullet_6bullet_9RigidBody_26applyCentralForce},
  {"applyForce", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_29applyForce, METH_VARARGS|METH_KEYWORDS, __pyx_doc_6bullet_6bullet_9RigidBody_28applyForce},
  {"applyCentralImpulse", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_31applyCentralImpulse, METH_O, __pyx_doc_6bullet_6bullet_9RigidBody_30applyCentralImpulse},
  {"applyImpulse", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_33applyImpulse, METH_VARARGS|METH_KEYWORDS, __pyx_doc_6bullet_6bullet_9RigidBody_32applyImpulse},
  {"setGravity", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_35setGravity, METH_O, 0},
  {"setMassProps", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_37setMassProps, METH_VARARGS|METH_KEYWORDS, 0},
  {"updateInertiaTensor", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_39updateInertiaTensor, METH_NOARGS, 0},
  {"getAngularVelocity", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_41getAngularVelocity, METH_NOARGS, __pyx_doc_6bullet_6bullet_9RigidBody_40getAngularVelocity},
  {"setAngularVelocity", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_43setAngularVelocity, METH_O, 0},
  {"setSleepingThresholds", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_45setSleepingThresholds, METH_VARARGS|METH_KEYWORDS, __pyx_doc_6bullet_6bullet_9RigidBody_44setSleepingThresholds},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_47__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_9RigidBody_49__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bullet_6bullet_RigidBody[] = {
  {(char *)"linearSleepingThreshold", __pyx_getprop_6bullet_6bullet_9RigidBody_linearSleepingThreshold, __pyx_setprop_6bullet_6bullet_9RigidBody_linearSleepingThreshold, (char *)"Body's linearSleepingThreshold.", 0},
  {(char *)"angularSleepingThreshold", __pyx_getprop_6bullet_6bullet_9RigidBody_angularSleepingThreshold, __pyx_setprop_6bullet_6bullet_9RigidBody_angularSleepingThreshold, (char *)"Body's angularSleepingThreshold.", 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_RigidBody = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.RigidBody", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_RigidBody), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_RigidBody, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    A RigidBody is an object which can be added to a DynamicsWorld and involved\n    in dynamics (ie, it can move because of physics).\n\n    Like a CollisionObject, a RigidBody has a CollisionShape.  Additionally, it\n    may also have a MotionState to keep track of its movements.  It also has a\n    mass which will influence in the usual way how much acceleration it\n    experiences due to forces acting on it.\n\n    This class is a wrapper around btRigidBody.\n    ", /*tp_doc*/
  __pyx_tp_traverse_6bullet_6bullet_RigidBody, /*tp_traverse*/
  __pyx_tp_clear_6bullet_6bullet_RigidBody, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_RigidBody, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bullet_6bullet_RigidBody, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_6bullet_6bullet_9RigidBody_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_RigidBody, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_ActionInterface(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_ActionInterface(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6bullet_6bullet_15ActionInterface_1__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_ActionInterface[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_15ActionInterface_3__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_15ActionInterface_5__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_ActionInterface = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.ActionInterface", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_ActionInterface), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_ActionInterface, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    ActionInterface is a base class for objects in a DynamicsWorld which are not\n    purely dynamic.\n\n    This class is a wrapper around btActionInterface.\n\n    XXX THIS WRAPPER MAY CAUSE SEGFAULTS.  Use a subclass instead.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_ActionInterface, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_ActionInterface, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_CharacterControllerInterface(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_ActionInterface(t, a, k);
  if (unlikely(!o)) return 0;
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_CharacterControllerInterface[] = {
  {"setWalkDirection", (PyCFunction)__pyx_pw_6bullet_6bullet_28CharacterControllerInterface_1setWalkDirection, METH_O, __pyx_doc_6bullet_6bullet_28CharacterControllerInterface_setWalkDirection},
  {"setVelocityForTimeInterval", (PyCFunction)__pyx_pw_6bullet_6bullet_28CharacterControllerInterface_3setVelocityForTimeInterval, METH_VARARGS|METH_KEYWORDS, __pyx_doc_6bullet_6bullet_28CharacterControllerInterface_2setVelocityForTimeInterval},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_28CharacterControllerInterface_5__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_28CharacterControllerInterface_7__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_CharacterControllerInterface = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.CharacterControllerInterface", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_ActionInterface, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A CharacterControllerInterface is an ActionInterface which allows walking\n    motion to be applied to an object in a DynamicsWorld without physically\n    simulating that walking.\n\n    This class is a wrapper around btCharacterControllerInterface.\n\n    XXX THIS WRAPPER MAY CAUSE SEGFAULTS.  Use a subclass instead.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_CharacterControllerInterface, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_CharacterControllerInterface, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_PairCachingGhostObject(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CollisionObject(t, a, k);
  if (unlikely(!o)) return 0;
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_PairCachingGhostObject[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_22PairCachingGhostObject_3__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_22PairCachingGhostObject_5__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_PairCachingGhostObject = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.PairCachingGhostObject", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n     A PairCachingGhostObject is a CollisionObject which keeps track of all the\n     objects it is overlapping.\n\n     This class is a wrapper around btPairCachingGhostObject.\n     ", /*tp_doc*/
  __pyx_tp_traverse_6bullet_6bullet_CollisionObject, /*tp_traverse*/
  __pyx_tp_clear_6bullet_6bullet_CollisionObject, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_PairCachingGhostObject, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_6bullet_6bullet_22PairCachingGhostObject_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_PairCachingGhostObject, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_KinematicCharacterController(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *p;
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CharacterControllerInterface(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)o);
  p->ghost = ((struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_KinematicCharacterController(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *p = (struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  if (p->__weakref__) PyObject_ClearWeakRefs(o);
  Py_CLEAR(p->ghost);
  #if CYTHON_USE_TYPE_SLOTS
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6bullet_6bullet_ActionInterface(o);
}

static int __pyx_tp_traverse_6bullet_6bullet_KinematicCharacterController(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *p = (struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)o;
  e = ((likely(__pyx_ptype_6bullet_6bullet_CharacterControllerInterface)) ? ((__pyx_ptype_6bullet_6bullet_CharacterControllerInterface->tp_traverse) ? __pyx_ptype_6bullet_6bullet_CharacterControllerInterface->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_6bullet_6bullet_KinematicCharacterController)); if (e) return e;
  if (p->ghost) {
    e = (*v)(((PyObject *)p->ghost), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_6bullet_6bullet_KinematicCharacterController(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *p = (struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)o;
  if (likely(__pyx_ptype_6bullet_6bullet_CharacterControllerInterface)) { if (__pyx_ptype_6bullet_6bullet_CharacterControllerInterface->tp_clear) __pyx_ptype_6bullet_6bullet_CharacterControllerInterface->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_6bullet_6bullet_KinematicCharacterController);
  tmp = ((PyObject*)p->ghost);
  p->ghost = ((struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_6bullet_6bullet_28KinematicCharacterController_ghost(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6bullet_6bullet_28KinematicCharacterController_5ghost_1__get__(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_KinematicCharacterController[] = {
  {"warp", (PyCFunction)__pyx_pw_6bullet_6bullet_28KinematicCharacterController_3warp, METH_O, __pyx_doc_6bullet_6bullet_28KinematicCharacterController_2warp},
  {"getGravity", (PyCFunction)__pyx_pw_6bullet_6bullet_28KinematicCharacterController_5getGravity, METH_NOARGS, __pyx_doc_6bullet_6bullet_28KinematicCharacterController_4getGravity},
  {"setGravity", (PyCFunction)__pyx_pw_6bullet_6bullet_28KinematicCharacterController_7setGravity, METH_O, __pyx_doc_6bullet_6bullet_28KinematicCharacterController_6setGravity},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_28KinematicCharacterController_9__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_28KinematicCharacterController_11__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bullet_6bullet_KinematicCharacterController[] = {
  {(char *)"ghost", __pyx_getprop_6bullet_6bullet_28KinematicCharacterController_ghost, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_KinematicCharacterController = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.KinematicCharacterController", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_KinematicCharacterController), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_KinematicCharacterController, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    A KinematicCharacterController is a CharacterControllerInterface which\n    implements movement according to the standard rules of kinematics.  That is,\n    it will move based on a velocity and direction in the usual way, but without\n    regard for interactions with other objects in the world.\n\n    This class is a wrapper around btKinematicCharacterController.\n    ", /*tp_doc*/
  __pyx_tp_traverse_6bullet_6bullet_KinematicCharacterController, /*tp_traverse*/
  __pyx_tp_clear_6bullet_6bullet_KinematicCharacterController, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_KinematicCharacterController, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bullet_6bullet_KinematicCharacterController, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_6bullet_6bullet_28KinematicCharacterController_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_KinematicCharacterController, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_CollisionDispatcher(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6bullet_6bullet_19CollisionDispatcher_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_6bullet_6bullet_CollisionDispatcher(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6bullet_6bullet_19CollisionDispatcher_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_CollisionDispatcher[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_19CollisionDispatcher_5__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_19CollisionDispatcher_7__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_CollisionDispatcher = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.CollisionDispatcher", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_CollisionDispatcher), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionDispatcher, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A CollisionDispatcher implements pairwise collision detection.  It supports\n    convex-convex collision detection and convex-concave collision detection.\n\n    Roughly speaking, this is the only CollisionDispatcher available, so you\n    don't have to understand it, just use it.  Or better yet, ignore it and let\n    CollisionWorld (or a subclass) create it for you.\n\n    This class is a wrapper around btCollisionDispatcher.\n\n    XXX Try not to instantiate too many of these, each one leaks some memory.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_CollisionDispatcher, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_CollisionDispatcher, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_OverlappingPairCache(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_OverlappingPairCache(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6bullet_6bullet_20OverlappingPairCache_1__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_OverlappingPairCache[] = {
  {"setInternalGhostPairCallback", (PyCFunction)__pyx_pw_6bullet_6bullet_20OverlappingPairCache_3setInternalGhostPairCallback, METH_NOARGS, __pyx_doc_6bullet_6bullet_20OverlappingPairCache_2setInternalGhostPairCallback},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_20OverlappingPairCache_5__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_20OverlappingPairCache_7__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_OverlappingPairCache = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.OverlappingPairCache", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_OverlappingPairCache), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_OverlappingPairCache, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    An OverlappingPairCache manages the addition, removal, and storage of\n    overlapping pairs.\n\n    This class is a wrapper around btOverlappingPairCache.\n\n    XXX This wrapper will cause segfaults.  Use one of the subclasses instead.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_OverlappingPairCache, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_OverlappingPairCache, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_HashedOverlappingPairCache(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_OverlappingPairCache(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6bullet_6bullet_26HashedOverlappingPairCache_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_HashedOverlappingPairCache[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_26HashedOverlappingPairCache_3__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_26HashedOverlappingPairCache_5__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_HashedOverlappingPairCache = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.HashedOverlappingPairCache", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_HashedOverlappingPairCache), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_OverlappingPairCache, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A HashedOverlappingPairCache manages the addition, removal, and storage of\n    overlapping pairs using a hash table.\n\n    This class is a wrapper around btHashedOverlappingPairCache.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_HashedOverlappingPairCache, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_HashedOverlappingPairCache, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_BroadphaseInterface(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)o);
  p->_paircache = ((struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_BroadphaseInterface(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *p = (struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6bullet_6bullet_19BroadphaseInterface_1__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->_paircache);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_6bullet_6bullet_BroadphaseInterface(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *p = (struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)o;
  if (p->_paircache) {
    e = (*v)(((PyObject *)p->_paircache), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_6bullet_6bullet_BroadphaseInterface(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *p = (struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)o;
  tmp = ((PyObject*)p->_paircache);
  p->_paircache = ((struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_6bullet_6bullet_19BroadphaseInterface__paircache(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6bullet_6bullet_19BroadphaseInterface_10_paircache_1__get__(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_BroadphaseInterface[] = {
  {"getOverlappingPairCache", (PyCFunction)__pyx_pw_6bullet_6bullet_19BroadphaseInterface_3getOverlappingPairCache, METH_NOARGS, __pyx_doc_6bullet_6bullet_19BroadphaseInterface_2getOverlappingPairCache},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_19BroadphaseInterface_5__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_19BroadphaseInterface_7__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bullet_6bullet_BroadphaseInterface[] = {
  {(char *)"_paircache", __pyx_getprop_6bullet_6bullet_19BroadphaseInterface__paircache, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_BroadphaseInterface = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.BroadphaseInterface", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_BroadphaseInterface), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_BroadphaseInterface, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    A BroadphaseInterface generates lists of potentially colliding pairs.  It is\n    intended to be faster than CollisionDispatcher, but it may include pairs of\n    objects which do not actually collide.  It is applied first to narrow the\n    list of pairs the CollisionDispatcher will need to examine.\n\n    This class is loosely a wrapper around btBroadphaseInterface.\n\n    XXX THIS WRAPPER MAY CAUSE SEGFAULTS.  Use one of the subclasses instead.\n    ", /*tp_doc*/
  __pyx_tp_traverse_6bullet_6bullet_BroadphaseInterface, /*tp_traverse*/
  __pyx_tp_clear_6bullet_6bullet_BroadphaseInterface, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_BroadphaseInterface, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bullet_6bullet_BroadphaseInterface, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_BroadphaseInterface, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_AxisSweep3(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_BroadphaseInterface(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6bullet_6bullet_10AxisSweep3_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_AxisSweep3[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_10AxisSweep3_3__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_10AxisSweep3_5__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_AxisSweep3 = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.AxisSweep3", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_AxisSweep3), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_BroadphaseInterface, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    An AxisSweep3 is a BroadphaseInterface implemented using the sweep and prune\n    algorithm.  AxisSweep3 is a good general purpose BroadphaseInterface,\n    particularly for worlds where most objects have little or no motion.\n    However, it can only detect collisions within specified fixed bounds.\n\n    This class is a wrapper around btAxisSweep3.\n    ", /*tp_doc*/
  __pyx_tp_traverse_6bullet_6bullet_BroadphaseInterface, /*tp_traverse*/
  __pyx_tp_clear_6bullet_6bullet_BroadphaseInterface, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_AxisSweep3, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_AxisSweep3, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_ConstraintSolver(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_ConstraintSolver(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6bullet_6bullet_16ConstraintSolver_1__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_ConstraintSolver[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_16ConstraintSolver_3__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_16ConstraintSolver_5__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_ConstraintSolver = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.ConstraintSolver", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_ConstraintSolver), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_ConstraintSolver, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A ConstraintSolver determines what contact forces to apply.\n\n    This class is loosely a wrapper around btConstraintSolver.\n\n    XXX THIS WRAPPER MAY CAUSE SEGFAULTS.  Use one of the subclasses instead.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_ConstraintSolver, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_ConstraintSolver, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_SequentialImpulseConstraintSolver(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_ConstraintSolver(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6bullet_6bullet_33SequentialImpulseConstraintSolver_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_SequentialImpulseConstraintSolver[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_33SequentialImpulseConstraintSolver_3__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_33SequentialImpulseConstraintSolver_5__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_SequentialImpulseConstraintSolver = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.SequentialImpulseConstraintSolver", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_SequentialImpulseConstraintSolver), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_ConstraintSolver, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A SequentialImpulseConstraintSolver is a ConstraintSolver based on a fast\n    SIMD implementation of the Projected Gauss Seidel method.\n\n    This is basically the only ConstraintSolver available, so whether you\n    understood that sentence or not, use this class with your DynamicsWorld.  Or\n    just ignore ConstraintSolvers entirely and let the DynamicsWorld create one.\n\n    This class is a wrapper around btSequentialImpulseConstraintSolver.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_SequentialImpulseConstraintSolver, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_SequentialImpulseConstraintSolver, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_CollisionWorld(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_CollisionWorld(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_CollisionWorld *p = (struct __pyx_obj_6bullet_6bullet_CollisionWorld *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6bullet_6bullet_14CollisionWorld_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  if (p->__weakref__) PyObject_ClearWeakRefs(o);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_CollisionWorld[] = {
  {"setDebugDrawer", (PyCFunction)__pyx_pw_6bullet_6bullet_14CollisionWorld_5setDebugDrawer, METH_O, __pyx_doc_6bullet_6bullet_14CollisionWorld_4setDebugDrawer},
  {"debugDrawWorld", (PyCFunction)__pyx_pw_6bullet_6bullet_14CollisionWorld_7debugDrawWorld, METH_NOARGS, __pyx_doc_6bullet_6bullet_14CollisionWorld_6debugDrawWorld},
  {"getNumCollisionObjects", (PyCFunction)__pyx_pw_6bullet_6bullet_14CollisionWorld_9getNumCollisionObjects, METH_NOARGS, __pyx_doc_6bullet_6bullet_14CollisionWorld_8getNumCollisionObjects},
  {"addCollisionObject", (PyCFunction)__pyx_pw_6bullet_6bullet_14CollisionWorld_11addCollisionObject, METH_VARARGS|METH_KEYWORDS, __pyx_doc_6bullet_6bullet_14CollisionWorld_10addCollisionObject},
  {"removeCollisionObject", (PyCFunction)__pyx_pw_6bullet_6bullet_14CollisionWorld_13removeCollisionObject, METH_O, __pyx_doc_6bullet_6bullet_14CollisionWorld_12removeCollisionObject},
  {"getCollisionObjectArray", (PyCFunction)__pyx_pw_6bullet_6bullet_14CollisionWorld_15getCollisionObjectArray, METH_NOARGS, 0},
  {"rayTestClosest", (PyCFunction)__pyx_pw_6bullet_6bullet_14CollisionWorld_17rayTestClosest, METH_VARARGS|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_14CollisionWorld_19__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_14CollisionWorld_21__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_CollisionWorld = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.CollisionWorld", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_CollisionWorld), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionWorld, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A CollisionWorld is a container for CollisionObjects which can detect\n    collisions between those objects.\n\n    This class is a wrapper around btCollisionWorld.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_CollisionWorld, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_6bullet_6bullet_14CollisionWorld_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_CollisionWorld, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_RayResult(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_RayResult *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_RayResult *)o);
  p->collisionObject = ((struct __pyx_obj_6bullet_6bullet_CollisionObject *)Py_None); Py_INCREF(Py_None);
  p->rayFromWorld = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)Py_None); Py_INCREF(Py_None);
  p->rayToWorld = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)Py_None); Py_INCREF(Py_None);
  p->hitNormalWorld = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)Py_None); Py_INCREF(Py_None);
  p->hitPointWorld = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_6bullet_6bullet_9RayResult_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_6bullet_6bullet_RayResult(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_RayResult *p = (struct __pyx_obj_6bullet_6bullet_RayResult *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->collisionObject);
  Py_CLEAR(p->rayFromWorld);
  Py_CLEAR(p->rayToWorld);
  Py_CLEAR(p->hitNormalWorld);
  Py_CLEAR(p->hitPointWorld);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_6bullet_6bullet_RayResult(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_6bullet_6bullet_RayResult *p = (struct __pyx_obj_6bullet_6bullet_RayResult *)o;
  if (p->collisionObject) {
    e = (*v)(((PyObject *)p->collisionObject), a); if (e) return e;
  }
  if (p->rayFromWorld) {
    e = (*v)(((PyObject *)p->rayFromWorld), a); if (e) return e;
  }
  if (p->rayToWorld) {
    e = (*v)(((PyObject *)p->rayToWorld), a); if (e) return e;
  }
  if (p->hitNormalWorld) {
    e = (*v)(((PyObject *)p->hitNormalWorld), a); if (e) return e;
  }
  if (p->hitPointWorld) {
    e = (*v)(((PyObject *)p->hitPointWorld), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_6bullet_6bullet_RayResult(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_6bullet_6bullet_RayResult *p = (struct __pyx_obj_6bullet_6bullet_RayResult *)o;
  tmp = ((PyObject*)p->collisionObject);
  p->collisionObject = ((struct __pyx_obj_6bullet_6bullet_CollisionObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->rayFromWorld);
  p->rayFromWorld = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->rayToWorld);
  p->rayToWorld = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->hitNormalWorld);
  p->hitNormalWorld = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->hitPointWorld);
  p->hitPointWorld = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_6bullet_6bullet_9RayResult_closestHitFraction(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6bullet_6bullet_9RayResult_18closestHitFraction_1__get__(o);
}

static PyObject *__pyx_getprop_6bullet_6bullet_9RayResult_collisionObject(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6bullet_6bullet_9RayResult_15collisionObject_1__get__(o);
}

static PyObject *__pyx_getprop_6bullet_6bullet_9RayResult_collisionFilterGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6bullet_6bullet_9RayResult_20collisionFilterGroup_1__get__(o);
}

static PyObject *__pyx_getprop_6bullet_6bullet_9RayResult_collisionFilterMask(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6bullet_6bullet_9RayResult_19collisionFilterMask_1__get__(o);
}

static PyObject *__pyx_getprop_6bullet_6bullet_9RayResult_flags(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6bullet_6bullet_9RayResult_5flags_1__get__(o);
}

static PyObject *__pyx_getprop_6bullet_6bullet_9RayResult_rayFromWorld(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6bullet_6bullet_9RayResult_12rayFromWorld_1__get__(o);
}

static PyObject *__pyx_getprop_6bullet_6bullet_9RayResult_rayToWorld(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6bullet_6bullet_9RayResult_10rayToWorld_1__get__(o);
}

static PyObject *__pyx_getprop_6bullet_6bullet_9RayResult_hitNormalWorld(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6bullet_6bullet_9RayResult_14hitNormalWorld_1__get__(o);
}

static PyObject *__pyx_getprop_6bullet_6bullet_9RayResult_hitPointWorld(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_6bullet_6bullet_9RayResult_13hitPointWorld_1__get__(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_RayResult[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_9RayResult_3__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_9RayResult_5__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bullet_6bullet_RayResult[] = {
  {(char *)"closestHitFraction", __pyx_getprop_6bullet_6bullet_9RayResult_closestHitFraction, 0, (char *)0, 0},
  {(char *)"collisionObject", __pyx_getprop_6bullet_6bullet_9RayResult_collisionObject, 0, (char *)0, 0},
  {(char *)"collisionFilterGroup", __pyx_getprop_6bullet_6bullet_9RayResult_collisionFilterGroup, 0, (char *)0, 0},
  {(char *)"collisionFilterMask", __pyx_getprop_6bullet_6bullet_9RayResult_collisionFilterMask, 0, (char *)0, 0},
  {(char *)"flags", __pyx_getprop_6bullet_6bullet_9RayResult_flags, 0, (char *)0, 0},
  {(char *)"rayFromWorld", __pyx_getprop_6bullet_6bullet_9RayResult_rayFromWorld, 0, (char *)0, 0},
  {(char *)"rayToWorld", __pyx_getprop_6bullet_6bullet_9RayResult_rayToWorld, 0, (char *)0, 0},
  {(char *)"hitNormalWorld", __pyx_getprop_6bullet_6bullet_9RayResult_hitNormalWorld, 0, (char *)0, 0},
  {(char *)"hitPointWorld", __pyx_getprop_6bullet_6bullet_9RayResult_hitPointWorld, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_RayResult = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.RayResult", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_RayResult), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_RayResult, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_6bullet_6bullet_RayResult, /*tp_traverse*/
  __pyx_tp_clear_6bullet_6bullet_RayResult, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_RayResult, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bullet_6bullet_RayResult, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_RayResult, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_DynamicsWorld(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CollisionWorld(t, a, k);
  if (unlikely(!o)) return 0;
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_DynamicsWorld(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6bullet_6bullet_13DynamicsWorld_1__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __pyx_tp_dealloc_6bullet_6bullet_CollisionWorld(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_DynamicsWorld[] = {
  {"removeRigidBody", (PyCFunction)__pyx_pw_6bullet_6bullet_13DynamicsWorld_3removeRigidBody, METH_O, __pyx_doc_6bullet_6bullet_13DynamicsWorld_2removeRigidBody},
  {"addAction", (PyCFunction)__pyx_pw_6bullet_6bullet_13DynamicsWorld_5addAction, METH_O, __pyx_doc_6bullet_6bullet_13DynamicsWorld_4addAction},
  {"removeAction", (PyCFunction)__pyx_pw_6bullet_6bullet_13DynamicsWorld_7removeAction, METH_O, __pyx_doc_6bullet_6bullet_13DynamicsWorld_6removeAction},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_13DynamicsWorld_9__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_13DynamicsWorld_11__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_DynamicsWorld = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.DynamicsWorld", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_DynamicsWorld), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_DynamicsWorld, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    A DynamicsWorld is a container for RigidBodies which implements dynamics (ie\n    physics) for those bodies.\n\n    For a dynamics world in which simulation time can actually pass, see one of\n    the subclasses of this class.\n\n    This class is a wrapper around btDynamicsWorld, which is pure virtual - so\n    don't instantiate this class!\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_DynamicsWorld, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_pw_6bullet_6bullet_14CollisionWorld_1__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_DynamicsWorld, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_DiscreteDynamicsWorld(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *p;
  PyObject *o = __pyx_tp_new_6bullet_6bullet_DynamicsWorld(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)o);
  p->solver = ((struct __pyx_obj_6bullet_6bullet_ConstraintSolver *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_DiscreteDynamicsWorld(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *p = (struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->solver);
  #if CYTHON_USE_TYPE_SLOTS
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_6bullet_6bullet_DynamicsWorld(o);
}

static int __pyx_tp_traverse_6bullet_6bullet_DiscreteDynamicsWorld(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *p = (struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)o;
  e = ((likely(__pyx_ptype_6bullet_6bullet_DynamicsWorld)) ? ((__pyx_ptype_6bullet_6bullet_DynamicsWorld->tp_traverse) ? __pyx_ptype_6bullet_6bullet_DynamicsWorld->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_6bullet_6bullet_DiscreteDynamicsWorld)); if (e) return e;
  if (p->solver) {
    e = (*v)(((PyObject *)p->solver), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_6bullet_6bullet_DiscreteDynamicsWorld(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *p = (struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)o;
  if (likely(__pyx_ptype_6bullet_6bullet_DynamicsWorld)) { if (__pyx_ptype_6bullet_6bullet_DynamicsWorld->tp_clear) __pyx_ptype_6bullet_6bullet_DynamicsWorld->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_6bullet_6bullet_DiscreteDynamicsWorld);
  tmp = ((PyObject*)p->solver);
  p->solver = ((struct __pyx_obj_6bullet_6bullet_ConstraintSolver *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_DiscreteDynamicsWorld[] = {
  {"addRigidBody", (PyCFunction)__pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_3addRigidBody, METH_VARARGS|METH_KEYWORDS, __pyx_doc_6bullet_6bullet_21DiscreteDynamicsWorld_2addRigidBody},
  {"setGravity", (PyCFunction)__pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_5setGravity, METH_O, __pyx_doc_6bullet_6bullet_21DiscreteDynamicsWorld_4setGravity},
  {"getGravity", (PyCFunction)__pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_7getGravity, METH_NOARGS, __pyx_doc_6bullet_6bullet_21DiscreteDynamicsWorld_6getGravity},
  {"stepSimulation", (PyCFunction)__pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_9stepSimulation, METH_VARARGS|METH_KEYWORDS, __pyx_doc_6bullet_6bullet_21DiscreteDynamicsWorld_8stepSimulation},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_11__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_13__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bullet_6bullet_DiscreteDynamicsWorld = {
  PyVarObject_HEAD_INIT(0, 0)
  "bullet.bullet.DiscreteDynamicsWorld", /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_DiscreteDynamicsWorld, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    A DiscreteDynamicsWorld is a DynamicsWorld in which time passes in fixed\n    increments.\n\n    This class is a wrapper around btDiscreteDynamicsWorld.\n    ", /*tp_doc*/
  __pyx_tp_traverse_6bullet_6bullet_DiscreteDynamicsWorld, /*tp_traverse*/
  __pyx_tp_clear_6bullet_6bullet_DiscreteDynamicsWorld, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_DiscreteDynamicsWorld, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_6bullet_6bullet_21DiscreteDynamicsWorld_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_DiscreteDynamicsWorld, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_bullet(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_bullet},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "bullet",
    __pyx_k_PyBullet_wraps_the_Bullet_Physi, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_ACTIVE_TAG, __pyx_k_ACTIVE_TAG, sizeof(__pyx_k_ACTIVE_TAG), 0, 0, 1, 1},
  {&__pyx_n_s_AllFilter, __pyx_k_AllFilter, sizeof(__pyx_k_AllFilter), 0, 0, 1, 1},
  {&__pyx_n_s_CF_CHARACTER_OBJECT, __pyx_k_CF_CHARACTER_OBJECT, sizeof(__pyx_k_CF_CHARACTER_OBJECT), 0, 0, 1, 1},
  {&__pyx_n_s_CF_CUSTOM_MATERIAL_CALLBACK, __pyx_k_CF_CUSTOM_MATERIAL_CALLBACK, sizeof(__pyx_k_CF_CUSTOM_MATERIAL_CALLBACK), 0, 0, 1, 1},
  {&__pyx_n_s_CF_DISABLE_SPU_COLLISION_PROCESS, __pyx_k_CF_DISABLE_SPU_COLLISION_PROCESS, sizeof(__pyx_k_CF_DISABLE_SPU_COLLISION_PROCESS), 0, 0, 1, 1},
  {&__pyx_n_s_CF_DISABLE_VISUALIZE_OBJECT, __pyx_k_CF_DISABLE_VISUALIZE_OBJECT, sizeof(__pyx_k_CF_DISABLE_VISUALIZE_OBJECT), 0, 0, 1, 1},
  {&__pyx_n_s_CF_KINEMATIC_OBJECT, __pyx_k_CF_KINEMATIC_OBJECT, sizeof(__pyx_k_CF_KINEMATIC_OBJECT), 0, 0, 1, 1},
  {&__pyx_n_s_CF_NO_CONTACT_RESPONSE, __pyx_k_CF_NO_CONTACT_RESPONSE, sizeof(__pyx_k_CF_NO_CONTACT_RESPONSE), 0, 0, 1, 1},
  {&__pyx_n_s_CF_STATIC_OBJECT, __pyx_k_CF_STATIC_OBJECT, sizeof(__pyx_k_CF_STATIC_OBJECT), 0, 0, 1, 1},
  {&__pyx_kp_s_Cannot_add_CollisionObject_witho, __pyx_k_Cannot_add_CollisionObject_witho, sizeof(__pyx_k_Cannot_add_CollisionObject_witho), 0, 0, 1, 0},
  {&__pyx_kp_s_Collision_object_not_found_in_wo, __pyx_k_Collision_object_not_found_in_wo, sizeof(__pyx_k_Collision_object_not_found_in_wo), 0, 0, 1, 0},
  {&__pyx_n_s_DISABLE_DEACTIVATION, __pyx_k_DISABLE_DEACTIVATION, sizeof(__pyx_k_DISABLE_DEACTIVATION), 0, 0, 1, 1},
  {&__pyx_n_s_DISABLE_SIMULATION, __pyx_k_DISABLE_SIMULATION, sizeof(__pyx_k_DISABLE_SIMULATION), 0, 0, 1, 1},
  {&__pyx_n_s_DRAW_AABB, __pyx_k_DRAW_AABB, sizeof(__pyx_k_DRAW_AABB), 0, 0, 1, 1},
  {&__pyx_n_s_DRAW_CONSTRAINTS, __pyx_k_DRAW_CONSTRAINTS, sizeof(__pyx_k_DRAW_CONSTRAINTS), 0, 0, 1, 1},
  {&__pyx_n_s_DRAW_CONSTRAINT_LIMITS, __pyx_k_DRAW_CONSTRAINT_LIMITS, sizeof(__pyx_k_DRAW_CONSTRAINT_LIMITS), 0, 0, 1, 1},
  {&__pyx_n_s_DRAW_CONTACT_POINTS, __pyx_k_DRAW_CONTACT_POINTS, sizeof(__pyx_k_DRAW_CONTACT_POINTS), 0, 0, 1, 1},
  {&__pyx_n_s_DRAW_FEATURES_TEXT, __pyx_k_DRAW_FEATURES_TEXT, sizeof(__pyx_k_DRAW_FEATURES_TEXT), 0, 0, 1, 1},
  {&__pyx_n_s_DRAW_TEXT, __pyx_k_DRAW_TEXT, sizeof(__pyx_k_DRAW_TEXT), 0, 0, 1, 1},
  {&__pyx_n_s_DRAW_WIREFRAME, __pyx_k_DRAW_WIREFRAME, sizeof(__pyx_k_DRAW_WIREFRAME), 0, 0, 1, 1},
  {&__pyx_n_s_DefaultFilter, __pyx_k_DefaultFilter, sizeof(__pyx_k_DefaultFilter), 0, 0, 1, 1},
  {&__pyx_kp_s_Error_in_cyBullet_rayTestClosest, __pyx_k_Error_in_cyBullet_rayTestClosest, sizeof(__pyx_k_Error_in_cyBullet_rayTestClosest), 0, 0, 1, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor, __pyx_k_Format_string_allocated_too_shor, sizeof(__pyx_k_Format_string_allocated_too_shor), 0, 1, 0, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor_2, __pyx_k_Format_string_allocated_too_shor_2, sizeof(__pyx_k_Format_string_allocated_too_shor_2), 0, 1, 0, 0},
  {&__pyx_n_s_ISLAND_SLEEPING, __pyx_k_ISLAND_SLEEPING, sizeof(__pyx_k_ISLAND_SLEEPING), 0, 0, 1, 1},
  {&__pyx_n_s_ImportError, __pyx_k_ImportError, sizeof(__pyx_k_ImportError), 0, 0, 1, 1},
  {&__pyx_kp_s_Incompatible_checksums_s_vs_0x49, __pyx_k_Incompatible_checksums_s_vs_0x49, sizeof(__pyx_k_Incompatible_checksums_s_vs_0x49), 0, 0, 1, 0},
  {&__pyx_n_s_NO_DEBUG, __pyx_k_NO_DEBUG, sizeof(__pyx_k_NO_DEBUG), 0, 0, 1, 1},
  {&__pyx_kp_u_Non_native_byte_order_not_suppor, __pyx_k_Non_native_byte_order_not_suppor, sizeof(__pyx_k_Non_native_byte_order_not_suppor), 0, 1, 0, 0},
  {&__pyx_n_s_PickleError, __pyx_k_PickleError, sizeof(__pyx_k_PickleError), 0, 0, 1, 1},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
  {&__pyx_kp_s_Unsupported_index_array_type, __pyx_k_Unsupported_index_array_type, sizeof(__pyx_k_Unsupported_index_array_type), 0, 0, 1, 0},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_kp_s_Vector_x_s_y_s_z_s, __pyx_k_Vector_x_s_y_s_z_s, sizeof(__pyx_k_Vector_x_s_y_s_z_s), 0, 0, 1, 0},
  {&__pyx_n_s_WANTS_DEACTIVATION, __pyx_k_WANTS_DEACTIVATION, sizeof(__pyx_k_WANTS_DEACTIVATION), 0, 0, 1, 1},
  {&__pyx_n_s_XXX, __pyx_k_XXX, sizeof(__pyx_k_XXX), 0, 0, 1, 1},
  {&__pyx_n_s_angle, __pyx_k_angle, sizeof(__pyx_k_angle), 0, 0, 1, 1},
  {&__pyx_n_s_angular, __pyx_k_angular, sizeof(__pyx_k_angular), 0, 0, 1, 1},
  {&__pyx_n_s_angularDamping, __pyx_k_angularDamping, sizeof(__pyx_k_angularDamping), 0, 0, 1, 1},
  {&__pyx_n_s_angularSleepingThreshold, __pyx_k_angularSleepingThreshold, sizeof(__pyx_k_angularSleepingThreshold), 0, 0, 1, 1},
  {&__pyx_n_s_axis, __pyx_k_axis, sizeof(__pyx_k_axis), 0, 0, 1, 1},
  {&__pyx_n_s_body, __pyx_k_body, sizeof(__pyx_k_body), 0, 0, 1, 1},
  {&__pyx_n_s_boxHalfExtents, __pyx_k_boxHalfExtents, sizeof(__pyx_k_boxHalfExtents), 0, 0, 1, 1},
  {&__pyx_n_s_broadphase, __pyx_k_broadphase, sizeof(__pyx_k_broadphase), 0, 0, 1, 1},
  {&__pyx_n_s_bullet_bullet, __pyx_k_bullet_bullet, sizeof(__pyx_k_bullet_bullet), 0, 0, 1, 1},
  {&__pyx_n_s_char, __pyx_k_char, sizeof(__pyx_k_char), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_collisionFilterGroup, __pyx_k_collisionFilterGroup, sizeof(__pyx_k_collisionFilterGroup), 0, 0, 1, 1},
  {&__pyx_n_s_collisionFilterMask, __pyx_k_collisionFilterMask, sizeof(__pyx_k_collisionFilterMask), 0, 0, 1, 1},
  {&__pyx_n_s_collisionObject, __pyx_k_collisionObject, sizeof(__pyx_k_collisionObject), 0, 0, 1, 1},
  {&__pyx_n_s_constant, __pyx_k_constant, sizeof(__pyx_k_constant), 0, 0, 1, 1},
  {&__pyx_n_s_dealloc, __pyx_k_dealloc, sizeof(__pyx_k_dealloc), 0, 0, 1, 1},
  {&__pyx_n_s_dict, __pyx_k_dict, sizeof(__pyx_k_dict), 0, 0, 1, 1},
  {&__pyx_n_s_dispatcher, __pyx_k_dispatcher, sizeof(__pyx_k_dispatcher), 0, 0, 1, 1},
  {&__pyx_n_s_dtype, __pyx_k_dtype, sizeof(__pyx_k_dtype), 0, 0, 1, 1},
  {&__pyx_n_s_end, __pyx_k_end, sizeof(__pyx_k_end), 0, 0, 1, 1},
  {&__pyx_n_s_f, __pyx_k_f, sizeof(__pyx_k_f), 0, 0, 1, 1},
  {&__pyx_n_s_file, __pyx_k_file, sizeof(__pyx_k_file), 0, 0, 1, 1},
  {&__pyx_n_s_fixedTimeStep, __pyx_k_fixedTimeStep, sizeof(__pyx_k_fixedTimeStep), 0, 0, 1, 1},
  {&__pyx_n_s_forceActivation, __pyx_k_forceActivation, sizeof(__pyx_k_forceActivation), 0, 0, 1, 1},
  {&__pyx_n_s_friction, __pyx_k_friction, sizeof(__pyx_k_friction), 0, 0, 1, 1},
  {&__pyx_n_s_fromAxisAngle, __pyx_k_fromAxisAngle, sizeof(__pyx_k_fromAxisAngle), 0, 0, 1, 1},
  {&__pyx_n_s_fromConstructionInfo, __pyx_k_fromConstructionInfo, sizeof(__pyx_k_fromConstructionInfo), 0, 0, 1, 1},
  {&__pyx_n_s_fromScalars, __pyx_k_fromScalars, sizeof(__pyx_k_fromScalars), 0, 0, 1, 1},
  {&__pyx_n_s_getAngularSleepingThreshold, __pyx_k_getAngularSleepingThreshold, sizeof(__pyx_k_getAngularSleepingThreshold), 0, 0, 1, 1},
  {&__pyx_n_s_getLinearSleepingThreshold, __pyx_k_getLinearSleepingThreshold, sizeof(__pyx_k_getLinearSleepingThreshold), 0, 0, 1, 1},
  {&__pyx_n_s_getNumCollisionObjects, __pyx_k_getNumCollisionObjects, sizeof(__pyx_k_getNumCollisionObjects), 0, 0, 1, 1},
  {&__pyx_n_s_getW, __pyx_k_getW, sizeof(__pyx_k_getW), 0, 0, 1, 1},
  {&__pyx_n_s_getX, __pyx_k_getX, sizeof(__pyx_k_getX), 0, 0, 1, 1},
  {&__pyx_n_s_getY, __pyx_k_getY, sizeof(__pyx_k_getY), 0, 0, 1, 1},
  {&__pyx_n_s_getZ, __pyx_k_getZ, sizeof(__pyx_k_getZ), 0, 0, 1, 1},
  {&__pyx_n_s_getstate, __pyx_k_getstate, sizeof(__pyx_k_getstate), 0, 0, 1, 1},
  {&__pyx_n_s_ghost, __pyx_k_ghost, sizeof(__pyx_k_ghost), 0, 0, 1, 1},
  {&__pyx_n_s_group, __pyx_k_group, sizeof(__pyx_k_group), 0, 0, 1, 1},
  {&__pyx_n_s_halfExtents, __pyx_k_halfExtents, sizeof(__pyx_k_halfExtents), 0, 0, 1, 1},
  {&__pyx_n_s_height, __pyx_k_height, sizeof(__pyx_k_height), 0, 0, 1, 1},
  {&__pyx_n_s_i, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_indexBase, __pyx_k_indexBase, sizeof(__pyx_k_indexBase), 0, 0, 1, 1},
  {&__pyx_n_s_indexStride, __pyx_k_indexStride, sizeof(__pyx_k_indexStride), 0, 0, 1, 1},
  {&__pyx_n_s_inertia, __pyx_k_inertia, sizeof(__pyx_k_inertia), 0, 0, 1, 1},
  {&__pyx_n_s_init, __pyx_k_init, sizeof(__pyx_k_init), 0, 0, 1, 1},
  {&__pyx_n_s_initialTransformation, __pyx_k_initialTransformation, sizeof(__pyx_k_initialTransformation), 0, 0, 1, 1},
  {&__pyx_n_s_keys, __pyx_k_keys, sizeof(__pyx_k_keys), 0, 0, 1, 1},
  {&__pyx_n_s_linear, __pyx_k_linear, sizeof(__pyx_k_linear), 0, 0, 1, 1},
  {&__pyx_n_s_linearDamping, __pyx_k_linearDamping, sizeof(__pyx_k_linearDamping), 0, 0, 1, 1},
  {&__pyx_n_s_linearSleepingThreshold, __pyx_k_linearSleepingThreshold, sizeof(__pyx_k_linearSleepingThreshold), 0, 0, 1, 1},
  {&__pyx_n_s_lower, __pyx_k_lower, sizeof(__pyx_k_lower), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_mask, __pyx_k_mask, sizeof(__pyx_k_mask), 0, 0, 1, 1},
  {&__pyx_n_s_mass, __pyx_k_mass, sizeof(__pyx_k_mass), 0, 0, 1, 1},
  {&__pyx_n_s_maxSubSteps, __pyx_k_maxSubSteps, sizeof(__pyx_k_maxSubSteps), 0, 0, 1, 1},
  {&__pyx_n_s_mesh, __pyx_k_mesh, sizeof(__pyx_k_mesh), 0, 0, 1, 1},
  {&__pyx_n_s_message, __pyx_k_message, sizeof(__pyx_k_message), 0, 0, 1, 1},
  {&__pyx_n_s_motion, __pyx_k_motion, sizeof(__pyx_k_motion), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_kp_u_ndarray_is_not_C_contiguous, __pyx_k_ndarray_is_not_C_contiguous, sizeof(__pyx_k_ndarray_is_not_C_contiguous), 0, 1, 0, 0},
  {&__pyx_kp_u_ndarray_is_not_Fortran_contiguou, __pyx_k_ndarray_is_not_Fortran_contiguou, sizeof(__pyx_k_ndarray_is_not_Fortran_contiguou), 0, 1, 0, 0},
  {&__pyx_n_s_new, __pyx_k_new, sizeof(__pyx_k_new), 0, 0, 1, 1},
  {&__pyx_kp_s_no_default___reduce___due_to_non, __pyx_k_no_default___reduce___due_to_non, sizeof(__pyx_k_no_default___reduce___due_to_non), 0, 0, 1, 0},
  {&__pyx_n_s_normal, __pyx_k_normal, sizeof(__pyx_k_normal), 0, 0, 1, 1},
  {&__pyx_n_s_numTriangles, __pyx_k_numTriangles, sizeof(__pyx_k_numTriangles), 0, 0, 1, 1},
  {&__pyx_n_s_numVertices, __pyx_k_numVertices, sizeof(__pyx_k_numVertices), 0, 0, 1, 1},
  {&__pyx_kp_s_numpy_core_multiarray_failed_to, __pyx_k_numpy_core_multiarray_failed_to, sizeof(__pyx_k_numpy_core_multiarray_failed_to), 0, 0, 1, 0},
  {&__pyx_kp_s_numpy_core_umath_failed_to_impor, __pyx_k_numpy_core_umath_failed_to_impor, sizeof(__pyx_k_numpy_core_umath_failed_to_impor), 0, 0, 1, 0},
  {&__pyx_n_s_pickle, __pyx_k_pickle, sizeof(__pyx_k_pickle), 0, 0, 1, 1},
  {&__pyx_n_s_print, __pyx_k_print, sizeof(__pyx_k_print), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_PickleError, __pyx_k_pyx_PickleError, sizeof(__pyx_k_pyx_PickleError), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_checksum, __pyx_k_pyx_checksum, sizeof(__pyx_k_pyx_checksum), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_result, __pyx_k_pyx_result, sizeof(__pyx_k_pyx_result), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_state, __pyx_k_pyx_state, sizeof(__pyx_k_pyx_state), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_type, __pyx_k_pyx_type, sizeof(__pyx_k_pyx_type), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_BroadphaseProxy, __pyx_k_pyx_unpickle_BroadphaseProxy, sizeof(__pyx_k_pyx_unpickle_BroadphaseProxy), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_radius, __pyx_k_radius, sizeof(__pyx_k_radius), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_rayFromWorld, __pyx_k_rayFromWorld, sizeof(__pyx_k_rayFromWorld), 0, 0, 1, 1},
  {&__pyx_n_s_rayToWorld, __pyx_k_rayToWorld, sizeof(__pyx_k_rayToWorld), 0, 0, 1, 1},
  {&__pyx_n_s_reduce, __pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_cython, __pyx_k_reduce_cython, sizeof(__pyx_k_reduce_cython), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_ex, __pyx_k_reduce_ex, sizeof(__pyx_k_reduce_ex), 0, 0, 1, 1},
  {&__pyx_n_s_relativePosition, __pyx_k_relativePosition, sizeof(__pyx_k_relativePosition), 0, 0, 1, 1},
  {&__pyx_n_s_restitution, __pyx_k_restitution, sizeof(__pyx_k_restitution), 0, 0, 1, 1},
  {&__pyx_kp_s_self_broadphase_self_debugDraw_s, __pyx_k_self_broadphase_self_debugDraw_s, sizeof(__pyx_k_self_broadphase_self_debugDraw_s), 0, 0, 1, 0},
  {&__pyx_kp_s_self_quaternion_cannot_be_conver, __pyx_k_self_quaternion_cannot_be_conver, sizeof(__pyx_k_self_quaternion_cannot_be_conver), 0, 0, 1, 0},
  {&__pyx_kp_s_self_thisptr_cannot_be_converted, __pyx_k_self_thisptr_cannot_be_converted, sizeof(__pyx_k_self_thisptr_cannot_be_converted), 0, 0, 1, 0},
  {&__pyx_n_s_setOrigin, __pyx_k_setOrigin, sizeof(__pyx_k_setOrigin), 0, 0, 1, 1},
  {&__pyx_n_s_setRotation, __pyx_k_setRotation, sizeof(__pyx_k_setRotation), 0, 0, 1, 1},
  {&__pyx_n_s_setSleepingThresholds, __pyx_k_setSleepingThresholds, sizeof(__pyx_k_setSleepingThresholds), 0, 0, 1, 1},
  {&__pyx_n_s_setWorldTransform, __pyx_k_setWorldTransform, sizeof(__pyx_k_setWorldTransform), 0, 0, 1, 1},
  {&__pyx_n_s_setstate, __pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 0, 1, 1},
  {&__pyx_n_s_setstate_cython, __pyx_k_setstate_cython, sizeof(__pyx_k_setstate_cython), 0, 0, 1, 1},
  {&__pyx_n_s_shape, __pyx_k_shape, sizeof(__pyx_k_shape), 0, 0, 1, 1},
  {&__pyx_n_s_solver, __pyx_k_solver, sizeof(__pyx_k_solver), 0, 0, 1, 1},
  {&__pyx_n_s_stepHeight, __pyx_k_stepHeight, sizeof(__pyx_k_stepHeight), 0, 0, 1, 1},
  {&__pyx_kp_s_stringsource, __pyx_k_stringsource, sizeof(__pyx_k_stringsource), 0, 0, 1, 0},
  {&__pyx_n_s_stwL, __pyx_k_stwL, sizeof(__pyx_k_stwL), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_timeInterval, __pyx_k_timeInterval, sizeof(__pyx_k_timeInterval), 0, 0, 1, 1},
  {&__pyx_n_s_timeStep, __pyx_k_timeStep, sizeof(__pyx_k_timeStep), 0, 0, 1, 1},
  {&__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_k_unknown_dtype_code_in_numpy_pxd, sizeof(__pyx_k_unknown_dtype_code_in_numpy_pxd), 0, 1, 0, 0},
  {&__pyx_n_s_upAxis, __pyx_k_upAxis, sizeof(__pyx_k_upAxis), 0, 0, 1, 1},
  {&__pyx_n_s_update, __pyx_k_update, sizeof(__pyx_k_update), 0, 0, 1, 1},
  {&__pyx_n_s_upper, __pyx_k_upper, sizeof(__pyx_k_upper), 0, 0, 1, 1},
  {&__pyx_n_s_velocity, __pyx_k_velocity, sizeof(__pyx_k_velocity), 0, 0, 1, 1},
  {&__pyx_n_s_vertexBase, __pyx_k_vertexBase, sizeof(__pyx_k_vertexBase), 0, 0, 1, 1},
  {&__pyx_n_s_vertexStride, __pyx_k_vertexStride, sizeof(__pyx_k_vertexStride), 0, 0, 1, 1},
  {&__pyx_n_s_w, __pyx_k_w, sizeof(__pyx_k_w), 0, 0, 1, 1},
  {&__pyx_n_s_worldTransform, __pyx_k_worldTransform, sizeof(__pyx_k_worldTransform), 0, 0, 1, 1},
  {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
  {&__pyx_kp_s_x_s_y_s_z_s_w_s, __pyx_k_x_s_y_s_z_s_w_s, sizeof(__pyx_k_x_s_y_s_z_s_w_s), 0, 0, 1, 0},
  {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
  {&__pyx_n_s_z, __pyx_k_z, sizeof(__pyx_k_z), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(0, 2, __pyx_L1_error)
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(1, 421, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(1, 1648, __pyx_L1_error)
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) __PYX_ERR(1, 1665, __pyx_L1_error)
  __pyx_builtin_ImportError = __Pyx_GetBuiltinName(__pyx_n_s_ImportError); if (!__pyx_builtin_ImportError) __PYX_ERR(2, 1013, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple_)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.quaternion cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.quaternion cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_kp_s_self_quaternion_cannot_be_conver); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "(tree fragment)":4
 *     raise TypeError("self.quaternion cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.quaternion cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__4 = PyTuple_Pack(1, __pyx_kp_s_self_quaternion_cannot_be_conver); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__5 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__9 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__10 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__13 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__15 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__16 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__17 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__18 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__19 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__20 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__21 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__22 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__22)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__23 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__24 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "bullet/bullet.pyx":421
 *         cdef PHY_ScalarType indexType = self._dtypeToScalarType(indexBase)
 *         if indexType == -1:
 *             raise ValueError("Unsupported index array type")             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr.m_numTriangles = numTriangles
 */
  __pyx_tuple__25 = PyTuple_Pack(1, __pyx_kp_s_Unsupported_index_array_type); if (unlikely(!__pyx_tuple__25)) __PYX_ERR(1, 421, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__25);
  __Pyx_GIVEREF(__pyx_tuple__25);

  /* "bullet/bullet.pyx":444
 *         cdef PHY_ScalarType vertexType = self._dtypeToScalarType(vertexBase)
 *         if vertexType == -1:
 *             raise ValueError("Unsupported index array type")             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr.m_numVertices = numVertices
 */
  __pyx_tuple__26 = PyTuple_Pack(1, __pyx_kp_s_Unsupported_index_array_type); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(1, 444, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__27 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__27)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__27);
  __Pyx_GIVEREF(__pyx_tuple__27);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__28 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__29 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__29)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__29);
  __Pyx_GIVEREF(__pyx_tuple__29);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__30 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);

  /* "bullet/bullet.pyx":504
 *         """
 *         if mesh.thisptr.m_vertexType == PHY_INTEGER:
 *             raise ValueError("XXX")             # <<<<<<<<<<<<<<
 *         cdef btTriangleIndexVertexArray *array
 *         array = <btTriangleIndexVertexArray*>self.thisptr
 */
  __pyx_tuple__31 = PyTuple_Pack(1, __pyx_n_s_XXX); if (unlikely(!__pyx_tuple__31)) __PYX_ERR(1, 504, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__31);
  __Pyx_GIVEREF(__pyx_tuple__31);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__32 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__32)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__33 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__33)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__33);
  __Pyx_GIVEREF(__pyx_tuple__33);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__34 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__35 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__35)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__35);
  __Pyx_GIVEREF(__pyx_tuple__35);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__36 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__36)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__37 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__37)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__37);
  __Pyx_GIVEREF(__pyx_tuple__37);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__38 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__38)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__38);
  __Pyx_GIVEREF(__pyx_tuple__38);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__39 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__39)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__39);
  __Pyx_GIVEREF(__pyx_tuple__39);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__40 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__40)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__40);
  __Pyx_GIVEREF(__pyx_tuple__40);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__41 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__41)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__41);
  __Pyx_GIVEREF(__pyx_tuple__41);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__42 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__42)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__42);
  __Pyx_GIVEREF(__pyx_tuple__42);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__43 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__43)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__43);
  __Pyx_GIVEREF(__pyx_tuple__43);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__44 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__44)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__44);
  __Pyx_GIVEREF(__pyx_tuple__44);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__45 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__45)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__45);
  __Pyx_GIVEREF(__pyx_tuple__45);

  /* "bullet/bullet.pyx":928
 *             motion = DefaultMotionState()
 *         if shape is None:
 *             shape = BoxShape(Vector3(0.5, 0.5, 0.5))             # <<<<<<<<<<<<<<
 * 
 *         self.motion = motion
 */
  __pyx_tuple__46 = PyTuple_Pack(3, __pyx_float_0_5, __pyx_float_0_5, __pyx_float_0_5); if (unlikely(!__pyx_tuple__46)) __PYX_ERR(1, 928, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__46);
  __Pyx_GIVEREF(__pyx_tuple__46);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__47 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__47)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__47);
  __Pyx_GIVEREF(__pyx_tuple__47);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__48 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__48)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__48);
  __Pyx_GIVEREF(__pyx_tuple__48);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__49 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__49)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__49);
  __Pyx_GIVEREF(__pyx_tuple__49);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__50 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__50)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__50);
  __Pyx_GIVEREF(__pyx_tuple__50);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__51 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__51)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__51);
  __Pyx_GIVEREF(__pyx_tuple__51);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__52 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__52)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__52);
  __Pyx_GIVEREF(__pyx_tuple__52);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__53 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__53)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__53);
  __Pyx_GIVEREF(__pyx_tuple__53);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__54 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__54)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__54);
  __Pyx_GIVEREF(__pyx_tuple__54);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__55 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__55)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__55);
  __Pyx_GIVEREF(__pyx_tuple__55);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__56 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__56)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__56);
  __Pyx_GIVEREF(__pyx_tuple__56);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__57 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__57)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__57);
  __Pyx_GIVEREF(__pyx_tuple__57);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__58 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__58)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__58);
  __Pyx_GIVEREF(__pyx_tuple__58);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__59 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__59)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__59);
  __Pyx_GIVEREF(__pyx_tuple__59);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__60 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__60)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__60);
  __Pyx_GIVEREF(__pyx_tuple__60);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__61 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__61)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__61);
  __Pyx_GIVEREF(__pyx_tuple__61);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__62 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__62)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__62);
  __Pyx_GIVEREF(__pyx_tuple__62);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__63 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__63)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__63);
  __Pyx_GIVEREF(__pyx_tuple__63);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__64 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__64)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__64);
  __Pyx_GIVEREF(__pyx_tuple__64);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__65 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__65)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__65);
  __Pyx_GIVEREF(__pyx_tuple__65);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__66 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__66)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__66);
  __Pyx_GIVEREF(__pyx_tuple__66);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__67 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__67)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__67);
  __Pyx_GIVEREF(__pyx_tuple__67);

  /* "(tree fragment)":4
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__68 = PyTuple_Pack(1, __pyx_kp_s_self_thisptr_cannot_be_converted); if (unlikely(!__pyx_tuple__68)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__68);
  __Pyx_GIVEREF(__pyx_tuple__68);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__69 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__69)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__69);
  __Pyx_GIVEREF(__pyx_tuple__69);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__70 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__70)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__70);
  __Pyx_GIVEREF(__pyx_tuple__70);

  /* "bullet/bullet.pyx":1521
 *             dispatcher = CollisionDispatcher()
 *         if broadphase is None:
 *             broadphase = AxisSweep3(Vector3(0, 0, 0), Vector3(10, 10, 10))             # <<<<<<<<<<<<<<
 * 
 *         Py_INCREF(dispatcher)
 */
  __pyx_tuple__71 = PyTuple_Pack(3, __pyx_int_0, __pyx_int_0, __pyx_int_0); if (unlikely(!__pyx_tuple__71)) __PYX_ERR(1, 1521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__71);
  __Pyx_GIVEREF(__pyx_tuple__71);
  __pyx_tuple__72 = PyTuple_Pack(3, __pyx_int_10, __pyx_int_10, __pyx_int_10); if (unlikely(!__pyx_tuple__72)) __PYX_ERR(1, 1521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__72);
  __Pyx_GIVEREF(__pyx_tuple__72);

  /* "bullet/bullet.pyx":1604
 *         """
 *         if collisionObject.thisptr.getCollisionShape() == NULL:
 *             raise ValueError(             # <<<<<<<<<<<<<<
 *                 "Cannot add CollisionObject without a CollisionShape")
 * 
 */
  __pyx_tuple__75 = PyTuple_Pack(1, __pyx_kp_s_Cannot_add_CollisionObject_witho); if (unlikely(!__pyx_tuple__75)) __PYX_ERR(1, 1604, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__75);
  __Pyx_GIVEREF(__pyx_tuple__75);

  /* "bullet/bullet.pyx":1665
 *                 rayResult.collisionObject = <object>btRes.m_collisionObject.getUserPointer()
 *                 if rayResult.collisionObject is None:
 *                     raise RuntimeError('Collision object not found in world.')             # <<<<<<<<<<<<<<
 *                 rayResult.collisionFilterGroup = btRes.m_collisionFilterGroup
 *                 rayResult.collisionFilterMask = btRes.m_collisionFilterMask
 */
  __pyx_tuple__76 = PyTuple_Pack(1, __pyx_kp_s_Collision_object_not_found_in_wo); if (unlikely(!__pyx_tuple__76)) __PYX_ERR(1, 1665, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__76);
  __Pyx_GIVEREF(__pyx_tuple__76);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__77 = PyTuple_Pack(1, __pyx_kp_s_self_broadphase_self_debugDraw_s); if (unlikely(!__pyx_tuple__77)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__77);
  __Pyx_GIVEREF(__pyx_tuple__77);

  /* "(tree fragment)":4
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__78 = PyTuple_Pack(1, __pyx_kp_s_self_broadphase_self_debugDraw_s); if (unlikely(!__pyx_tuple__78)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__78);
  __Pyx_GIVEREF(__pyx_tuple__78);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__79 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__79)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__79);
  __Pyx_GIVEREF(__pyx_tuple__79);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__80 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__80)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__80);
  __Pyx_GIVEREF(__pyx_tuple__80);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__81 = PyTuple_Pack(1, __pyx_kp_s_self_broadphase_self_debugDraw_s); if (unlikely(!__pyx_tuple__81)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__81);
  __Pyx_GIVEREF(__pyx_tuple__81);

  /* "(tree fragment)":4
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__82 = PyTuple_Pack(1, __pyx_kp_s_self_broadphase_self_debugDraw_s); if (unlikely(!__pyx_tuple__82)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__82);
  __Pyx_GIVEREF(__pyx_tuple__82);

  /* "bullet/bullet.pyx":1838
 *             solver = SequentialImpulseConstraintSolver()
 *         if broadphase is None:
 *             broadphase = AxisSweep3(Vector3(-100, -100, -100), Vector3(100, 100, 100))             # <<<<<<<<<<<<<<
 * 
 *         self.solver = solver
 */
  __pyx_tuple__83 = PyTuple_Pack(3, __pyx_int_neg_100, __pyx_int_neg_100, __pyx_int_neg_100); if (unlikely(!__pyx_tuple__83)) __PYX_ERR(1, 1838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__83);
  __Pyx_GIVEREF(__pyx_tuple__83);
  __pyx_tuple__84 = PyTuple_Pack(3, __pyx_int_100, __pyx_int_100, __pyx_int_100); if (unlikely(!__pyx_tuple__84)) __PYX_ERR(1, 1838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__84);
  __Pyx_GIVEREF(__pyx_tuple__84);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__86 = PyTuple_Pack(1, __pyx_kp_s_self_broadphase_self_debugDraw_s); if (unlikely(!__pyx_tuple__86)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__86);
  __Pyx_GIVEREF(__pyx_tuple__86);

  /* "(tree fragment)":4
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.broadphase,self.debugDraw,self.dispatcher,self.thisptr cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__87 = PyTuple_Pack(1, __pyx_kp_s_self_broadphase_self_debugDraw_s); if (unlikely(!__pyx_tuple__87)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__87);
  __Pyx_GIVEREF(__pyx_tuple__87);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":235
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
  __pyx_tuple__88 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_C_contiguous); if (unlikely(!__pyx_tuple__88)) __PYX_ERR(2, 235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__88);
  __Pyx_GIVEREF(__pyx_tuple__88);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":239
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
  __pyx_tuple__89 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_Fortran_contiguou); if (unlikely(!__pyx_tuple__89)) __PYX_ERR(2, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__89);
  __Pyx_GIVEREF(__pyx_tuple__89);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":276
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
  __pyx_tuple__90 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__90)) __PYX_ERR(2, 276, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__90);
  __Pyx_GIVEREF(__pyx_tuple__90);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":823
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
  __pyx_tuple__91 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor); if (unlikely(!__pyx_tuple__91)) __PYX_ERR(2, 823, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__91);
  __Pyx_GIVEREF(__pyx_tuple__91);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":827
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
  __pyx_tuple__92 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__92)) __PYX_ERR(2, 827, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__92);
  __Pyx_GIVEREF(__pyx_tuple__92);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":847
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
  __pyx_tuple__93 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor_2); if (unlikely(!__pyx_tuple__93)) __PYX_ERR(2, 847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__93);
  __Pyx_GIVEREF(__pyx_tuple__93);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1013
 *         _import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
  __pyx_tuple__94 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_multiarray_failed_to); if (unlikely(!__pyx_tuple__94)) __PYX_ERR(2, 1013, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__94);
  __Pyx_GIVEREF(__pyx_tuple__94);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1019
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
  __pyx_tuple__95 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__95)) __PYX_ERR(2, 1019, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__95);
  __Pyx_GIVEREF(__pyx_tuple__95);

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1025
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__96 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__96)) __PYX_ERR(2, 1025, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__96);
  __Pyx_GIVEREF(__pyx_tuple__96);

  /* "(tree fragment)":1
 * def __pyx_unpickle_BroadphaseProxy(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     if __pyx_checksum != 0x497a8da:
 *         from pickle import PickleError as __pyx_PickleError
 */
  __pyx_tuple__97 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__97)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__97);
  __Pyx_GIVEREF(__pyx_tuple__97);
  __pyx_codeobj__98 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__97, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_BroadphaseProxy, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__98)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  __pyx_umethod_PyDict_Type_keys.type = (PyObject*)&PyDict_Type;
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(1, 1, __pyx_L1_error);
  __pyx_float_0_5 = PyFloat_FromDouble(0.5); if (unlikely(!__pyx_float_0_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_10 = PyInt_FromLong(10); if (unlikely(!__pyx_int_10)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_100 = PyInt_FromLong(100); if (unlikely(!__pyx_int_100)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_77048026 = PyInt_FromLong(77048026L); if (unlikely(!__pyx_int_77048026)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_neg_100 = PyInt_FromLong(-100); if (unlikely(!__pyx_int_neg_100)) __PYX_ERR(1, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initbullet(void); /*proto*/
PyMODINIT_FUNC initbullet(void)
#else
PyMODINIT_FUNC PyInit_bullet(void); /*proto*/
PyMODINIT_FUNC PyInit_bullet(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        result = PyDict_SetItemString(moddict, to_name, value);
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__") < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__") < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__") < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__") < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static int __pyx_pymod_exec_bullet(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  short __pyx_t_3;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m && __pyx_m == __pyx_pyinit_module) return 0;
  #endif
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_bullet(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(1, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("bullet", __pyx_methods, __pyx_k_PyBullet_wraps_the_Bullet_Physi, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(1, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(1, 1, __pyx_L1_error)
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(1, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_bullet__bullet) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(1, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "bullet.bullet")) {
      if (unlikely(PyDict_SetItemString(modules, "bullet.bullet", __pyx_m) < 0)) __PYX_ERR(1, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  /*--- Global init code ---*/
  __pyx_v_6bullet_6bullet__actions = ((PyObject*)Py_None); Py_INCREF(Py_None);
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_CollisionObject) < 0) __PYX_ERR(1, 650, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_CollisionObject.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "CollisionObject", (PyObject *)&__pyx_type_6bullet_6bullet_CollisionObject) < 0) __PYX_ERR(1, 650, __pyx_L1_error)
  if (__pyx_type_6bullet_6bullet_CollisionObject.tp_weaklistoffset == 0) __pyx_type_6bullet_6bullet_CollisionObject.tp_weaklistoffset = offsetof(struct __pyx_obj_6bullet_6bullet_CollisionObject, __weakref__);
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_CollisionObject) < 0) __PYX_ERR(1, 650, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_CollisionObject = &__pyx_type_6bullet_6bullet_CollisionObject;
  __pyx_vtabptr_6bullet_6bullet_Vector3 = &__pyx_vtable_6bullet_6bullet_Vector3;
  __pyx_vtable_6bullet_6bullet_Vector3.frombtVector3 = (PyObject *(*)(btVector3))__pyx_f_6bullet_6bullet_7Vector3_frombtVector3;
  __pyx_vtable_6bullet_6bullet_Vector3.tobtVector3 = (btVector3 (*)(struct __pyx_obj_6bullet_6bullet_Vector3 *))__pyx_f_6bullet_6bullet_7Vector3_tobtVector3;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_Vector3) < 0) __PYX_ERR(1, 25, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_Vector3.tp_print = 0;
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_6bullet_6bullet_Vector3, "__mul__"); if (unlikely(!wrapper)) __PYX_ERR(1, 25, __pyx_L1_error)
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_6bullet_6bullet_7Vector3_4__mul__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_6bullet_6bullet_7Vector3_4__mul__.doc = __pyx_doc_6bullet_6bullet_7Vector3_4__mul__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_6bullet_6bullet_7Vector3_4__mul__;
    }
  }
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_6bullet_6bullet_Vector3, "__add__"); if (unlikely(!wrapper)) __PYX_ERR(1, 25, __pyx_L1_error)
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_6bullet_6bullet_7Vector3_6__add__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_6bullet_6bullet_7Vector3_6__add__.doc = __pyx_doc_6bullet_6bullet_7Vector3_6__add__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_6bullet_6bullet_7Vector3_6__add__;
    }
  }
  #endif
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_6bullet_6bullet_Vector3, "__sub__"); if (unlikely(!wrapper)) __PYX_ERR(1, 25, __pyx_L1_error)
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_6bullet_6bullet_7Vector3_8__sub__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_6bullet_6bullet_7Vector3_8__sub__.doc = __pyx_doc_6bullet_6bullet_7Vector3_8__sub__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_6bullet_6bullet_7Vector3_8__sub__;
    }
  }
  #endif
  if (__Pyx_SetVtable(__pyx_type_6bullet_6bullet_Vector3.tp_dict, __pyx_vtabptr_6bullet_6bullet_Vector3) < 0) __PYX_ERR(1, 25, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Vector3", (PyObject *)&__pyx_type_6bullet_6bullet_Vector3) < 0) __PYX_ERR(1, 25, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_Vector3) < 0) __PYX_ERR(1, 25, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_Vector3 = &__pyx_type_6bullet_6bullet_Vector3;
  __pyx_vtabptr_6bullet_6bullet_Quaternion = &__pyx_vtable_6bullet_6bullet_Quaternion;
  __pyx_vtable_6bullet_6bullet_Quaternion.frombtQuat = (PyObject *(*)(btQuaternion))__pyx_f_6bullet_6bullet_10Quaternion_frombtQuat;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_Quaternion) < 0) __PYX_ERR(1, 114, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_Quaternion.tp_print = 0;
  #if CYTHON_COMPILING_IN_CPYTHON
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)&__pyx_type_6bullet_6bullet_Quaternion, "__mul__"); if (unlikely(!wrapper)) __PYX_ERR(1, 114, __pyx_L1_error)
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_6bullet_6bullet_10Quaternion_6__mul__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_6bullet_6bullet_10Quaternion_6__mul__.doc = __pyx_doc_6bullet_6bullet_10Quaternion_6__mul__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_6bullet_6bullet_10Quaternion_6__mul__;
    }
  }
  #endif
  if (__Pyx_SetVtable(__pyx_type_6bullet_6bullet_Quaternion.tp_dict, __pyx_vtabptr_6bullet_6bullet_Quaternion) < 0) __PYX_ERR(1, 114, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "Quaternion", (PyObject *)&__pyx_type_6bullet_6bullet_Quaternion) < 0) __PYX_ERR(1, 114, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_Quaternion) < 0) __PYX_ERR(1, 114, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_Quaternion = &__pyx_type_6bullet_6bullet_Quaternion;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_CollisionShape) < 0) __PYX_ERR(1, 209, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_CollisionShape.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "CollisionShape", (PyObject *)&__pyx_type_6bullet_6bullet_CollisionShape) < 0) __PYX_ERR(1, 209, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_CollisionShape) < 0) __PYX_ERR(1, 209, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_CollisionShape = &__pyx_type_6bullet_6bullet_CollisionShape;
  __pyx_type_6bullet_6bullet_ConvexShape.tp_base = __pyx_ptype_6bullet_6bullet_CollisionShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_ConvexShape) < 0) __PYX_ERR(1, 230, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_ConvexShape.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "ConvexShape", (PyObject *)&__pyx_type_6bullet_6bullet_ConvexShape) < 0) __PYX_ERR(1, 230, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_ConvexShape) < 0) __PYX_ERR(1, 230, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_ConvexShape = &__pyx_type_6bullet_6bullet_ConvexShape;
  __pyx_type_6bullet_6bullet_Box2dShape.tp_base = __pyx_ptype_6bullet_6bullet_ConvexShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_Box2dShape) < 0) __PYX_ERR(1, 240, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_Box2dShape.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Box2dShape", (PyObject *)&__pyx_type_6bullet_6bullet_Box2dShape) < 0) __PYX_ERR(1, 240, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_Box2dShape) < 0) __PYX_ERR(1, 240, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_Box2dShape = &__pyx_type_6bullet_6bullet_Box2dShape;
  __pyx_type_6bullet_6bullet_BoxShape.tp_base = __pyx_ptype_6bullet_6bullet_ConvexShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_BoxShape) < 0) __PYX_ERR(1, 254, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_BoxShape.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "BoxShape", (PyObject *)&__pyx_type_6bullet_6bullet_BoxShape) < 0) __PYX_ERR(1, 254, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_BoxShape) < 0) __PYX_ERR(1, 254, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_BoxShape = &__pyx_type_6bullet_6bullet_BoxShape;
  __pyx_type_6bullet_6bullet_SphereShape.tp_base = __pyx_ptype_6bullet_6bullet_ConvexShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_SphereShape) < 0) __PYX_ERR(1, 268, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_SphereShape.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "SphereShape", (PyObject *)&__pyx_type_6bullet_6bullet_SphereShape) < 0) __PYX_ERR(1, 268, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_SphereShape) < 0) __PYX_ERR(1, 268, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_SphereShape = &__pyx_type_6bullet_6bullet_SphereShape;
  __pyx_type_6bullet_6bullet_CapsuleShape.tp_base = __pyx_ptype_6bullet_6bullet_ConvexShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_CapsuleShape) < 0) __PYX_ERR(1, 286, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_CapsuleShape.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "CapsuleShape", (PyObject *)&__pyx_type_6bullet_6bullet_CapsuleShape) < 0) __PYX_ERR(1, 286, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_CapsuleShape) < 0) __PYX_ERR(1, 286, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_CapsuleShape = &__pyx_type_6bullet_6bullet_CapsuleShape;
  __pyx_type_6bullet_6bullet_CylinderShape.tp_base = __pyx_ptype_6bullet_6bullet_ConvexShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_CylinderShape) < 0) __PYX_ERR(1, 298, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_CylinderShape.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "CylinderShape", (PyObject *)&__pyx_type_6bullet_6bullet_CylinderShape) < 0) __PYX_ERR(1, 298, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_CylinderShape) < 0) __PYX_ERR(1, 298, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_CylinderShape = &__pyx_type_6bullet_6bullet_CylinderShape;
  __pyx_type_6bullet_6bullet_CylinderShapeX.tp_base = __pyx_ptype_6bullet_6bullet_CylinderShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_CylinderShapeX) < 0) __PYX_ERR(1, 319, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_CylinderShapeX.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "CylinderShapeX", (PyObject *)&__pyx_type_6bullet_6bullet_CylinderShapeX) < 0) __PYX_ERR(1, 319, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_CylinderShapeX) < 0) __PYX_ERR(1, 319, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_CylinderShapeX = &__pyx_type_6bullet_6bullet_CylinderShapeX;
  __pyx_type_6bullet_6bullet_CylinderShapeZ.tp_base = __pyx_ptype_6bullet_6bullet_CylinderShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_CylinderShapeZ) < 0) __PYX_ERR(1, 332, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_CylinderShapeZ.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "CylinderShapeZ", (PyObject *)&__pyx_type_6bullet_6bullet_CylinderShapeZ) < 0) __PYX_ERR(1, 332, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_CylinderShapeZ) < 0) __PYX_ERR(1, 332, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_CylinderShapeZ = &__pyx_type_6bullet_6bullet_CylinderShapeZ;
  __pyx_type_6bullet_6bullet_StaticPlaneShape.tp_base = __pyx_ptype_6bullet_6bullet_CollisionShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_StaticPlaneShape) < 0) __PYX_ERR(1, 345, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_StaticPlaneShape.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "StaticPlaneShape", (PyObject *)&__pyx_type_6bullet_6bullet_StaticPlaneShape) < 0) __PYX_ERR(1, 345, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_StaticPlaneShape) < 0) __PYX_ERR(1, 345, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_StaticPlaneShape = &__pyx_type_6bullet_6bullet_StaticPlaneShape;
  __pyx_vtabptr_6bullet_6bullet_IndexedMesh = &__pyx_vtable_6bullet_6bullet_IndexedMesh;
  __pyx_vtable_6bullet_6bullet_IndexedMesh._dtypeToScalarType = (enum PHY_ScalarType (*)(struct __pyx_obj_6bullet_6bullet_IndexedMesh *, PyArrayObject *))__pyx_f_6bullet_6bullet_11IndexedMesh__dtypeToScalarType;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_IndexedMesh) < 0) __PYX_ERR(1, 357, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_IndexedMesh.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_6bullet_6bullet_IndexedMesh.tp_dict, __pyx_vtabptr_6bullet_6bullet_IndexedMesh) < 0) __PYX_ERR(1, 357, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "IndexedMesh", (PyObject *)&__pyx_type_6bullet_6bullet_IndexedMesh) < 0) __PYX_ERR(1, 357, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_IndexedMesh) < 0) __PYX_ERR(1, 357, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_IndexedMesh = &__pyx_type_6bullet_6bullet_IndexedMesh;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_StridingMeshInterface) < 0) __PYX_ERR(1, 457, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_StridingMeshInterface.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "StridingMeshInterface", (PyObject *)&__pyx_type_6bullet_6bullet_StridingMeshInterface) < 0) __PYX_ERR(1, 457, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_StridingMeshInterface) < 0) __PYX_ERR(1, 457, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_StridingMeshInterface = &__pyx_type_6bullet_6bullet_StridingMeshInterface;
  __pyx_type_6bullet_6bullet_TriangleIndexVertexArray.tp_base = __pyx_ptype_6bullet_6bullet_StridingMeshInterface;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_TriangleIndexVertexArray) < 0) __PYX_ERR(1, 481, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_TriangleIndexVertexArray.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "TriangleIndexVertexArray", (PyObject *)&__pyx_type_6bullet_6bullet_TriangleIndexVertexArray) < 0) __PYX_ERR(1, 481, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_TriangleIndexVertexArray) < 0) __PYX_ERR(1, 481, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_TriangleIndexVertexArray = &__pyx_type_6bullet_6bullet_TriangleIndexVertexArray;
  __pyx_type_6bullet_6bullet_BvhTriangleMeshShape.tp_base = __pyx_ptype_6bullet_6bullet_ConvexShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_BvhTriangleMeshShape) < 0) __PYX_ERR(1, 511, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_BvhTriangleMeshShape.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "BvhTriangleMeshShape", (PyObject *)&__pyx_type_6bullet_6bullet_BvhTriangleMeshShape) < 0) __PYX_ERR(1, 511, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_BvhTriangleMeshShape) < 0) __PYX_ERR(1, 511, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_BvhTriangleMeshShape = &__pyx_type_6bullet_6bullet_BvhTriangleMeshShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_Transform) < 0) __PYX_ERR(1, 544, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_Transform.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "Transform", (PyObject *)&__pyx_type_6bullet_6bullet_Transform) < 0) __PYX_ERR(1, 544, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_Transform) < 0) __PYX_ERR(1, 544, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_Transform = &__pyx_type_6bullet_6bullet_Transform;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_BroadphaseProxy) < 0) __PYX_ERR(1, 604, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_BroadphaseProxy.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "BroadphaseProxy", (PyObject *)&__pyx_type_6bullet_6bullet_BroadphaseProxy) < 0) __PYX_ERR(1, 604, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_BroadphaseProxy) < 0) __PYX_ERR(1, 604, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_BroadphaseProxy = &__pyx_type_6bullet_6bullet_BroadphaseProxy;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_MotionState) < 0) __PYX_ERR(1, 780, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_MotionState.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "MotionState", (PyObject *)&__pyx_type_6bullet_6bullet_MotionState) < 0) __PYX_ERR(1, 780, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_MotionState) < 0) __PYX_ERR(1, 780, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_MotionState = &__pyx_type_6bullet_6bullet_MotionState;
  __pyx_type_6bullet_6bullet_overridableMotionState.tp_base = __pyx_ptype_6bullet_6bullet_MotionState;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_overridableMotionState) < 0) __PYX_ERR(1, 844, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_overridableMotionState.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "overridableMotionState", (PyObject *)&__pyx_type_6bullet_6bullet_overridableMotionState) < 0) __PYX_ERR(1, 844, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_overridableMotionState) < 0) __PYX_ERR(1, 844, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_overridableMotionState = &__pyx_type_6bullet_6bullet_overridableMotionState;
  __pyx_type_6bullet_6bullet_DefaultMotionState.tp_base = __pyx_ptype_6bullet_6bullet_MotionState;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_DefaultMotionState) < 0) __PYX_ERR(1, 880, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_DefaultMotionState.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "DefaultMotionState", (PyObject *)&__pyx_type_6bullet_6bullet_DefaultMotionState) < 0) __PYX_ERR(1, 880, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_DefaultMotionState) < 0) __PYX_ERR(1, 880, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_DefaultMotionState = &__pyx_type_6bullet_6bullet_DefaultMotionState;
  __pyx_type_6bullet_6bullet_RigidBody.tp_base = __pyx_ptype_6bullet_6bullet_CollisionObject;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_RigidBody) < 0) __PYX_ERR(1, 906, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_RigidBody.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "RigidBody", (PyObject *)&__pyx_type_6bullet_6bullet_RigidBody) < 0) __PYX_ERR(1, 906, __pyx_L1_error)
  if (__pyx_type_6bullet_6bullet_RigidBody.tp_weaklistoffset == 0) __pyx_type_6bullet_6bullet_RigidBody.tp_weaklistoffset = offsetof(struct __pyx_obj_6bullet_6bullet_RigidBody, __pyx_base.__weakref__);
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_RigidBody) < 0) __PYX_ERR(1, 906, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_RigidBody = &__pyx_type_6bullet_6bullet_RigidBody;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_ActionInterface) < 0) __PYX_ERR(1, 1233, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_ActionInterface.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "ActionInterface", (PyObject *)&__pyx_type_6bullet_6bullet_ActionInterface) < 0) __PYX_ERR(1, 1233, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_ActionInterface) < 0) __PYX_ERR(1, 1233, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_ActionInterface = &__pyx_type_6bullet_6bullet_ActionInterface;
  __pyx_type_6bullet_6bullet_CharacterControllerInterface.tp_base = __pyx_ptype_6bullet_6bullet_ActionInterface;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_CharacterControllerInterface) < 0) __PYX_ERR(1, 1249, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_CharacterControllerInterface.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "CharacterControllerInterface", (PyObject *)&__pyx_type_6bullet_6bullet_CharacterControllerInterface) < 0) __PYX_ERR(1, 1249, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_CharacterControllerInterface) < 0) __PYX_ERR(1, 1249, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_CharacterControllerInterface = &__pyx_type_6bullet_6bullet_CharacterControllerInterface;
  __pyx_type_6bullet_6bullet_PairCachingGhostObject.tp_base = __pyx_ptype_6bullet_6bullet_CollisionObject;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_PairCachingGhostObject) < 0) __PYX_ERR(1, 1293, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_PairCachingGhostObject.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "PairCachingGhostObject", (PyObject *)&__pyx_type_6bullet_6bullet_PairCachingGhostObject) < 0) __PYX_ERR(1, 1293, __pyx_L1_error)
  if (__pyx_type_6bullet_6bullet_PairCachingGhostObject.tp_weaklistoffset == 0) __pyx_type_6bullet_6bullet_PairCachingGhostObject.tp_weaklistoffset = offsetof(struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject, __pyx_base.__weakref__);
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_PairCachingGhostObject) < 0) __PYX_ERR(1, 1293, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_PairCachingGhostObject = &__pyx_type_6bullet_6bullet_PairCachingGhostObject;
  __pyx_type_6bullet_6bullet_KinematicCharacterController.tp_base = __pyx_ptype_6bullet_6bullet_CharacterControllerInterface;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_KinematicCharacterController) < 0) __PYX_ERR(1, 1305, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_KinematicCharacterController.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "KinematicCharacterController", (PyObject *)&__pyx_type_6bullet_6bullet_KinematicCharacterController) < 0) __PYX_ERR(1, 1305, __pyx_L1_error)
  if (__pyx_type_6bullet_6bullet_KinematicCharacterController.tp_weaklistoffset == 0) __pyx_type_6bullet_6bullet_KinematicCharacterController.tp_weaklistoffset = offsetof(struct __pyx_obj_6bullet_6bullet_KinematicCharacterController, __weakref__);
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_KinematicCharacterController) < 0) __PYX_ERR(1, 1305, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_KinematicCharacterController = &__pyx_type_6bullet_6bullet_KinematicCharacterController;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_CollisionDispatcher) < 0) __PYX_ERR(1, 1355, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_CollisionDispatcher.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "CollisionDispatcher", (PyObject *)&__pyx_type_6bullet_6bullet_CollisionDispatcher) < 0) __PYX_ERR(1, 1355, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_CollisionDispatcher) < 0) __PYX_ERR(1, 1355, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_CollisionDispatcher = &__pyx_type_6bullet_6bullet_CollisionDispatcher;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_OverlappingPairCache) < 0) __PYX_ERR(1, 1383, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_OverlappingPairCache.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "OverlappingPairCache", (PyObject *)&__pyx_type_6bullet_6bullet_OverlappingPairCache) < 0) __PYX_ERR(1, 1383, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_OverlappingPairCache) < 0) __PYX_ERR(1, 1383, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_OverlappingPairCache = &__pyx_type_6bullet_6bullet_OverlappingPairCache;
  __pyx_type_6bullet_6bullet_HashedOverlappingPairCache.tp_base = __pyx_ptype_6bullet_6bullet_OverlappingPairCache;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_HashedOverlappingPairCache) < 0) __PYX_ERR(1, 1410, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_HashedOverlappingPairCache.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "HashedOverlappingPairCache", (PyObject *)&__pyx_type_6bullet_6bullet_HashedOverlappingPairCache) < 0) __PYX_ERR(1, 1410, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_HashedOverlappingPairCache) < 0) __PYX_ERR(1, 1410, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_HashedOverlappingPairCache = &__pyx_type_6bullet_6bullet_HashedOverlappingPairCache;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_BroadphaseInterface) < 0) __PYX_ERR(1, 1422, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_BroadphaseInterface.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "BroadphaseInterface", (PyObject *)&__pyx_type_6bullet_6bullet_BroadphaseInterface) < 0) __PYX_ERR(1, 1422, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_BroadphaseInterface) < 0) __PYX_ERR(1, 1422, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_BroadphaseInterface = &__pyx_type_6bullet_6bullet_BroadphaseInterface;
  __pyx_type_6bullet_6bullet_AxisSweep3.tp_base = __pyx_ptype_6bullet_6bullet_BroadphaseInterface;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_AxisSweep3) < 0) __PYX_ERR(1, 1449, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_AxisSweep3.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "AxisSweep3", (PyObject *)&__pyx_type_6bullet_6bullet_AxisSweep3) < 0) __PYX_ERR(1, 1449, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_AxisSweep3) < 0) __PYX_ERR(1, 1449, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_AxisSweep3 = &__pyx_type_6bullet_6bullet_AxisSweep3;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_ConstraintSolver) < 0) __PYX_ERR(1, 1469, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_ConstraintSolver.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "ConstraintSolver", (PyObject *)&__pyx_type_6bullet_6bullet_ConstraintSolver) < 0) __PYX_ERR(1, 1469, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_ConstraintSolver) < 0) __PYX_ERR(1, 1469, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_ConstraintSolver = &__pyx_type_6bullet_6bullet_ConstraintSolver;
  __pyx_type_6bullet_6bullet_SequentialImpulseConstraintSolver.tp_base = __pyx_ptype_6bullet_6bullet_ConstraintSolver;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_SequentialImpulseConstraintSolver) < 0) __PYX_ERR(1, 1484, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_SequentialImpulseConstraintSolver.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "SequentialImpulseConstraintSolver", (PyObject *)&__pyx_type_6bullet_6bullet_SequentialImpulseConstraintSolver) < 0) __PYX_ERR(1, 1484, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_SequentialImpulseConstraintSolver) < 0) __PYX_ERR(1, 1484, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_SequentialImpulseConstraintSolver = &__pyx_type_6bullet_6bullet_SequentialImpulseConstraintSolver;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_CollisionWorld) < 0) __PYX_ERR(1, 1500, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_CollisionWorld.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "CollisionWorld", (PyObject *)&__pyx_type_6bullet_6bullet_CollisionWorld) < 0) __PYX_ERR(1, 1500, __pyx_L1_error)
  if (__pyx_type_6bullet_6bullet_CollisionWorld.tp_weaklistoffset == 0) __pyx_type_6bullet_6bullet_CollisionWorld.tp_weaklistoffset = offsetof(struct __pyx_obj_6bullet_6bullet_CollisionWorld, __weakref__);
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_CollisionWorld) < 0) __PYX_ERR(1, 1500, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_CollisionWorld = &__pyx_type_6bullet_6bullet_CollisionWorld;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_RayResult) < 0) __PYX_ERR(1, 1702, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_RayResult.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "RayResult", (PyObject *)&__pyx_type_6bullet_6bullet_RayResult) < 0) __PYX_ERR(1, 1702, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_RayResult) < 0) __PYX_ERR(1, 1702, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_RayResult = &__pyx_type_6bullet_6bullet_RayResult;
  __pyx_type_6bullet_6bullet_DynamicsWorld.tp_base = __pyx_ptype_6bullet_6bullet_CollisionWorld;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_DynamicsWorld) < 0) __PYX_ERR(1, 1760, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_DynamicsWorld.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "DynamicsWorld", (PyObject *)&__pyx_type_6bullet_6bullet_DynamicsWorld) < 0) __PYX_ERR(1, 1760, __pyx_L1_error)
  if (__pyx_type_6bullet_6bullet_DynamicsWorld.tp_weaklistoffset == 0) __pyx_type_6bullet_6bullet_DynamicsWorld.tp_weaklistoffset = offsetof(struct __pyx_obj_6bullet_6bullet_DynamicsWorld, __pyx_base.__weakref__);
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_DynamicsWorld) < 0) __PYX_ERR(1, 1760, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_DynamicsWorld = &__pyx_type_6bullet_6bullet_DynamicsWorld;
  __pyx_type_6bullet_6bullet_DiscreteDynamicsWorld.tp_base = __pyx_ptype_6bullet_6bullet_DynamicsWorld;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_DiscreteDynamicsWorld) < 0) __PYX_ERR(1, 1819, __pyx_L1_error)
  __pyx_type_6bullet_6bullet_DiscreteDynamicsWorld.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "DiscreteDynamicsWorld", (PyObject *)&__pyx_type_6bullet_6bullet_DiscreteDynamicsWorld) < 0) __PYX_ERR(1, 1819, __pyx_L1_error)
  if (__pyx_type_6bullet_6bullet_DiscreteDynamicsWorld.tp_weaklistoffset == 0) __pyx_type_6bullet_6bullet_DiscreteDynamicsWorld.tp_weaklistoffset = offsetof(struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld, __pyx_base.__pyx_base.__weakref__);
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bullet_6bullet_DiscreteDynamicsWorld) < 0) __PYX_ERR(1, 1819, __pyx_L1_error)
  __pyx_ptype_6bullet_6bullet_DiscreteDynamicsWorld = &__pyx_type_6bullet_6bullet_DiscreteDynamicsWorld;
  /*--- Type import code ---*/
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "type", 
  #if CYTHON_COMPILING_IN_PYPY
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  0); if (unlikely(!__pyx_ptype_7cpython_4type_type)) __PYX_ERR(3, 9, __pyx_L1_error)
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType("numpy", "dtype", sizeof(PyArray_Descr), 0); if (unlikely(!__pyx_ptype_5numpy_dtype)) __PYX_ERR(2, 163, __pyx_L1_error)
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType("numpy", "flatiter", sizeof(PyArrayIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_flatiter)) __PYX_ERR(2, 185, __pyx_L1_error)
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType("numpy", "broadcast", sizeof(PyArrayMultiIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_broadcast)) __PYX_ERR(2, 189, __pyx_L1_error)
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType("numpy", "ndarray", sizeof(PyArrayObject), 0); if (unlikely(!__pyx_ptype_5numpy_ndarray)) __PYX_ERR(2, 198, __pyx_L1_error)
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType("numpy", "ufunc", sizeof(PyUFuncObject), 0); if (unlikely(!__pyx_ptype_5numpy_ufunc)) __PYX_ERR(2, 885, __pyx_L1_error)
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif

  /* "bullet/bullet.pyx":129
 * 
 *     @classmethod
 *     def fromScalars(cls, btScalar x, btScalar y, btScalar z, btScalar w):             # <<<<<<<<<<<<<<
 *         """
 *         Construct a new Quaternion from four scalar components.
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_6bullet_6bullet_Quaternion, __pyx_n_s_fromScalars); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "bullet/bullet.pyx":128
 * 
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromScalars(cls, btScalar x, btScalar y, btScalar z, btScalar w):
 *         """
 */
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_6bullet_6bullet_Quaternion->tp_dict, __pyx_n_s_fromScalars, __pyx_t_2) < 0) __PYX_ERR(1, 129, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_6bullet_6bullet_Quaternion);

  /* "bullet/bullet.pyx":139
 * 
 *     @classmethod
 *     def fromAxisAngle(cls, Vector3 axis not None, btScalar angle):             # <<<<<<<<<<<<<<
 *         """
 *         Construct a new Quaternion from an axis and a rotation around that axis.
 */
  __pyx_t_2 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_6bullet_6bullet_Quaternion, __pyx_n_s_fromAxisAngle); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 139, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "bullet/bullet.pyx":138
 * 
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromAxisAngle(cls, Vector3 axis not None, btScalar angle):
 *         """
 */
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_6bullet_6bullet_Quaternion->tp_dict, __pyx_n_s_fromAxisAngle, __pyx_t_1) < 0) __PYX_ERR(1, 139, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_6bullet_6bullet_Quaternion);

  /* "bullet/bullet.pyx":617
 *     cdef public short int collisionFilterMask
 * 
 *     DefaultFilter = _DefaultFilter             # <<<<<<<<<<<<<<
 *     AllFilter = _AllFilter
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(btBroadphaseProxy::DefaultFilter); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 617, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_6bullet_6bullet_BroadphaseProxy->tp_dict, __pyx_n_s_DefaultFilter, __pyx_t_1) < 0) __PYX_ERR(1, 617, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_6bullet_6bullet_BroadphaseProxy);

  /* "bullet/bullet.pyx":618
 * 
 *     DefaultFilter = _DefaultFilter
 *     AllFilter = _AllFilter             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, short int collisionFilterGroup, short int collisionFilterMask):
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(btBroadphaseProxy::AllFilter); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_6bullet_6bullet_BroadphaseProxy->tp_dict, __pyx_n_s_AllFilter, __pyx_t_1) < 0) __PYX_ERR(1, 618, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_6bullet_6bullet_BroadphaseProxy);

  /* "bullet/bullet.pyx":626
 * 
 * 
 * ACTIVE_TAG = _ACTIVE_TAG             # <<<<<<<<<<<<<<
 * ISLAND_SLEEPING = _ISLAND_SLEEPING
 * WANTS_DEACTIVATION = _WANTS_DEACTIVATION
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(ACTIVE_TAG); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 626, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ACTIVE_TAG, __pyx_t_1) < 0) __PYX_ERR(1, 626, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":627
 * 
 * ACTIVE_TAG = _ACTIVE_TAG
 * ISLAND_SLEEPING = _ISLAND_SLEEPING             # <<<<<<<<<<<<<<
 * WANTS_DEACTIVATION = _WANTS_DEACTIVATION
 * DISABLE_DEACTIVATION = _DISABLE_DEACTIVATION
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(ISLAND_SLEEPING); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 627, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ISLAND_SLEEPING, __pyx_t_1) < 0) __PYX_ERR(1, 627, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":628
 * ACTIVE_TAG = _ACTIVE_TAG
 * ISLAND_SLEEPING = _ISLAND_SLEEPING
 * WANTS_DEACTIVATION = _WANTS_DEACTIVATION             # <<<<<<<<<<<<<<
 * DISABLE_DEACTIVATION = _DISABLE_DEACTIVATION
 * DISABLE_SIMULATION = _DISABLE_SIMULATION
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(WANTS_DEACTIVATION); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 628, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_WANTS_DEACTIVATION, __pyx_t_1) < 0) __PYX_ERR(1, 628, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":629
 * ISLAND_SLEEPING = _ISLAND_SLEEPING
 * WANTS_DEACTIVATION = _WANTS_DEACTIVATION
 * DISABLE_DEACTIVATION = _DISABLE_DEACTIVATION             # <<<<<<<<<<<<<<
 * DISABLE_SIMULATION = _DISABLE_SIMULATION
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(DISABLE_DEACTIVATION); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 629, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DISABLE_DEACTIVATION, __pyx_t_1) < 0) __PYX_ERR(1, 629, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":630
 * WANTS_DEACTIVATION = _WANTS_DEACTIVATION
 * DISABLE_DEACTIVATION = _DISABLE_DEACTIVATION
 * DISABLE_SIMULATION = _DISABLE_SIMULATION             # <<<<<<<<<<<<<<
 * 
 * CF_STATIC_OBJECT = _CF_STATIC_OBJECT
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(DISABLE_SIMULATION); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 630, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DISABLE_SIMULATION, __pyx_t_1) < 0) __PYX_ERR(1, 630, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":632
 * DISABLE_SIMULATION = _DISABLE_SIMULATION
 * 
 * CF_STATIC_OBJECT = _CF_STATIC_OBJECT             # <<<<<<<<<<<<<<
 * CF_KINEMATIC_OBJECT = _CF_KINEMATIC_OBJECT
 * CF_NO_CONTACT_RESPONSE = _CF_NO_CONTACT_RESPONSE
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(btCollisionObject::CF_STATIC_OBJECT); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CF_STATIC_OBJECT, __pyx_t_1) < 0) __PYX_ERR(1, 632, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":633
 * 
 * CF_STATIC_OBJECT = _CF_STATIC_OBJECT
 * CF_KINEMATIC_OBJECT = _CF_KINEMATIC_OBJECT             # <<<<<<<<<<<<<<
 * CF_NO_CONTACT_RESPONSE = _CF_NO_CONTACT_RESPONSE
 * CF_CUSTOM_MATERIAL_CALLBACK = _CF_CUSTOM_MATERIAL_CALLBACK
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(btCollisionObject::CF_KINEMATIC_OBJECT); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CF_KINEMATIC_OBJECT, __pyx_t_1) < 0) __PYX_ERR(1, 633, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":634
 * CF_STATIC_OBJECT = _CF_STATIC_OBJECT
 * CF_KINEMATIC_OBJECT = _CF_KINEMATIC_OBJECT
 * CF_NO_CONTACT_RESPONSE = _CF_NO_CONTACT_RESPONSE             # <<<<<<<<<<<<<<
 * CF_CUSTOM_MATERIAL_CALLBACK = _CF_CUSTOM_MATERIAL_CALLBACK
 * CF_CHARACTER_OBJECT = _CF_CHARACTER_OBJECT
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(btCollisionObject::CF_NO_CONTACT_RESPONSE); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 634, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CF_NO_CONTACT_RESPONSE, __pyx_t_1) < 0) __PYX_ERR(1, 634, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":635
 * CF_KINEMATIC_OBJECT = _CF_KINEMATIC_OBJECT
 * CF_NO_CONTACT_RESPONSE = _CF_NO_CONTACT_RESPONSE
 * CF_CUSTOM_MATERIAL_CALLBACK = _CF_CUSTOM_MATERIAL_CALLBACK             # <<<<<<<<<<<<<<
 * CF_CHARACTER_OBJECT = _CF_CHARACTER_OBJECT
 * CF_DISABLE_VISUALIZE_OBJECT = _CF_DISABLE_VISUALIZE_OBJECT
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(btCollisionObject::CF_CUSTOM_MATERIAL_CALLBACK); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 635, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CF_CUSTOM_MATERIAL_CALLBACK, __pyx_t_1) < 0) __PYX_ERR(1, 635, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":636
 * CF_NO_CONTACT_RESPONSE = _CF_NO_CONTACT_RESPONSE
 * CF_CUSTOM_MATERIAL_CALLBACK = _CF_CUSTOM_MATERIAL_CALLBACK
 * CF_CHARACTER_OBJECT = _CF_CHARACTER_OBJECT             # <<<<<<<<<<<<<<
 * CF_DISABLE_VISUALIZE_OBJECT = _CF_DISABLE_VISUALIZE_OBJECT
 * CF_DISABLE_SPU_COLLISION_PROCESSING = _CF_DISABLE_SPU_COLLISION_PROCESSING
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(btCollisionObject::CF_CHARACTER_OBJECT); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 636, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CF_CHARACTER_OBJECT, __pyx_t_1) < 0) __PYX_ERR(1, 636, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":637
 * CF_CUSTOM_MATERIAL_CALLBACK = _CF_CUSTOM_MATERIAL_CALLBACK
 * CF_CHARACTER_OBJECT = _CF_CHARACTER_OBJECT
 * CF_DISABLE_VISUALIZE_OBJECT = _CF_DISABLE_VISUALIZE_OBJECT             # <<<<<<<<<<<<<<
 * CF_DISABLE_SPU_COLLISION_PROCESSING = _CF_DISABLE_SPU_COLLISION_PROCESSING
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(btCollisionObject::CF_DISABLE_VISUALIZE_OBJECT); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 637, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CF_DISABLE_VISUALIZE_OBJECT, __pyx_t_1) < 0) __PYX_ERR(1, 637, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":638
 * CF_CHARACTER_OBJECT = _CF_CHARACTER_OBJECT
 * CF_DISABLE_VISUALIZE_OBJECT = _CF_DISABLE_VISUALIZE_OBJECT
 * CF_DISABLE_SPU_COLLISION_PROCESSING = _CF_DISABLE_SPU_COLLISION_PROCESSING             # <<<<<<<<<<<<<<
 * 
 * NO_DEBUG = _NO_DEBUG
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(btCollisionObject::CF_DISABLE_SPU_COLLISION_PROCESSING); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 638, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CF_DISABLE_SPU_COLLISION_PROCESS, __pyx_t_1) < 0) __PYX_ERR(1, 638, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":640
 * CF_DISABLE_SPU_COLLISION_PROCESSING = _CF_DISABLE_SPU_COLLISION_PROCESSING
 * 
 * NO_DEBUG = _NO_DEBUG             # <<<<<<<<<<<<<<
 * DRAW_WIREFRAME = _DRAW_WIREFRAME
 * DRAW_AABB = _DRAW_AABB
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(btIDebugDraw::DBG_NoDebug); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 640, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NO_DEBUG, __pyx_t_1) < 0) __PYX_ERR(1, 640, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":641
 * 
 * NO_DEBUG = _NO_DEBUG
 * DRAW_WIREFRAME = _DRAW_WIREFRAME             # <<<<<<<<<<<<<<
 * DRAW_AABB = _DRAW_AABB
 * DRAW_FEATURES_TEXT = _DRAW_FEATURES_TEXT
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(btIDebugDraw::DBG_DrawWireframe); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 641, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DRAW_WIREFRAME, __pyx_t_1) < 0) __PYX_ERR(1, 641, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":642
 * NO_DEBUG = _NO_DEBUG
 * DRAW_WIREFRAME = _DRAW_WIREFRAME
 * DRAW_AABB = _DRAW_AABB             # <<<<<<<<<<<<<<
 * DRAW_FEATURES_TEXT = _DRAW_FEATURES_TEXT
 * DRAW_CONTACT_POINTS = _DRAW_CONTACT_POINTS
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(btIDebugDraw::DBG_DrawAabb); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 642, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DRAW_AABB, __pyx_t_1) < 0) __PYX_ERR(1, 642, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":643
 * DRAW_WIREFRAME = _DRAW_WIREFRAME
 * DRAW_AABB = _DRAW_AABB
 * DRAW_FEATURES_TEXT = _DRAW_FEATURES_TEXT             # <<<<<<<<<<<<<<
 * DRAW_CONTACT_POINTS = _DRAW_CONTACT_POINTS
 * DRAW_TEXT = _DRAW_TEXT
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(btIDebugDraw::DBG_DrawFeaturesText); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DRAW_FEATURES_TEXT, __pyx_t_1) < 0) __PYX_ERR(1, 643, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":644
 * DRAW_AABB = _DRAW_AABB
 * DRAW_FEATURES_TEXT = _DRAW_FEATURES_TEXT
 * DRAW_CONTACT_POINTS = _DRAW_CONTACT_POINTS             # <<<<<<<<<<<<<<
 * DRAW_TEXT = _DRAW_TEXT
 * DRAW_CONSTRAINTS = _DRAW_CONSTRAINTS
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(btIDebugDraw::DBG_DrawContactPoints); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 644, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DRAW_CONTACT_POINTS, __pyx_t_1) < 0) __PYX_ERR(1, 644, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":645
 * DRAW_FEATURES_TEXT = _DRAW_FEATURES_TEXT
 * DRAW_CONTACT_POINTS = _DRAW_CONTACT_POINTS
 * DRAW_TEXT = _DRAW_TEXT             # <<<<<<<<<<<<<<
 * DRAW_CONSTRAINTS = _DRAW_CONSTRAINTS
 * DRAW_CONSTRAINT_LIMITS = _DRAW_CONSTRAINT_LIMITS
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(btIDebugDraw::DBG_DrawText); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DRAW_TEXT, __pyx_t_1) < 0) __PYX_ERR(1, 645, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":646
 * DRAW_CONTACT_POINTS = _DRAW_CONTACT_POINTS
 * DRAW_TEXT = _DRAW_TEXT
 * DRAW_CONSTRAINTS = _DRAW_CONSTRAINTS             # <<<<<<<<<<<<<<
 * DRAW_CONSTRAINT_LIMITS = _DRAW_CONSTRAINT_LIMITS
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(btIDebugDraw::DBG_DrawConstraints); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 646, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DRAW_CONSTRAINTS, __pyx_t_1) < 0) __PYX_ERR(1, 646, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":647
 * DRAW_TEXT = _DRAW_TEXT
 * DRAW_CONSTRAINTS = _DRAW_CONSTRAINTS
 * DRAW_CONSTRAINT_LIMITS = _DRAW_CONSTRAINT_LIMITS             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(btIDebugDraw::DBG_DrawConstraintLimits); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 647, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DRAW_CONSTRAINT_LIMITS, __pyx_t_1) < 0) __PYX_ERR(1, 647, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bullet/bullet.pyx":950
 * 
 *     @classmethod
 *     def fromConstructionInfo(cls, MotionState motion,             # <<<<<<<<<<<<<<
 *                              CollisionShape shape, btScalar mass,
 *                              Vector3 inertia, Transform worldTransform,
 */
  __pyx_t_1 = __Pyx_GetNameInClass((PyObject *)__pyx_ptype_6bullet_6bullet_RigidBody, __pyx_n_s_fromConstructionInfo); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 950, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "bullet/bullet.pyx":949
 * 
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def fromConstructionInfo(cls, MotionState motion,
 *                              CollisionShape shape, btScalar mass,
 */
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 949, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_6bullet_6bullet_RigidBody->tp_dict, __pyx_n_s_fromConstructionInfo, __pyx_t_2) < 0) __PYX_ERR(1, 950, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_6bullet_6bullet_RigidBody);

  /* "bullet/bullet.pyx":1581
 * 
 *     def addCollisionObject(self, CollisionObject collisionObject,
 *                            short int collisionFilterGroup=BroadphaseProxy.DefaultFilter,             # <<<<<<<<<<<<<<
 *                            short int collisionFilterMask=BroadphaseProxy.AllFilter):
 *         """
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_6bullet_6bullet_BroadphaseProxy), __pyx_n_s_DefaultFilter); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1581, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_As_short(__pyx_t_2); if (unlikely((__pyx_t_3 == (short)-1) && PyErr_Occurred())) __PYX_ERR(1, 1581, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_k__73 = __pyx_t_3;

  /* "bullet/bullet.pyx":1582
 *     def addCollisionObject(self, CollisionObject collisionObject,
 *                            short int collisionFilterGroup=BroadphaseProxy.DefaultFilter,
 *                            short int collisionFilterMask=BroadphaseProxy.AllFilter):             # <<<<<<<<<<<<<<
 *         """
 *         Add a new CollisionObject to this CollisionWorld.
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_6bullet_6bullet_BroadphaseProxy), __pyx_n_s_AllFilter); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1582, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_As_short(__pyx_t_2); if (unlikely((__pyx_t_3 == (short)-1) && PyErr_Occurred())) __PYX_ERR(1, 1582, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_k__74 = __pyx_t_3;

  /* "bullet/bullet.pyx":1758
 * 
 * 
 * cdef dict _actions = {}             # <<<<<<<<<<<<<<
 * 
 * cdef class DynamicsWorld(CollisionWorld):
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1758, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_XGOTREF(__pyx_v_6bullet_6bullet__actions);
  __Pyx_DECREF_SET(__pyx_v_6bullet_6bullet__actions, ((PyObject*)__pyx_t_2));
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;

  /* "bullet/bullet.pyx":1894
 *                        btScalar timeStep,
 *                        int maxSubSteps = 1,
 *                        btScalar fixedTimeStep = 1. / 60.):             # <<<<<<<<<<<<<<
 *         """
 *         Advance time in the simulation.
 */
  __pyx_k__85 = (1. / 60.);

  /* "(tree fragment)":1
 * def __pyx_unpickle_BroadphaseProxy(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     if __pyx_checksum != 0x497a8da:
 *         from pickle import PickleError as __pyx_PickleError
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_6bullet_6bullet_1__pyx_unpickle_BroadphaseProxy, NULL, __pyx_n_s_bullet_bullet); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_BroadphaseProxy, __pyx_t_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "bullet/bullet.pyx":1
 * # Copyright (c) Jean-Paul Calderone             # <<<<<<<<<<<<<<
 * # See LICENSE for details.
 * 
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "../../../../../usr/local/lib/python3.4/dist-packages/Cython/Includes/numpy/__init__.pxd":1021
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init bullet.bullet", 0, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init bullet.bullet");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* ArgTypeTest */
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    else if (exact) {
        #if PY_MAJOR_VERSION == 2
        if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(__Pyx_TypeCheck(obj, type))) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL
#include "frameobject.h"
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = f->f_localsplus;
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, int nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif
#endif

/* PyCFunctionFastCall */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    int flags = PyCFunction_GET_FLAGS(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {
        return (*((__Pyx_PyCFunctionFastWithKeywords)meth)) (self, args, nargs, NULL);
    } else {
        return (*((__Pyx_PyCFunctionFast)meth)) (self, args, nargs);
    }
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
    if (likely(PyCFunction_Check(func))) {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (PyCFunction_GET_FLAGS(func) & METH_FASTCALL) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* PyObjectCallNoArg */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, NULL, 0);
    }
#endif
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || __Pyx_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* WriteUnraisableException */
  static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback, CYTHON_UNUSED int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_PyThreadState_declare
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
#ifdef _MSC_VER
    else state = (PyGILState_STATE)-1;
#endif
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

/* KeywordStringCheck */
  static int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

/* PyErrExceptionMatches */
  #if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    if (unlikely(PyTuple_Check(err)))
        return __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    return __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* GetAttr */
  static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *o, PyObject *n) {
#if CYTHON_USE_TYPE_SLOTS
#if PY_MAJOR_VERSION >= 3
    if (likely(PyUnicode_Check(n)))
#else
    if (likely(PyString_Check(n)))
#endif
        return __Pyx_PyObject_GetAttrStr(o, n);
#endif
    return PyObject_GetAttr(o, n);
}

/* GetAttr3 */
  static PyObject *__Pyx_GetAttr3Default(PyObject *d) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        return NULL;
    __Pyx_PyErr_Clear();
    Py_INCREF(d);
    return d;
}
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *o, PyObject *n, PyObject *d) {
    PyObject *r = __Pyx_GetAttr(o, n);
    return (likely(r)) ? r : __Pyx_GetAttr3Default(d);
}

/* GetModuleGlobalName */
  static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
    result = PyDict_GetItem(__pyx_d, name);
    if (likely(result)) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

/* SaveResetException */
    #if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    #if PY_VERSION_HEX >= 0x030700A2
    *type = tstate->exc_state.exc_type;
    *value = tstate->exc_state.exc_value;
    *tb = tstate->exc_state.exc_traceback;
    #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    #endif
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if PY_VERSION_HEX >= 0x030700A2
    tmp_type = tstate->exc_state.exc_type;
    tmp_value = tstate->exc_state.exc_value;
    tmp_tb = tstate->exc_state.exc_traceback;
    tstate->exc_state.exc_type = type;
    tstate->exc_state.exc_value = value;
    tstate->exc_state.exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* GetException */
    #if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb) {
#endif
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if PY_VERSION_HEX >= 0x030700A2
    tmp_type = tstate->exc_state.exc_type;
    tmp_value = tstate->exc_state.exc_value;
    tmp_tb = tstate->exc_state.exc_traceback;
    tstate->exc_state.exc_type = local_type;
    tstate->exc_state.exc_value = local_value;
    tstate->exc_state.exc_traceback = local_tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* ExtTypeTest */
      static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(__Pyx_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

/* UnpackUnboundCMethod */
      static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {
    PyObject *method;
    method = __Pyx_PyObject_GetAttrStr(target->type, *target->method_name);
    if (unlikely(!method))
        return -1;
    target->method = method;
#if CYTHON_COMPILING_IN_CPYTHON
    #if PY_MAJOR_VERSION >= 3
    if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))
    #endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject*) method;
        target->func = descr->d_method->ml_meth;
        target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST);
    }
#endif
    return 0;
}

/* CallUnboundCMethod0 */
      static PyObject* __Pyx__CallUnboundCMethod0(__Pyx_CachedCFunction* cfunc, PyObject* self) {
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_ASSUME_SAFE_MACROS
    args = PyTuple_New(1);
    if (unlikely(!args)) goto bad;
    Py_INCREF(self);
    PyTuple_SET_ITEM(args, 0, self);
#else
    args = PyTuple_Pack(1, self);
    if (unlikely(!args)) goto bad;
#endif
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    Py_DECREF(args);
bad:
    return result;
}

/* py_dict_keys */
      static CYTHON_INLINE PyObject* __Pyx_PyDict_Keys(PyObject* d) {
    if (PY_MAJOR_VERSION >= 3)
        return __Pyx_CallUnboundCMethod0(&__pyx_umethod_PyDict_Type_keys, d);
    else
        return PyDict_Keys(d);
}

/* RaiseTooManyValuesToUnpack */
      static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* RaiseNeedMoreValuesToUnpack */
      static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* IterFinish */
      static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_FAST_THREAD_STATE
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

/* UnpackItemEndCheck */
      static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

/* Import */
      static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* ImportFrom */
      static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* GetItemInt */
      static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely((0 <= wrapped_i) & (wrapped_i < PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely((0 <= wrapped_i) & (wrapped_i < PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely((n >= 0) & (n < PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* HasAttr */
      static CYTHON_INLINE int __Pyx_HasAttr(PyObject *o, PyObject *n) {
    PyObject *r;
    if (unlikely(!__Pyx_PyBaseString_Check(n))) {
        PyErr_SetString(PyExc_TypeError,
                        "hasattr(): attribute name must be string");
        return -1;
    }
    r = __Pyx_GetAttr(o, n);
    if (unlikely(!r)) {
        PyErr_Clear();
        return 0;
    } else {
        Py_DECREF(r);
        return 1;
    }
}

/* RaiseNoneIterError */
      static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

/* CallNextTpTraverse */
      static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_traverse != current_tp_traverse)
        type = type->tp_base;
    while (type && type->tp_traverse == current_tp_traverse)
        type = type->tp_base;
    if (type && type->tp_traverse)
        return type->tp_traverse(obj, v, a);
    return 0;
}

/* CallNextTpClear */
      static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_clear) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_clear != current_tp_clear)
        type = type->tp_base;
    while (type && type->tp_clear == current_tp_clear)
        type = type->tp_base;
    if (type && type->tp_clear)
        type->tp_clear(obj);
}

/* SetupReduce */
      static int __Pyx_setup_reduce_is_named(PyObject* meth, PyObject* name) {
  int ret;
  PyObject *name_attr;
  name_attr = __Pyx_PyObject_GetAttrStr(meth, __pyx_n_s_name);
  if (likely(name_attr)) {
      ret = PyObject_RichCompareBool(name_attr, name, Py_EQ);
  } else {
      ret = -1;
  }
  if (unlikely(ret < 0)) {
      PyErr_Clear();
      ret = 0;
  }
  Py_XDECREF(name_attr);
  return ret;
}
static int __Pyx_setup_reduce(PyObject* type_obj) {
    int ret = 0;
    PyObject *object_reduce = NULL;
    PyObject *object_reduce_ex = NULL;
    PyObject *reduce = NULL;
    PyObject *reduce_ex = NULL;
    PyObject *reduce_cython = NULL;
    PyObject *setstate = NULL;
    PyObject *setstate_cython = NULL;
#if CYTHON_USE_PYTYPE_LOOKUP
    if (_PyType_Lookup((PyTypeObject*)type_obj, __pyx_n_s_getstate)) goto GOOD;
#else
    if (PyObject_HasAttr(type_obj, __pyx_n_s_getstate)) goto GOOD;
#endif
#if CYTHON_USE_PYTYPE_LOOKUP
    object_reduce_ex = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto BAD;
#else
    object_reduce_ex = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto BAD;
#endif
    reduce_ex = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_ex); if (unlikely(!reduce_ex)) goto BAD;
    if (reduce_ex == object_reduce_ex) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_reduce = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto BAD;
#else
        object_reduce = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto BAD;
#endif
        reduce = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce); if (unlikely(!reduce)) goto BAD;
        if (reduce == object_reduce || __Pyx_setup_reduce_is_named(reduce, __pyx_n_s_reduce_cython)) {
            reduce_cython = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_cython); if (unlikely(!reduce_cython)) goto BAD;
            ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce, reduce_cython); if (unlikely(ret < 0)) goto BAD;
            ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce_cython); if (unlikely(ret < 0)) goto BAD;
            setstate = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_setstate);
            if (!setstate) PyErr_Clear();
            if (!setstate || __Pyx_setup_reduce_is_named(setstate, __pyx_n_s_setstate_cython)) {
                setstate_cython = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_setstate_cython); if (unlikely(!setstate_cython)) goto BAD;
                ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate, setstate_cython); if (unlikely(ret < 0)) goto BAD;
                ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate_cython); if (unlikely(ret < 0)) goto BAD;
            }
            PyType_Modified((PyTypeObject*)type_obj);
        }
    }
    goto GOOD;
BAD:
    if (!PyErr_Occurred())
        PyErr_Format(PyExc_RuntimeError, "Unable to initialize pickling for %s", ((PyTypeObject*)type_obj)->tp_name);
    ret = -1;
GOOD:
#if !CYTHON_USE_PYTYPE_LOOKUP
    Py_XDECREF(object_reduce);
    Py_XDECREF(object_reduce_ex);
#endif
    Py_XDECREF(reduce);
    Py_XDECREF(reduce_ex);
    Py_XDECREF(reduce_cython);
    Py_XDECREF(setstate);
    Py_XDECREF(setstate_cython);
    return ret;
}

/* SetVTable */
      static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

/* GetNameInClass */
      static PyObject *__Pyx_GetGlobalNameAfterAttributeLookup(PyObject *name) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        return NULL;
    __Pyx_PyErr_Clear();
    return __Pyx_GetModuleGlobalName(name);
}
static PyObject *__Pyx_GetNameInClass(PyObject *nmspace, PyObject *name) {
    PyObject *result;
    result = __Pyx_PyObject_GetAttrStr(nmspace, name);
    if (!result) {
        result = __Pyx_GetGlobalNameAfterAttributeLookup(name);
    }
    return result;
}

/* ClassMethod */
      static PyObject* __Pyx_Method_ClassMethod(PyObject *method) {
#if CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM <= 0x05080000
    if (PyObject_TypeCheck(method, &PyWrapperDescr_Type)) {
        return PyClassMethod_New(method);
    }
#else
#if CYTHON_COMPILING_IN_PYSTON || CYTHON_COMPILING_IN_PYPY
    if (PyMethodDescr_Check(method)) {
#else
    static PyTypeObject *methoddescr_type = NULL;
    if (methoddescr_type == NULL) {
       PyObject *meth = PyObject_GetAttrString((PyObject*)&PyList_Type, "append");
       if (!meth) return NULL;
       methoddescr_type = Py_TYPE(meth);
       Py_DECREF(meth);
    }
    if (__Pyx_TypeCheck(method, methoddescr_type)) {
#endif
        PyMethodDescrObject *descr = (PyMethodDescrObject *)method;
        #if PY_VERSION_HEX < 0x03020000
        PyTypeObject *d_type = descr->d_type;
        #else
        PyTypeObject *d_type = descr->d_common.d_type;
        #endif
        return PyDescr_NewClassMethod(d_type, descr->d_method);
    }
#endif
    else if (PyMethod_Check(method)) {
        return PyClassMethod_New(PyMethod_GET_FUNCTION(method));
    }
    else if (PyCFunction_Check(method)) {
        return PyClassMethod_New(method);
    }
#ifdef __Pyx_CyFunction_USED
    else if (__Pyx_TypeCheck(method, __pyx_CyFunctionType)) {
        return PyClassMethod_New(method);
    }
#endif
    PyErr_SetString(PyExc_TypeError,
                   "Class-level classmethod() can only be called on "
                   "a method_descriptor or instance method.");
    return NULL;
}

/* CLineInTraceback */
        #ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(CYTHON_UNUSED PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
      use_cline = PyDict_GetItem(*cython_runtime_dict, __pyx_n_s_cline_in_traceback);
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (PyObject_Not(use_cline) != 0) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
        static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
        #include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_short(short value) {
    const short neg_one = (short) -1, const_zero = (short) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(short) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(short) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(short) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(short) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(short) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(short),
                                     little, !is_unsigned);
    }
}

/* CIntFromPyVerify */
        #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* Print */
        #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static PyObject *__Pyx_GetStdout(void) {
    PyObject *f = PySys_GetObject((char *)"stdout");
    if (!f) {
        PyErr_SetString(PyExc_RuntimeError, "lost sys.stdout");
    }
    return f;
}
static int __Pyx_Print(PyObject* f, PyObject *arg_tuple, int newline) {
    int i;
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    for (i=0; i < PyTuple_GET_SIZE(arg_tuple); i++) {
        PyObject* v;
        if (PyFile_SoftSpace(f, 1)) {
            if (PyFile_WriteString(" ", f) < 0)
                goto error;
        }
        v = PyTuple_GET_ITEM(arg_tuple, i);
        if (PyFile_WriteObject(v, f, Py_PRINT_RAW) < 0)
            goto error;
        if (PyString_Check(v)) {
            char *s = PyString_AsString(v);
            Py_ssize_t len = PyString_Size(v);
            if (len > 0) {
                switch (s[len-1]) {
                    case ' ': break;
                    case '\f': case '\r': case '\n': case '\t': case '\v':
                        PyFile_SoftSpace(f, 0);
                        break;
                    default:  break;
                }
            }
        }
    }
    if (newline) {
        if (PyFile_WriteString("\n", f) < 0)
            goto error;
        PyFile_SoftSpace(f, 0);
    }
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
}
#else
static int __Pyx_Print(PyObject* stream, PyObject *arg_tuple, int newline) {
    PyObject* kwargs = 0;
    PyObject* result = 0;
    PyObject* end_string;
    if (unlikely(!__pyx_print)) {
        __pyx_print = PyObject_GetAttr(__pyx_b, __pyx_n_s_print);
        if (!__pyx_print)
            return -1;
    }
    if (stream) {
        kwargs = PyDict_New();
        if (unlikely(!kwargs))
            return -1;
        if (unlikely(PyDict_SetItem(kwargs, __pyx_n_s_file, stream) < 0))
            goto bad;
        if (!newline) {
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                goto bad;
            if (PyDict_SetItem(kwargs, __pyx_n_s_end, end_string) < 0) {
                Py_DECREF(end_string);
                goto bad;
            }
            Py_DECREF(end_string);
        }
    } else if (!newline) {
        if (unlikely(!__pyx_print_kwargs)) {
            __pyx_print_kwargs = PyDict_New();
            if (unlikely(!__pyx_print_kwargs))
                return -1;
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                return -1;
            if (PyDict_SetItem(__pyx_print_kwargs, __pyx_n_s_end, end_string) < 0) {
                Py_DECREF(end_string);
                return -1;
            }
            Py_DECREF(end_string);
        }
        kwargs = __pyx_print_kwargs;
    }
    result = PyObject_Call(__pyx_print, arg_tuple, kwargs);
    if (unlikely(kwargs) && (kwargs != __pyx_print_kwargs))
        Py_DECREF(kwargs);
    if (!result)
        return -1;
    Py_DECREF(result);
    return 0;
bad:
    if (kwargs != __pyx_print_kwargs)
        Py_XDECREF(kwargs);
    return -1;
}
#endif

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_bool(bool value) {
    const bool neg_one = (bool) -1, const_zero = (bool) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(bool) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(bool) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(bool) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(bool) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(bool) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(bool),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* Declarations */
        #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
        #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabsf(b.real) >= fabsf(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                float r = b.imag / b.real;
                float s = 1.0 / (b.real + b.imag * r);
                return __pyx_t_float_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            float r = b.real / b.imag;
            float s = 1.0 / (b.imag + b.real * r);
            return __pyx_t_float_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            float denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_float_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(a, a);
                    case 3:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, a);
                    case 4:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = powf(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2f(0, -1);
                }
            } else {
                r = __Pyx_c_abs_float(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

/* Declarations */
        #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
        #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabs(b.real) >= fabs(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                double r = b.imag / b.real;
                double s = 1.0 / (b.real + b.imag * r);
                return __pyx_t_double_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            double r = b.real / b.imag;
            double s = 1.0 / (b.imag + b.real * r);
            return __pyx_t_double_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            double denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_double_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(a, a);
                    case 3:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, a);
                    case 4:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = pow(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2(0, -1);
                }
            } else {
                r = __Pyx_c_abs_double(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__NPY_TYPES(enum NPY_TYPES value) {
    const enum NPY_TYPES neg_one = (enum NPY_TYPES) -1, const_zero = (enum NPY_TYPES) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum NPY_TYPES) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum NPY_TYPES) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(enum NPY_TYPES) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum NPY_TYPES) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(enum NPY_TYPES),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
        static CYTHON_INLINE short __Pyx_PyInt_As_short(PyObject *x) {
    const short neg_one = (short) -1, const_zero = (short) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(short) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(short, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (short) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (short) 0;
                case  1: __PYX_VERIFY_RETURN_INT(short, digit, digits[0])
                case 2:
                    if (8 * sizeof(short) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(short, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(short) >= 2 * PyLong_SHIFT) {
                            return (short) (((((short)digits[1]) << PyLong_SHIFT) | (short)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(short) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(short, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(short) >= 3 * PyLong_SHIFT) {
                            return (short) (((((((short)digits[2]) << PyLong_SHIFT) | (short)digits[1]) << PyLong_SHIFT) | (short)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(short) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(short, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(short) >= 4 * PyLong_SHIFT) {
                            return (short) (((((((((short)digits[3]) << PyLong_SHIFT) | (short)digits[2]) << PyLong_SHIFT) | (short)digits[1]) << PyLong_SHIFT) | (short)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (short) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(short) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(short, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(short) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(short, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (short) 0;
                case -1: __PYX_VERIFY_RETURN_INT(short, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(short,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(short) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(short, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(short) - 1 > 2 * PyLong_SHIFT) {
                            return (short) (((short)-1)*(((((short)digits[1]) << PyLong_SHIFT) | (short)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(short) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(short, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(short) - 1 > 2 * PyLong_SHIFT) {
                            return (short) ((((((short)digits[1]) << PyLong_SHIFT) | (short)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(short) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(short, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(short) - 1 > 3 * PyLong_SHIFT) {
                            return (short) (((short)-1)*(((((((short)digits[2]) << PyLong_SHIFT) | (short)digits[1]) << PyLong_SHIFT) | (short)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(short) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(short, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(short) - 1 > 3 * PyLong_SHIFT) {
                            return (short) ((((((((short)digits[2]) << PyLong_SHIFT) | (short)digits[1]) << PyLong_SHIFT) | (short)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(short) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(short, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(short) - 1 > 4 * PyLong_SHIFT) {
                            return (short) (((short)-1)*(((((((((short)digits[3]) << PyLong_SHIFT) | (short)digits[2]) << PyLong_SHIFT) | (short)digits[1]) << PyLong_SHIFT) | (short)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(short) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(short, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(short) - 1 > 4 * PyLong_SHIFT) {
                            return (short) ((((((((((short)digits[3]) << PyLong_SHIFT) | (short)digits[2]) << PyLong_SHIFT) | (short)digits[1]) << PyLong_SHIFT) | (short)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(short) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(short, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(short) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(short, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            short val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (short) -1;
        }
    } else {
        short val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (short) -1;
        val = __Pyx_PyInt_As_short(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to short");
    return (short) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to short");
    return (short) -1;
}

/* CIntFromPy */
        static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
        static CYTHON_INLINE bool __Pyx_PyInt_As_bool(PyObject *x) {
    const bool neg_one = (bool) -1, const_zero = (bool) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(bool) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(bool, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (bool) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (bool) 0;
                case  1: __PYX_VERIFY_RETURN_INT(bool, digit, digits[0])
                case 2:
                    if (8 * sizeof(bool) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(bool, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(bool) >= 2 * PyLong_SHIFT) {
                            return (bool) (((((bool)digits[1]) << PyLong_SHIFT) | (bool)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(bool) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(bool, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(bool) >= 3 * PyLong_SHIFT) {
                            return (bool) (((((((bool)digits[2]) << PyLong_SHIFT) | (bool)digits[1]) << PyLong_SHIFT) | (bool)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(bool) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(bool, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(bool) >= 4 * PyLong_SHIFT) {
                            return (bool) (((((((((bool)digits[3]) << PyLong_SHIFT) | (bool)digits[2]) << PyLong_SHIFT) | (bool)digits[1]) << PyLong_SHIFT) | (bool)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (bool) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(bool) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(bool, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(bool) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(bool, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (bool) 0;
                case -1: __PYX_VERIFY_RETURN_INT(bool, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(bool,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(bool) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(bool, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(bool) - 1 > 2 * PyLong_SHIFT) {
                            return (bool) (((bool)-1)*(((((bool)digits[1]) << PyLong_SHIFT) | (bool)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(bool) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(bool, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(bool) - 1 > 2 * PyLong_SHIFT) {
                            return (bool) ((((((bool)digits[1]) << PyLong_SHIFT) | (bool)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(bool) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(bool, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(bool) - 1 > 3 * PyLong_SHIFT) {
                            return (bool) (((bool)-1)*(((((((bool)digits[2]) << PyLong_SHIFT) | (bool)digits[1]) << PyLong_SHIFT) | (bool)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(bool) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(bool, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(bool) - 1 > 3 * PyLong_SHIFT) {
                            return (bool) ((((((((bool)digits[2]) << PyLong_SHIFT) | (bool)digits[1]) << PyLong_SHIFT) | (bool)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(bool) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(bool, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(bool) - 1 > 4 * PyLong_SHIFT) {
                            return (bool) (((bool)-1)*(((((((((bool)digits[3]) << PyLong_SHIFT) | (bool)digits[2]) << PyLong_SHIFT) | (bool)digits[1]) << PyLong_SHIFT) | (bool)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(bool) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(bool, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(bool) - 1 > 4 * PyLong_SHIFT) {
                            return (bool) ((((((((((bool)digits[3]) << PyLong_SHIFT) | (bool)digits[2]) << PyLong_SHIFT) | (bool)digits[1]) << PyLong_SHIFT) | (bool)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(bool) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(bool, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(bool) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(bool, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            bool val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (bool) -1;
        }
    } else {
        bool val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (bool) -1;
        val = __Pyx_PyInt_As_bool(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to bool");
    return (bool) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to bool");
    return (bool) -1;
}

/* CIntFromPy */
        static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CIntFromPy */
        static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
    const size_t neg_one = (size_t) -1, const_zero = (size_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 2 * PyLong_SHIFT) {
                            return (size_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 3 * PyLong_SHIFT) {
                            return (size_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 4 * PyLong_SHIFT) {
                            return (size_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (size_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(size_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) ((((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) ((((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) ((((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

/* PrintOne */
        #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static int __Pyx_PrintOne(PyObject* f, PyObject *o) {
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    if (PyFile_SoftSpace(f, 0)) {
        if (PyFile_WriteString(" ", f) < 0)
            goto error;
    }
    if (PyFile_WriteObject(o, f, Py_PRINT_RAW) < 0)
        goto error;
    if (PyFile_WriteString("\n", f) < 0)
        goto error;
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
    /* the line below is just to avoid C compiler
     * warnings about unused functions */
    return __Pyx_Print(f, NULL, 0);
}
#else
static int __Pyx_PrintOne(PyObject* stream, PyObject *o) {
    int res;
    PyObject* arg_tuple = PyTuple_Pack(1, o);
    if (unlikely(!arg_tuple))
        return -1;
    res = __Pyx_Print(stream, arg_tuple, 1);
    Py_DECREF(arg_tuple);
    return res;
}
#endif

/* FastTypeChecks */
        #if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CheckBinaryVersion */
        static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* ModuleImport */
        #ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

/* TypeImport */
        #ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. Expected %zd, got %zd",
            module_name, class_name, basicsize, size);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s has the wrong size, try recompiling. Expected %zd, got %zd",
            module_name, class_name, basicsize, size);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

/* InitStrings */
        static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            PyErr_Clear();
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(x);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
